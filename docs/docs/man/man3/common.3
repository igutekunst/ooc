.TH "common" 3 "Sat Sep 28 2019" "Object-Oriented-C" \" -*- nroff -*-
.ad l
.nh
.SH NAME
common
.SH SYNOPSIS
.br
.PP
.SS "Functions"

.in +1c
.ti -1c
.RI "const void * \fB_new\fP (size_t argc,\&.\&.\&.)"
.br
.RI "Create a new ooc object\&. "
.ti -1c
.RI "const void * \fBtype\fP (const void *self)"
.br
.RI "get ooc class object "
.ti -1c
.RI "void \fBdel\fP (const void *object)"
.br
.RI "delete an ooc object "
.ti -1c
.RI "size_t \fBsize\fP (const void *_object)"
.br
.RI "get size in bytes "
.ti -1c
.RI "const char * \fBclsname\fP (const void *_self)"
.br
.ti -1c
.RI "void \fBprint\fP (const void *_object)"
.br
.ti -1c
.RI "size_t \fBlen\fP (const void *_object)"
.br
.ti -1c
.RI "const void * \fBcopy\fP (const void *_object)"
.br
.ti -1c
.RI "bool \fBequals\fP (const void *_object, const void *_other)"
.br
.in -1c
.SH "Detailed Description"
.PP 

.SH "Function Documentation"
.PP 
.SS "const void* _new (size_t argc,  \&.\&.\&.)"

.PP
Create a new ooc object\&. This function allocates memory and returns a void* to a newly allocated ooc object, or NULL on failure\&.
.PP
_class should be a pointer to an ooc class object, such as \fBString\fP or \fBHashMap\fP\&. 
.PP
\fBParameters:\fP
.RS 4
\fIclass\fP ooc class object 
.br
\fIargc\fP number of arguments provided 
.RE
.PP
\fBReturns:\fP
.RS 4
new object or type class, or NULL
.RE
.PP
\fBParameters:\fP
.RS 4
\fIclass\fP OOC class to instantiate 
.br
\fI\&.\&.\&.\fP arguments to initialize class 
.RE
.PP
\fBReturns:\fP
.RS 4
.RE
.PP

.PP
Definition at line 17 of file object\&.c\&.
.PP
References ObjectHeader::class, MAGIC, class_header::object_init, and class_header::size\&.
.SS "const char* clsname (const void * _self)"

.PP
Definition at line 120 of file object\&.c\&.
.PP
References get_class_header_msg(), and class_header::object_name\&.
.PP
Referenced by append(), get_item(), iter(), len(), List_get_item(), obj_add(), obj_to_int(), and String_equal()\&.
.SS "const void* copy (const void * _object)"

.PP
Definition at line 136 of file object\&.c\&.
.PP
References class_header::copy, and get_class_header_msg()\&.
.PP
Referenced by main()\&.
.SS "void del (const void * object)"

.PP
delete an ooc object 
.PP
\fBParameters:\fP
.RS 4
\fIobject\fP 
.RE
.PP

.PP
Definition at line 44 of file object\&.c\&.
.PP
References get_class_header_msg(), and class_header::object_deinit\&.
.SS "bool equals (const void * _object, const void * _other)"

.PP
Definition at line 150 of file object\&.c\&.
.PP
References get_class_header_msg()\&.
.PP
Referenced by get_HashMap(), and internal_insert_HashMap()\&.
.SS "size_t len (const void * _object)"

.PP
Definition at line 106 of file object\&.c\&.
.PP
References clsname(), get_class_header_msg(), and class_header::get_len\&.
.PP
Referenced by __construct__String(), FNV32(), and String_append()\&.
.SS "void print (const void * _object)"

.PP
Definition at line 74 of file object\&.c\&.
.PP
References get_class_header_msg(), and class_header::print\&.
.PP
Referenced by main()\&.
.SS "size_t size (const void * _object)"

.PP
get size in bytes Get the full size in bytes of an ooc object\&. This is implementation defined, and may not include the size of items contained in a collection for example 
.PP
\fBParameters:\fP
.RS 4
\fI_object\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
size in bytes of object 
.RE
.PP

.PP
Definition at line 87 of file object\&.c\&.
.PP
References get_class_header_msg(), and class_header::get_size\&.
.PP
Referenced by __construct__Person(), __construct__String(), and String_append()\&.
.SS "const void* type (const void * self)"

.PP
get ooc class object 
.PP
\fBParameters:\fP
.RS 4
\fIself\fP ooc object 
.RE
.PP
\fBReturns:\fP
.RS 4
ooc class of a given ooc object 
.RE
.PP

.PP
Definition at line 98 of file object\&.c\&.
.PP
References get_class_header_msg()\&.
.PP
Referenced by String_append(), and String_equal()\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for Object-Oriented-C from the source code\&.
