<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="README_8md" kind="file" language="Markdown">
    <compoundname>README.md</compoundname>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline><highlight class="normal">Objected<sp/>Oriented<sp/>C<sp/>{#mainpage}</highlight></codeline>
<codeline><highlight class="normal">===================</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Experimenting<sp/>with<sp/>&quot;Object<sp/>Oriented<sp/>C&quot;.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">This<sp/>library<sp/>is<sp/>a<sp/>toy<sp/>implementation<sp/>of<sp/>&quot;objects&quot;<sp/>in<sp/>C,<sp/>with<sp/>the<sp/>idea</highlight></codeline>
<codeline><highlight class="normal">to<sp/>enable<sp/>dynamic<sp/>dispatch<sp/>and<sp/>polymorphism<sp/>of<sp/>a<sp/>set<sp/>of<sp/>carefully<sp/>written<sp/>&quot;classes&quot;<sp/>.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">This<sp/>library<sp/>aims<sp/>to<sp/>enable:</highlight></codeline>
<codeline><highlight class="normal">*<sp/>Less<sp/>boilerplate<sp/>code<sp/>to<sp/>do<sp/>common<sp/>tasks</highlight></codeline>
<codeline><highlight class="normal">*<sp/>A<sp/>friendlier<sp/>standard<sp/>library</highlight></codeline>
<codeline><highlight class="normal">*<sp/>A<sp/>&quot;batteries<sp/>included&quot;<sp/>C<sp/>like<sp/>environment.</highlight></codeline>
<codeline></codeline>
<codeline></codeline>
<codeline><highlight class="normal">The<sp/>design<sp/>of<sp/>both<sp/>the<sp/>API<sp/>and<sp/>internals<sp/>are<sp/>inspired<sp/>by<sp/>Python,<sp/>though<sp/>no<sp/>attempt<sp/>has<sp/>been</highlight></codeline>
<codeline><highlight class="normal">made<sp/>to<sp/>mimic<sp/>python<sp/>APIs<sp/>exactly,<sp/>or<sp/>interface<sp/>with<sp/>Python,<sp/>though<sp/>this<sp/>may<sp/>be<sp/>a<sp/>goal<sp/>in<sp/>the<sp/></highlight></codeline>
<codeline><highlight class="normal">future.<sp/></highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">This<sp/>library<sp/>is<sp/>completely<sp/>experimental,<sp/>and<sp/>has<sp/>not<sp/>been<sp/>used<sp/>in<sp/>any<sp/>real<sp/>projects<sp/>as<sp/>far<sp/>as<sp/>I<sp/>know.<sp/></highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">It&apos;s<sp/>here<sp/>to<sp/>share<sp/>some<sp/>ideas<sp/>with<sp/>friends<sp/>and<sp/>the<sp/>world.<sp/>My<sp/>hope<sp/>is<sp/>it<sp/>will<sp/>be<sp/>useful<sp/>one<sp/>day,<sp/>at<sp/>which<sp/>point</highlight></codeline>
<codeline><highlight class="normal">I<sp/>will<sp/>promote<sp/>it<sp/>with<sp/>more<sp/>confidence!</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##Working<sp/>Modules</highlight></codeline>
<codeline><highlight class="normal">*<sp/>HashMap</highlight></codeline>
<codeline><highlight class="normal">*<sp/>String</highlight></codeline>
<codeline><highlight class="normal">*<sp/>Int</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Example<sp/></highlight></codeline>
<codeline><highlight class="normal">````</highlight></codeline>
<codeline><highlight class="normal">#include<sp/>&lt;libooc/hashmap.h&gt;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">int<sp/>main(int<sp/>argc,<sp/>char<sp/>*<sp/>argv[])<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>struct<sp/>HashMap<sp/>*<sp/>h<sp/>=<sp/>new(HashMap);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>///<sp/>etc</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">````</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##Future<sp/>Work</highlight></codeline>
<codeline><highlight class="normal">*<sp/>Add<sp/>functionality<sp/>to<sp/>Int</highlight></codeline>
<codeline><highlight class="normal">*<sp/>Add<sp/>Float<sp/>and<sp/>BigInt<sp/>support</highlight></codeline>
<codeline><highlight class="normal">*<sp/>Add<sp/>list</highlight></codeline>
<codeline><highlight class="normal">*<sp/>Add<sp/>referencing<sp/>counting</highlight></codeline>
<codeline><highlight class="normal">*<sp/>Traits</highlight></codeline>
<codeline><highlight class="normal">*<sp/>Add<sp/>functional<sp/>functions<sp/>such<sp/>as<sp/>map,<sp/>reduce</highlight></codeline>
<codeline><highlight class="normal">*<sp/>Flesh<sp/>out<sp/>list</highlight></codeline>
<codeline><highlight class="normal">*<sp/>Add<sp/>internal<sp/>argument<sp/>type<sp/>checking<sp/>macros/functions</highlight></codeline>
<codeline><highlight class="normal">*<sp/>Add<sp/>error<sp/>handling<sp/>system,<sp/>and<sp/>unify<sp/>error<sp/>messages</highlight></codeline>
<codeline><highlight class="normal">*<sp/>Add<sp/>global<sp/>free<sp/>list,<sp/>so<sp/>you<sp/>can<sp/>call<sp/>`del_all`<sp/>or<sp/>similar</highlight></codeline>
<codeline><highlight class="normal">*<sp/>Add<sp/>File<sp/>type<sp/>that<sp/>supports<sp/>iteration</highlight></codeline>
<codeline><highlight class="normal">*<sp/>Add<sp/>more<sp/>functions<sp/>to<sp/>String</highlight></codeline>
<codeline><highlight class="normal">*<sp/>Adding<sp/>sorting<sp/>to<sp/>list</highlight></codeline>
<codeline><highlight class="normal">*<sp/>Add<sp/>Tuple<sp/>type</highlight></codeline>
<codeline></codeline>
    </programlisting>
    <location file="/Users/igutek/Documents/Projects/ooc/README.md"/>
  </compounddef>
</doxygen>
