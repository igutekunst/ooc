<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="person_8c" kind="file" language="C++">
    <compoundname>person.c</compoundname>
    <includes refid="person_8h" local="no">ooc/person.h</includes>
    <includes refid="object__internal_8h" local="yes">object_internal.h</includes>
    <incdepgraph>
      <node id="219">
        <label>stdbool.h</label>
      </node>
      <node id="212">
        <label>/Users/igutek/Documents/Projects/ooc/src/person.c</label>
        <link refid="person_8c"/>
        <childnode refid="213" relation="include">
        </childnode>
        <childnode refid="223" relation="include">
        </childnode>
      </node>
      <node id="218">
        <label>stdarg.h</label>
      </node>
      <node id="220">
        <label>stdint.h</label>
      </node>
      <node id="217">
        <label>stdlib.h</label>
      </node>
      <node id="223">
        <label>object_internal.h</label>
        <link refid="object__internal_8h"/>
        <childnode refid="220" relation="include">
        </childnode>
        <childnode refid="217" relation="include">
        </childnode>
        <childnode refid="218" relation="include">
        </childnode>
        <childnode refid="219" relation="include">
        </childnode>
        <childnode refid="224" relation="include">
        </childnode>
      </node>
      <node id="213">
        <label>ooc/person.h</label>
        <link refid="person_8h"/>
        <childnode refid="214" relation="include">
        </childnode>
        <childnode refid="222" relation="include">
        </childnode>
      </node>
      <node id="215">
        <label>stddef.h</label>
      </node>
      <node id="224">
        <label>trait_math_internal.h</label>
        <link refid="trait__math__internal_8h"/>
      </node>
      <node id="221">
        <label>ooc/object_va_args.h</label>
        <link refid="object__va__args_8h"/>
        <childnode refid="217" relation="include">
        </childnode>
      </node>
      <node id="214">
        <label>object.h</label>
        <link refid="object_8h"/>
        <childnode refid="215" relation="include">
        </childnode>
        <childnode refid="216" relation="include">
        </childnode>
        <childnode refid="217" relation="include">
        </childnode>
        <childnode refid="218" relation="include">
        </childnode>
        <childnode refid="219" relation="include">
        </childnode>
        <childnode refid="220" relation="include">
        </childnode>
        <childnode refid="221" relation="include">
        </childnode>
      </node>
      <node id="222">
        <label>string.h</label>
        <link refid="string_8h"/>
        <childnode refid="214" relation="include">
        </childnode>
        <childnode refid="222" relation="include">
        </childnode>
      </node>
      <node id="216">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="structPersonClass" prot="public">PersonClass</innerclass>
      <sectiondef kind="var">
      <memberdef kind="variable" id="person_8c_1ae629a5cc6fd7522471c9556267053bff" prot="public" static="no" mutable="no">
        <type>struct <ref refid="structPersonClass" kindref="compound">PersonClass</ref></type>
        <definition>struct PersonClass person_class</definition>
        <argsstring></argsstring>
        <name>person_class</name>
        <initializer>= {
    .class = {.magic = <ref refid="object__internal_8h_1a94630370ae389fb1189282fa0742f310" kindref="member">MAGIC</ref>, 
              .<ref refid="group__common_1gafac8564ed88a6f8585f043fc6b2fa7e1" kindref="member">size</ref>  = (sizeof(struct <ref refid="structPerson" kindref="compound">Person</ref>)),
              .<ref refid="group__common_1ga34dc6ab72cfd51381e8173226484e827" kindref="member">print</ref> = <ref refid="person_8c_1ac8f165e3cdab75026b74bdb45923d84c" kindref="member">print_Person</ref>,
              .get_size = <ref refid="person_8c_1ac756035079421633f84f42223847fbc4" kindref="member">get_size_Person</ref>,
              .object_init = <ref refid="person_8c_1adaf633e0102ae03a6b233de044b1f162" kindref="member">__construct__Person</ref>,
             }
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/igutek/Documents/Projects/ooc/src/person.c" line="9" column="1" bodyfile="/Users/igutek/Documents/Projects/ooc/src/person.c" bodystart="15" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="person_8c_1a588179b669d31ab467e542d8b997361f" prot="public" static="no" mutable="no">
        <type>void *</type>
        <definition>void* Person</definition>
        <argsstring></argsstring>
        <name>Person</name>
        <initializer>= &amp;<ref refid="person_8c_1ae629a5cc6fd7522471c9556267053bff" kindref="member">person_class</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/igutek/Documents/Projects/ooc/src/person.c" line="24" column="1" bodyfile="/Users/igutek/Documents/Projects/ooc/src/person.c" bodystart="24" bodyend="-1"/>
        <referencedby refid="person_8c_1adaf633e0102ae03a6b233de044b1f162" compoundref="person_8c" startline="29" endline="46">__construct__Person</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="person_8c_1adaf633e0102ae03a6b233de044b1f162" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const void *</type>
        <definition>const void * __construct__Person</definition>
        <argsstring>(const void *_self, size_t argc, va_list args)</argsstring>
        <name>__construct__Person</name>
        <param>
          <type>const void *</type>
          <declname>_self</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>va_list</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/igutek/Documents/Projects/ooc/src/person.c" line="6" column="1" bodyfile="/Users/igutek/Documents/Projects/ooc/src/person.c" bodystart="29" bodyend="46"/>
        <references refid="structPerson_1a38f2f16e85640e2f851e46319735dc2a" compoundref="person_8h" startline="9">Person::first</references>
        <references refid="structPerson_1a680212888ba741ce822803812588fbcf" compoundref="person_8h" startline="10">Person::last</references>
        <references refid="person_8c_1a588179b669d31ab467e542d8b997361f" compoundref="person_8c" startline="24">Person</references>
        <references refid="structPerson_1afcedcdc3dc5eba7d989eeaa55d236a11" compoundref="person_8h" startline="8">Person::size</references>
        <references refid="group__common_1gafac8564ed88a6f8585f043fc6b2fa7e1" compoundref="object_8c" startline="87" endline="95">size</references>
      </memberdef>
      <memberdef kind="function" id="person_8c_1a0108e77460f7fc9f156aa8ff2919c496" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* __destruct__Person</definition>
        <argsstring>(const void *self, va_list args)</argsstring>
        <name>__destruct__Person</name>
        <param>
          <type>const void *</type>
          <declname>self</declname>
        </param>
        <param>
          <type>va_list</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/igutek/Documents/Projects/ooc/src/person.c" line="7" column="1"/>
      </memberdef>
      <memberdef kind="function" id="person_8c_1ac8f165e3cdab75026b74bdb45923d84c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void print_Person</definition>
        <argsstring>(const void *_self)</argsstring>
        <name>print_Person</name>
        <param>
          <type>const void *</type>
          <declname>_self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/igutek/Documents/Projects/ooc/src/person.c" line="8" column="1" bodyfile="/Users/igutek/Documents/Projects/ooc/src/person.c" bodystart="53" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="person_8c_1ac756035079421633f84f42223847fbc4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t get_size_Person</definition>
        <argsstring>(const void *_self)</argsstring>
        <name>get_size_Person</name>
        <param>
          <type>const void *</type>
          <declname>_self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/igutek/Documents/Projects/ooc/src/person.c" line="9" column="1" bodyfile="/Users/igutek/Documents/Projects/ooc/src/person.c" bodystart="48" bodyend="51"/>
        <references refid="structPerson_1afcedcdc3dc5eba7d989eeaa55d236a11" compoundref="person_8h" startline="8">Person::size</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;<ref refid="person_8h" kindref="compound">ooc/person.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="object__internal_8h" kindref="compound">object_internal.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="person_8c_1adaf633e0102ae03a6b233de044b1f162" kindref="member">__construct__Person</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*_self,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>argc,<sp/>va_list<sp/>args);</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/><ref refid="person_8c_1a0108e77460f7fc9f156aa8ff2919c496" kindref="member">__destruct__Person</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/>va_list<sp/>args);</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="person_8c_1ac8f165e3cdab75026b74bdb45923d84c" kindref="member">print_Person</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>_self);</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="person_8c_1ac756035079421633f84f42223847fbc4" kindref="member">get_size_Person</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>_self);</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12" refid="structPersonClass" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structPersonClass" kindref="compound">PersonClass</ref>{</highlight></codeline>
<codeline lineno="13" refid="structPersonClass_1a5ace8304edfca4a772756b37bf7f0212" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structclass__header" kindref="compound">class_header</ref><sp/><ref refid="structPersonClass_1a5ace8304edfca4a772756b37bf7f0212" kindref="member">class</ref>;</highlight></codeline>
<codeline lineno="14"><highlight class="normal">};</highlight></codeline>
<codeline lineno="15" refid="person_8c_1ae629a5cc6fd7522471c9556267053bff" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structPersonClass" kindref="compound">PersonClass</ref><sp/><ref refid="person_8c_1ae629a5cc6fd7522471c9556267053bff" kindref="member">person_class</ref><sp/>=<sp/>{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>.<ref refid="structPersonClass_1a5ace8304edfca4a772756b37bf7f0212" kindref="member">class</ref><sp/>=<sp/>{.<ref refid="structclass__header_1aa98964036010ad63554856c5f4680cec" kindref="member">magic</ref><sp/>=<sp/><ref refid="object__internal_8h_1a94630370ae389fb1189282fa0742f310" kindref="member">MAGIC</ref>,<sp/></highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.size<sp/><sp/>=<sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structPerson" kindref="compound">Person</ref>)),</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.<ref refid="group__common_1ga34dc6ab72cfd51381e8173226484e827" kindref="member">print</ref><sp/>=<sp/><ref refid="person_8c_1ac8f165e3cdab75026b74bdb45923d84c" kindref="member">print_Person</ref>,</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.get_size<sp/>=<sp/><ref refid="person_8c_1ac756035079421633f84f42223847fbc4" kindref="member">get_size_Person</ref>,</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.object_init<sp/>=<sp/><ref refid="person_8c_1adaf633e0102ae03a6b233de044b1f162" kindref="member">__construct__Person</ref>,</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="22"><highlight class="normal">};</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24" refid="person_8h_1a588179b669d31ab467e542d8b997361f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/><ref refid="structPerson" kindref="compound">Person</ref><sp/>=<sp/>&amp;<ref refid="person_8c_1ae629a5cc6fd7522471c9556267053bff" kindref="member">person_class</ref>;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">//TODO<sp/>make<sp/>maxlength<sp/>values<sp/>on<sp/>names..</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">//TODO<sp/>determine<sp/>whether<sp/>to<sp/>cache<sp/>string<sp/>length<sp/>(probably<sp/>yes)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="person_8c_1adaf633e0102ae03a6b233de044b1f162" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="person_8c_1adaf633e0102ae03a6b233de044b1f162" kindref="member">__construct__Person</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*_self,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>argc,<sp/>va_list<sp/>args)<sp/>{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structPerson" kindref="compound">Person</ref><sp/>*<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>=<sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structPerson" kindref="compound">Person</ref><sp/>*)<sp/>_self;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/><ref refid="structPerson_1a38f2f16e85640e2f851e46319735dc2a" kindref="member">first</ref><sp/>=<sp/>va_arg(args,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/><ref refid="structPerson_1a680212888ba741ce822803812588fbcf" kindref="member">last</ref><sp/>=<sp/><sp/>va_arg(args,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="group__common_1gafac8564ed88a6f8585f043fc6b2fa7e1" kindref="member">size</ref><sp/>=<sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structPerson" kindref="compound">Person</ref>)<sp/><sp/><sp/><sp/>+<sp/></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strlen(<ref refid="structPerson_1a38f2f16e85640e2f851e46319735dc2a" kindref="member">first</ref>)<sp/>+<sp/>1<sp/>+</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strlen(<ref refid="structPerson_1a680212888ba741ce822803812588fbcf" kindref="member">last</ref>)<sp/><sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>=<sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structPerson" kindref="compound">Person</ref><sp/>*)<sp/>realloc(</highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/><ref refid="group__common_1gafac8564ed88a6f8585f043fc6b2fa7e1" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;<ref refid="structPerson_1afcedcdc3dc5eba7d989eeaa55d236a11" kindref="member">size</ref><sp/>=<sp/><ref refid="group__common_1gafac8564ed88a6f8585f043fc6b2fa7e1" kindref="member">size</ref>;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;class<sp/>=<sp/><ref refid="person_8c_1a588179b669d31ab467e542d8b997361f" kindref="member">Person</ref>;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>space<sp/>=<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>)<sp/>(<sp/>&amp;</highlight><highlight class="keyword">self</highlight><highlight class="normal">[1]);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;first<sp/><sp/>=<sp/>strcpy(space,<sp/><ref refid="structPerson_1a38f2f16e85640e2f851e46319735dc2a" kindref="member">first</ref>);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;last<sp/><sp/><sp/>=<sp/>strcpy(space<sp/>+<sp/>strlen(self-&gt;first)+1,<sp/><ref refid="structPerson_1a680212888ba741ce822803812588fbcf" kindref="member">last</ref>);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;age<sp/>=<sp/>va_arg(args,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="46"><highlight class="normal">}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48" refid="person_8c_1ac756035079421633f84f42223847fbc4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="person_8c_1ac756035079421633f84f42223847fbc4" kindref="member">get_size_Person</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>_self){</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structPerson" kindref="compound">Person</ref><sp/>*<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>=<sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structPerson" kindref="compound">Person</ref><sp/>*)<sp/>_self;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;<ref refid="structPerson_1afcedcdc3dc5eba7d989eeaa55d236a11" kindref="member">size</ref>;</highlight></codeline>
<codeline lineno="51"><highlight class="normal">}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53" refid="person_8c_1ac8f165e3cdab75026b74bdb45923d84c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="person_8c_1ac8f165e3cdab75026b74bdb45923d84c" kindref="member">print_Person</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>_self)<sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structPerson" kindref="compound">Person</ref><sp/>*<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>=<sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structPerson" kindref="compound">Person</ref><sp/>*)<sp/>_self;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Person<sp/>&lt;%s<sp/>%s.<sp/>Age:<sp/>%d&gt;\n&quot;</highlight><highlight class="normal">,<sp/>self-&gt;first,<sp/>self-&gt;last,<sp/>self-&gt;age);</highlight></codeline>
<codeline lineno="56"><highlight class="normal">}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/igutek/Documents/Projects/ooc/src/person.c"/>
  </compounddef>
</doxygen>
