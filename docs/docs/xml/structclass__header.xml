<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="structclass__header" kind="struct" language="C++" prot="public">
    <compoundname>class_header</compoundname>
    <includes refid="object__internal_8h" local="no">object_internal.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structclass__header_1aa98964036010ad63554856c5f4680cec" prot="public" static="no" mutable="no">
        <type>unsigned long</type>
        <definition>unsigned long class_header::magic</definition>
        <argsstring></argsstring>
        <name>magic</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/igutek/Documents/Projects/ooc/src/object_internal.h" line="22" column="1" bodyfile="/Users/igutek/Documents/Projects/ooc/src/object_internal.h" bodystart="22" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structclass__header_1a5ba6bf54fc12a2a31a2b39937cd50e84" prot="public" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t class_header::size</definition>
        <argsstring></argsstring>
        <name>size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/igutek/Documents/Projects/ooc/src/object_internal.h" line="23" column="1" bodyfile="/Users/igutek/Documents/Projects/ooc/src/object_internal.h" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structclass__header_1a5c135b5316d0d9d22dce1f32fb8befb1" prot="public" static="no" mutable="no">
        <type>size_t(*</type>
        <definition>size_t(* class_header::get_size) (const void *_self)</definition>
        <argsstring>)(const void *_self)</argsstring>
        <name>get_size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get size of object in bytes <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_self</parametername>
</parameternamelist>
<parameterdescription>
<para>ooc object </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>size in bytes </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/igutek/Documents/Projects/ooc/src/object_internal.h" line="30" column="1" bodyfile="/Users/igutek/Documents/Projects/ooc/src/object_internal.h" bodystart="30" bodyend="-1"/>
        <referencedby refid="group__common_1gafac8564ed88a6f8585f043fc6b2fa7e1" compoundref="object_8c" startline="72" endline="80">size</referencedby>
      </memberdef>
      <memberdef kind="variable" id="structclass__header_1a1b7cb949741b9a64fd3569af94f30cba" prot="public" static="no" mutable="no">
        <type>size_t(*</type>
        <definition>size_t(* class_header::get_len) (const void *_self)</definition>
        <argsstring>)(const void *_self)</argsstring>
        <name>get_len</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get number of items in container object <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_self</parametername>
</parameternamelist>
<parameterdescription>
<para>ooc object </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>number of items in container </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/igutek/Documents/Projects/ooc/src/object_internal.h" line="37" column="1" bodyfile="/Users/igutek/Documents/Projects/ooc/src/object_internal.h" bodystart="37" bodyend="-1"/>
        <referencedby refid="group__common_1ga15be7f4a5b9c979feb83b76278f6716c" compoundref="object_8c" startline="91" endline="102">len</referencedby>
      </memberdef>
      <memberdef kind="variable" id="structclass__header_1a560f3c418eb904136bfcb91d3618430c" prot="public" static="no" mutable="no">
        <type>const void *(*</type>
        <definition>const void*(* class_header::object_init) (const void *_self, va_list args)</definition>
        <argsstring>)(const void *_self, va_list args)</argsstring>
        <name>object_init</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create and initialize an object Technically, _self needs to be the full class header for a concrete type, which starts with a <ref refid="structclass__header" kindref="compound">class_header</ref>, followed by class specific fields.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_self</parametername>
</parameternamelist>
<parameterdescription>
<para>ooc class like <ref refid="structString" kindref="compound">String</ref> or <ref refid="structHashMap" kindref="compound">HashMap</ref>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>args</parametername>
</parameternamelist>
<parameterdescription>
<para>arguments to initialize object. Varies based on class type </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/igutek/Documents/Projects/ooc/src/object_internal.h" line="49" column="1" bodyfile="/Users/igutek/Documents/Projects/ooc/src/object_internal.h" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structclass__header_1aa07a11a17f5d79a66c9086b8d10969b7" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void(* class_header::object_deinit) (const void *_self)</definition>
        <argsstring>)(const void *_self)</argsstring>
        <name>object_deinit</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>De-initialize and free resources used by _self.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_self</parametername>
</parameternamelist>
<parameterdescription>
<para>ooc object </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/igutek/Documents/Projects/ooc/src/object_internal.h" line="59" column="1" bodyfile="/Users/igutek/Documents/Projects/ooc/src/object_internal.h" bodystart="59" bodyend="-1"/>
        <referencedby refid="group__common_1gae293fe2fbbf9f2e8a87c1141e7412814" compoundref="object_8c" startline="34" endline="43">del</referencedby>
      </memberdef>
      <memberdef kind="variable" id="structclass__header_1a23181c1eac1455a8f23dd9d14f8b6abd" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void(* class_header::print) (const void *_self)</definition>
        <argsstring>)(const void *_self)</argsstring>
        <name>print</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Print and object to stdout <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_self</parametername>
</parameternamelist>
<parameterdescription>
<para>ooc object </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/igutek/Documents/Projects/ooc/src/object_internal.h" line="65" column="1" bodyfile="/Users/igutek/Documents/Projects/ooc/src/object_internal.h" bodystart="65" bodyend="-1"/>
        <referencedby refid="group__common_1ga34dc6ab72cfd51381e8173226484e827" compoundref="object_8c" startline="59" endline="69">print</referencedby>
      </memberdef>
      <memberdef kind="variable" id="structclass__header_1af8a0a6de1e1eb96faab68cc58fcf84d0" prot="public" static="no" mutable="no">
        <type>const char *(*</type>
        <definition>const char*(* class_header::str) (const void *_self)</definition>
        <argsstring>)(const void *_self)</argsstring>
        <name>str</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return the c string (char*) representation of an object</para><para>May be used by to_String to make an ooc <ref refid="structString" kindref="compound">String</ref> representation. Usually it&apos;s not necessary to implement to_String separately.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_self</parametername>
</parameternamelist>
<parameterdescription>
<para>ooc object </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>c string representation </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/igutek/Documents/Projects/ooc/src/object_internal.h" line="78" column="1" bodyfile="/Users/igutek/Documents/Projects/ooc/src/object_internal.h" bodystart="78" bodyend="-1"/>
        <referencedby refid="object_8h_1a6ab4b3e256d10044340c1f861c031438" compoundref="object_8c" startline="46" endline="56">str</referencedby>
      </memberdef>
      <memberdef kind="variable" id="structclass__header_1a67a4f888ffa78b4905bc3585fe1f17a4" prot="public" static="no" mutable="no">
        <type>void *(*</type>
        <definition>void*(* class_header::to_String) (const void *_self)</definition>
        <argsstring>)(const void *_self)</argsstring>
        <name>to_String</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return <ref refid="structString" kindref="compound">String</ref> representation of object.</para><para>May allocate a new <ref refid="structString" kindref="compound">String</ref> object, and may or may not return a different <ref refid="structString" kindref="compound">String</ref> object each time.</para><para>Usually it is sufficient to implement str.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_self</parametername>
</parameternamelist>
<parameterdescription>
<para>ooc objet </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>ooc <ref refid="structString" kindref="compound">String</ref> object </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/igutek/Documents/Projects/ooc/src/object_internal.h" line="91" column="1" bodyfile="/Users/igutek/Documents/Projects/ooc/src/object_internal.h" bodystart="91" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structclass__header_1a10e4c230bf810df38e3581caabad02bb" prot="public" static="no" mutable="no">
        <type>const void *(*</type>
        <definition>const void*(* class_header::append) (const void *_self, const void *_other)</definition>
        <argsstring>)(const void *_self, const void *_other)</argsstring>
        <name>append</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Implement to enable appending items to an class. If an class supports appending, it should probably support either get, or iteration.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_self</parametername>
</parameternamelist>
<parameterdescription>
<para>ooc container object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_other</parametername>
</parameternamelist>
<parameterdescription>
<para>ooc object supported by container </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/igutek/Documents/Projects/ooc/src/object_internal.h" line="101" column="1" bodyfile="/Users/igutek/Documents/Projects/ooc/src/object_internal.h" bodystart="101" bodyend="-1"/>
        <referencedby refid="group__collection_1ga2bd4216bcf1d5810032394f57fbf5c2f" compoundref="object_8c" startline="150" endline="161">append</referencedby>
      </memberdef>
      <memberdef kind="variable" id="structclass__header_1a01dc6aae9011475ec7be8500d4f63c5b" prot="public" static="no" mutable="no">
        <type>bool(*</type>
        <definition>bool(* class_header::equals) (const void *_self, const void *_other)</definition>
        <argsstring>)(const void *_self, const void *_other)</argsstring>
        <name>equals</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Implement to allow objects to be compared with a custom function. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_self</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_other</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if objects are equal. If not implemented, equals will compare pointers </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/igutek/Documents/Projects/ooc/src/object_internal.h" line="112" column="1" bodyfile="/Users/igutek/Documents/Projects/ooc/src/object_internal.h" bodystart="112" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structclass__header_1ab45bdc16b08b8cde751d161dd0c4f230" prot="public" static="no" mutable="no">
        <type>const void *(*</type>
        <definition>const void*(* class_header::iter) (const void *_object)</definition>
        <argsstring>)(const void *_object)</argsstring>
        <name>iter</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return an iterator to support iteration. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_object</parametername>
</parameternamelist>
<parameterdescription>
<para>ooc object </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>ooc iterator </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/igutek/Documents/Projects/ooc/src/object_internal.h" line="122" column="1" bodyfile="/Users/igutek/Documents/Projects/ooc/src/object_internal.h" bodystart="122" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structclass__header_1a26ec3e94c98bf5d3eff10d37cf2696ef" prot="public" static="no" mutable="no">
        <type>const void *(*</type>
        <definition>const void*(* class_header::copy) (const void *_self)</definition>
        <argsstring>)(const void *_self)</argsstring>
        <name>copy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Copy an ooc object.</para><para>Implement functionality to copy an object. The expectation is that it is deep copy. Perhaps there should be a convention for shallow copies</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_self</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>copy of _self </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/igutek/Documents/Projects/ooc/src/object_internal.h" line="134" column="1" bodyfile="/Users/igutek/Documents/Projects/ooc/src/object_internal.h" bodystart="134" bodyend="-1"/>
        <referencedby refid="group__common_1gab08ed4d7b5aa115383f38057e006be9d" compoundref="object_8c" startline="121" endline="132">copy</referencedby>
      </memberdef>
      <memberdef kind="variable" id="structclass__header_1ada4fc11b4f09e8248a28c7d2e39e17ea" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void(* class_header::insert) (const void *_self, const void *_key, const void *item)</definition>
        <argsstring>)(const void *_self, const void *_key, const void *item)</argsstring>
        <name>insert</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Implement to enable indexed assignment. insert(collection, key, value) is equivalent to collection[key] = value</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_self</parametername>
</parameternamelist>
<parameterdescription>
<para>ooc object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_key</parametername>
</parameternamelist>
<parameterdescription>
<para>ooc object key to index into collection </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>item</parametername>
</parameternamelist>
<parameterdescription>
<para>value to store at given index </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/igutek/Documents/Projects/ooc/src/object_internal.h" line="145" column="1" bodyfile="/Users/igutek/Documents/Projects/ooc/src/object_internal.h" bodystart="145" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structclass__header_1ab2de24bb8c5d3b1b5e74a69bb6c307b2" prot="public" static="no" mutable="no">
        <type>const void *(*</type>
        <definition>const void*(* class_header::get) (const void *_self, const void *_key)</definition>
        <argsstring>)(const void *_self, const void *_key)</argsstring>
        <name>get</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Implement to enable indexed access. value = get(collection, key) value = collection[key]</para><para>Typically, key must be in collection, or this function should exit early with an error. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_self</parametername>
</parameternamelist>
<parameterdescription>
<para>ooc object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_key</parametername>
</parameternamelist>
<parameterdescription>
<para>ooc object key </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/igutek/Documents/Projects/ooc/src/object_internal.h" line="162" column="1" bodyfile="/Users/igutek/Documents/Projects/ooc/src/object_internal.h" bodystart="162" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structclass__header_1a4d88d979ecf23c184577d937454ab973" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void(* class_header::del_item) (const void *_self, const void *key)</definition>
        <argsstring>)(const void *_self, const void *key)</argsstring>
        <name>del_item</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Implement to enabled indexed deletion from a collection. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_self</parametername>
</parameternamelist>
<parameterdescription>
<para>ooc object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>key to delete </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/igutek/Documents/Projects/ooc/src/object_internal.h" line="172" column="1" bodyfile="/Users/igutek/Documents/Projects/ooc/src/object_internal.h" bodystart="172" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structclass__header_1aa0035a2c833b1e46f0ae401d6b44ee65" prot="public" static="no" mutable="no">
        <type>uint64_t(*</type>
        <definition>uint64_t(* class_header::hash) (const void *_self)</definition>
        <argsstring>)(const void *_self)</argsstring>
        <name>hash</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Implement to enable storing in a hash table.</para><para>Note: as of now, HashTables will also use <ref refid="structclass__header_1a01dc6aae9011475ec7be8500d4f63c5b" kindref="member">equals()</ref> to confirm keys are unique. If hash is not implemented, as of now, the HashTable does not support it. This may change in the future.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_self</parametername>
</parameternamelist>
<parameterdescription>
<para>ooc object </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>64 bit user defined hash </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/igutek/Documents/Projects/ooc/src/object_internal.h" line="189" column="1" bodyfile="/Users/igutek/Documents/Projects/ooc/src/object_internal.h" bodystart="189" bodyend="-1"/>
        <referencedby refid="hashmap_8c_1a10476d872d0cfcb234391cabf5e888a1" compoundref="hashmap_8c" startline="378" endline="448">del_item_HashMap</referencedby>
        <referencedby refid="hashmap_8c_1aa88aa2ed0651f4feb2e275ba14114d14" compoundref="hashmap_8c" startline="343" endline="375">get_HashMap</referencedby>
        <referencedby refid="hashmap_8c_1a2987322764f770f61fe71f0a1320fc7b" compoundref="hashmap_8c" startline="324" endline="341">insert_HashMap</referencedby>
        <referencedby refid="hashmap_8c_1a8aa67d2dac0692c1128b50780ad9dfc1" compoundref="hashmap_8c" startline="107" endline="150">internal_insert_HashMap</referencedby>
      </memberdef>
      <memberdef kind="variable" id="structclass__header_1a34b23ea4b047e4526bfb743d5be3e69c" prot="public" static="no" mutable="no">
        <type>const void *(*</type>
        <definition>const void*(* class_header::next) (const void *_self)</definition>
        <argsstring>)(const void *_self)</argsstring>
        <name>next</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Implement to support iteration. You must implement <ref refid="structclass__header_1ab45bdc16b08b8cde751d161dd0c4f230" kindref="member">iter()</ref> and <ref refid="structclass__header_1a34b23ea4b047e4526bfb743d5be3e69c" kindref="member">next()</ref> to support iteration.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_self</parametername>
</parameternamelist>
<parameterdescription>
<para>iterable returned from <ref refid="structclass__header_1ab45bdc16b08b8cde751d161dd0c4f230" kindref="member">iter()</ref> </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>next item in iteration. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/igutek/Documents/Projects/ooc/src/object_internal.h" line="199" column="1" bodyfile="/Users/igutek/Documents/Projects/ooc/src/object_internal.h" bodystart="199" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structclass__header_1af7f2f5623c98afb59519062172644350" prot="public" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char* class_header::object_name</definition>
        <argsstring></argsstring>
        <name>object_name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Object name as C string </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/igutek/Documents/Projects/ooc/src/object_internal.h" line="204" column="1" bodyfile="/Users/igutek/Documents/Projects/ooc/src/object_internal.h" bodystart="204" bodyend="-1"/>
        <referencedby refid="group__common_1gadcc35aece3f8a4c822a9bf2a591f087b" compoundref="object_8c" startline="105" endline="116">clsname</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>All ooc classes have a <ref refid="structclass__header" kindref="compound">class_header</ref>.</para><para>The header provides function pointers to implementations of all supported methods for a given class.</para><para>Each object (instantiation of a class) has a pointer to the per-class <ref refid="structclass__header" kindref="compound">class_header</ref>.</para><para>A minimum class must at least provide implementations for magic, size, object_init, object_deinit and object_name </para>    </detaileddescription>
    <location file="/Users/igutek/Documents/Projects/ooc/src/object_internal.h" line="21" column="1" bodyfile="/Users/igutek/Documents/Projects/ooc/src/object_internal.h" bodystart="21" bodyend="206"/>
    <listofallmembers>
      <member refid="structclass__header_1a10e4c230bf810df38e3581caabad02bb" prot="public" virt="non-virtual"><scope>class_header</scope><name>append</name></member>
      <member refid="structclass__header_1a26ec3e94c98bf5d3eff10d37cf2696ef" prot="public" virt="non-virtual"><scope>class_header</scope><name>copy</name></member>
      <member refid="structclass__header_1a4d88d979ecf23c184577d937454ab973" prot="public" virt="non-virtual"><scope>class_header</scope><name>del_item</name></member>
      <member refid="structclass__header_1a01dc6aae9011475ec7be8500d4f63c5b" prot="public" virt="non-virtual"><scope>class_header</scope><name>equals</name></member>
      <member refid="structclass__header_1ab2de24bb8c5d3b1b5e74a69bb6c307b2" prot="public" virt="non-virtual"><scope>class_header</scope><name>get</name></member>
      <member refid="structclass__header_1a1b7cb949741b9a64fd3569af94f30cba" prot="public" virt="non-virtual"><scope>class_header</scope><name>get_len</name></member>
      <member refid="structclass__header_1a5c135b5316d0d9d22dce1f32fb8befb1" prot="public" virt="non-virtual"><scope>class_header</scope><name>get_size</name></member>
      <member refid="structclass__header_1aa0035a2c833b1e46f0ae401d6b44ee65" prot="public" virt="non-virtual"><scope>class_header</scope><name>hash</name></member>
      <member refid="structclass__header_1ada4fc11b4f09e8248a28c7d2e39e17ea" prot="public" virt="non-virtual"><scope>class_header</scope><name>insert</name></member>
      <member refid="structclass__header_1ab45bdc16b08b8cde751d161dd0c4f230" prot="public" virt="non-virtual"><scope>class_header</scope><name>iter</name></member>
      <member refid="structclass__header_1aa98964036010ad63554856c5f4680cec" prot="public" virt="non-virtual"><scope>class_header</scope><name>magic</name></member>
      <member refid="structclass__header_1a34b23ea4b047e4526bfb743d5be3e69c" prot="public" virt="non-virtual"><scope>class_header</scope><name>next</name></member>
      <member refid="structclass__header_1aa07a11a17f5d79a66c9086b8d10969b7" prot="public" virt="non-virtual"><scope>class_header</scope><name>object_deinit</name></member>
      <member refid="structclass__header_1a560f3c418eb904136bfcb91d3618430c" prot="public" virt="non-virtual"><scope>class_header</scope><name>object_init</name></member>
      <member refid="structclass__header_1af7f2f5623c98afb59519062172644350" prot="public" virt="non-virtual"><scope>class_header</scope><name>object_name</name></member>
      <member refid="structclass__header_1a23181c1eac1455a8f23dd9d14f8b6abd" prot="public" virt="non-virtual"><scope>class_header</scope><name>print</name></member>
      <member refid="structclass__header_1a5ba6bf54fc12a2a31a2b39937cd50e84" prot="public" virt="non-virtual"><scope>class_header</scope><name>size</name></member>
      <member refid="structclass__header_1af8a0a6de1e1eb96faab68cc58fcf84d0" prot="public" virt="non-virtual"><scope>class_header</scope><name>str</name></member>
      <member refid="structclass__header_1a67a4f888ffa78b4905bc3585fe1f17a4" prot="public" virt="non-virtual"><scope>class_header</scope><name>to_String</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
