<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="string_8c" kind="file" language="C++">
    <compoundname>string.c</compoundname>
    <includes refid="string_8h" local="no">ooc/string.h</includes>
    <includes refid="object__internal_8h" local="yes">object_internal.h</includes>
    <includes local="no">stdlib.h</includes>
    <incdepgraph>
      <node id="192">
        <label>stdbool.h</label>
      </node>
      <node id="191">
        <label>stdarg.h</label>
      </node>
      <node id="193">
        <label>stdint.h</label>
      </node>
      <node id="190">
        <label>stdlib.h</label>
      </node>
      <node id="194">
        <label>object_internal.h</label>
        <link refid="object__internal_8h"/>
        <childnode refid="193" relation="include">
        </childnode>
        <childnode refid="190" relation="include">
        </childnode>
        <childnode refid="191" relation="include">
        </childnode>
        <childnode refid="192" relation="include">
        </childnode>
      </node>
      <node id="188">
        <label>stddef.h</label>
      </node>
      <node id="187">
        <label>object.h</label>
        <link refid="object_8h"/>
        <childnode refid="188" relation="include">
        </childnode>
        <childnode refid="189" relation="include">
        </childnode>
        <childnode refid="190" relation="include">
        </childnode>
        <childnode refid="191" relation="include">
        </childnode>
        <childnode refid="192" relation="include">
        </childnode>
        <childnode refid="193" relation="include">
        </childnode>
      </node>
      <node id="185">
        <label>/Users/igutek/Documents/Projects/ooc/src/string.c</label>
        <link refid="string_8c"/>
        <childnode refid="186" relation="include">
        </childnode>
        <childnode refid="194" relation="include">
        </childnode>
        <childnode refid="190" relation="include">
        </childnode>
      </node>
      <node id="186">
        <label>ooc/string.h</label>
        <link refid="string_8h"/>
        <childnode refid="187" relation="include">
        </childnode>
        <childnode refid="186" relation="include">
        </childnode>
      </node>
      <node id="189">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="structStringClass" prot="public">StringClass</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="string_8c_1a6a18c840bbf00da32a4e35a85342095a" prot="public" static="no">
        <name>FNV_PRIME_32</name>
        <initializer>16777619</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/igutek/Documents/Projects/ooc/src/string.c" line="5" column="13" bodyfile="/Users/igutek/Documents/Projects/ooc/src/string.c" bodystart="5" bodyend="-1"/>
        <referencedby refid="string_8c_1a0861087e40ab0649cb2c5ce91798171b" compoundref="string_8c" startline="115" endline="124">FNV32</referencedby>
      </memberdef>
      <memberdef kind="define" id="string_8c_1a09402fb28fe13d84677fb8a90c3955c5" prot="public" static="no">
        <name>FNV_OFFSET_32</name>
        <initializer>2166136261U</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/igutek/Documents/Projects/ooc/src/string.c" line="6" column="9" bodyfile="/Users/igutek/Documents/Projects/ooc/src/string.c" bodystart="6" bodyend="-1"/>
        <referencedby refid="string_8c_1a0861087e40ab0649cb2c5ce91798171b" compoundref="string_8c" startline="115" endline="124">FNV32</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="string_8c_1a46e31843df274eb8ce4b256dc005df49" prot="public" static="no" mutable="no">
        <type>struct <ref refid="structStringClass" kindref="compound">StringClass</ref></type>
        <definition>struct StringClass string_class</definition>
        <argsstring></argsstring>
        <name>string_class</name>
        <initializer>= {
    .class = {.magic = <ref refid="object__internal_8h_1a94630370ae389fb1189282fa0742f310" kindref="member">MAGIC</ref>,
              .<ref refid="group__common_1gafac8564ed88a6f8585f043fc6b2fa7e1" kindref="member">size</ref> = sizeof(struct <ref refid="structString" kindref="compound">String</ref>),
              .object_init = <ref refid="string_8c_1a2e1266f696c96e5bfd8ffbed7be891fa" kindref="member">__construct__String</ref>,
              .get_size = <ref refid="string_8c_1a4b419646ac4f54ba6302b8e4e58c9678" kindref="member">String_get_size</ref>,
              .get_len = <ref refid="string_8c_1ad9f87c949c08dce2651433d0cc06d8dd" kindref="member">String_get_len</ref>,
              .<ref refid="object_8h_1a6ab4b3e256d10044340c1f861c031438" kindref="member">str</ref> = <ref refid="string_8c_1a9a56d1c8e084d0302f33b3b90260693d" kindref="member">String_str</ref>,
              .<ref refid="group__common_1gab08ed4d7b5aa115383f38057e006be9d" kindref="member">copy</ref> = <ref refid="string_8c_1a1742803c7014bd0c59f1072d54e1a023" kindref="member">String_copy</ref>,
              .<ref refid="group__collection_1ga2bd4216bcf1d5810032394f57fbf5c2f" kindref="member">append</ref> = <ref refid="string_8c_1ad84cbc93082cb73a0aeb9911e2768c90" kindref="member">String_append</ref>,
              .<ref refid="group__collection_1gae0b3682e6ff5038e94c9e551bdd0d489" kindref="member">hash</ref> = <ref refid="string_8c_1a518744bdc3e883cc2349d5b4cd32cb95" kindref="member">String_hash</ref>,
              .<ref refid="group__common_1ga4b83176929aeea62524d2a126d3c897f" kindref="member">equals</ref> = <ref refid="string_8c_1a1908c7dc8629ec342445a6e2a7c247f2" kindref="member">String_equal</ref>,
              .object_name = &quot;String&quot;
             }

}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/igutek/Documents/Projects/ooc/src/string.c" line="126" column="1" bodyfile="/Users/igutek/Documents/Projects/ooc/src/string.c" bodystart="147" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="string_8c_1a7b896f7c16c20c94b9b961fe9e926a4f" prot="public" static="no" mutable="no">
        <type>void *</type>
        <definition>void* String</definition>
        <argsstring></argsstring>
        <name>String</name>
        <initializer>= &amp;<ref refid="string_8c_1a46e31843df274eb8ce4b256dc005df49" kindref="member">string_class</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/igutek/Documents/Projects/ooc/src/string.c" line="163" column="1" bodyfile="/Users/igutek/Documents/Projects/ooc/src/string.c" bodystart="163" bodyend="-1"/>
        <referencedby refid="string_8c_1a2e1266f696c96e5bfd8ffbed7be891fa" compoundref="string_8c" startline="24" endline="41">__construct__String</referencedby>
        <referencedby refid="main_8c_1a0ddf1224851353fc92bfbff6f499fa97" compoundref="main_8c" startline="8" endline="43">main</referencedby>
        <referencedby refid="string_8c_1ad84cbc93082cb73a0aeb9911e2768c90" compoundref="string_8c" startline="56" endline="94">String_append</referencedby>
        <referencedby refid="string_8c_1a1742803c7014bd0c59f1072d54e1a023" compoundref="string_8c" startline="110" endline="113">String_copy</referencedby>
        <referencedby refid="string_8c_1a1908c7dc8629ec342445a6e2a7c247f2" compoundref="string_8c" startline="97" endline="107">String_equal</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="string_8c_1ad9f87c949c08dce2651433d0cc06d8dd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t String_get_len</definition>
        <argsstring>(const void *_self)</argsstring>
        <name>String_get_len</name>
        <param>
          <type>const void *</type>
          <declname>_self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/igutek/Documents/Projects/ooc/src/string.c" line="12" column="1" bodyfile="/Users/igutek/Documents/Projects/ooc/src/string.c" bodystart="12" bodyend="15"/>
        <references refid="structString_1a19c7dc3e73f362a699de38845b386296" compoundref="string_8h" startline="11">String::len</references>
      </memberdef>
      <memberdef kind="function" id="string_8c_1a4b419646ac4f54ba6302b8e4e58c9678" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t String_get_size</definition>
        <argsstring>(const void *_self)</argsstring>
        <name>String_get_size</name>
        <param>
          <type>const void *</type>
          <declname>_self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/igutek/Documents/Projects/ooc/src/string.c" line="18" column="1" bodyfile="/Users/igutek/Documents/Projects/ooc/src/string.c" bodystart="18" bodyend="21"/>
        <references refid="structString_1a467ea29ffa5dd45a89f7c01e199fd104" compoundref="string_8h" startline="10">String::size</references>
      </memberdef>
      <memberdef kind="function" id="string_8c_1a2e1266f696c96e5bfd8ffbed7be891fa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const void *</type>
        <definition>const void* __construct__String</definition>
        <argsstring>(const void *_self, va_list args)</argsstring>
        <name>__construct__String</name>
        <param>
          <type>const void *</type>
          <declname>_self</declname>
        </param>
        <param>
          <type>va_list</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/igutek/Documents/Projects/ooc/src/string.c" line="24" column="1" bodyfile="/Users/igutek/Documents/Projects/ooc/src/string.c" bodystart="24" bodyend="41"/>
        <references refid="group__common_1ga15be7f4a5b9c979feb83b76278f6716c" compoundref="object_8c" startline="91" endline="102">len</references>
        <references refid="group__common_1gafac8564ed88a6f8585f043fc6b2fa7e1" compoundref="object_8c" startline="72" endline="80">size</references>
        <references refid="string_8c_1a7b896f7c16c20c94b9b961fe9e926a4f" compoundref="string_8c" startline="163">String</references>
      </memberdef>
      <memberdef kind="function" id="string_8c_1ad43e4d63a18fb1a7eebfc5291f704966" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void print_String</definition>
        <argsstring>(void *_self)</argsstring>
        <name>print_String</name>
        <param>
          <type>void *</type>
          <declname>_self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/igutek/Documents/Projects/ooc/src/string.c" line="44" column="1" bodyfile="/Users/igutek/Documents/Projects/ooc/src/string.c" bodystart="44" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="string_8c_1a9a56d1c8e084d0302f33b3b90260693d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* String_str</definition>
        <argsstring>(const void *_self)</argsstring>
        <name>String_str</name>
        <param>
          <type>const void *</type>
          <declname>_self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/igutek/Documents/Projects/ooc/src/string.c" line="50" column="1" bodyfile="/Users/igutek/Documents/Projects/ooc/src/string.c" bodystart="50" bodyend="53"/>
        <references refid="structString_1ac529e31052a3b2f49fd1f80cbe2327bb" compoundref="string_8h" startline="12">String::string_data</references>
      </memberdef>
      <memberdef kind="function" id="string_8c_1ad84cbc93082cb73a0aeb9911e2768c90" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const void *</type>
        <definition>const void* String_append</definition>
        <argsstring>(const void *_self, const void *_other)</argsstring>
        <name>String_append</name>
        <param>
          <type>const void *</type>
          <declname>_self</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>_other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/igutek/Documents/Projects/ooc/src/string.c" line="56" column="1" bodyfile="/Users/igutek/Documents/Projects/ooc/src/string.c" bodystart="56" bodyend="94"/>
        <references refid="group__common_1ga15be7f4a5b9c979feb83b76278f6716c" compoundref="object_8c" startline="91" endline="102">len</references>
        <references refid="group__common_1gafac8564ed88a6f8585f043fc6b2fa7e1" compoundref="object_8c" startline="72" endline="80">size</references>
        <references refid="string_8c_1a7b896f7c16c20c94b9b961fe9e926a4f" compoundref="string_8c" startline="163">String</references>
        <references refid="structString_1ac529e31052a3b2f49fd1f80cbe2327bb" compoundref="string_8h" startline="12">String::string_data</references>
        <references refid="group__common_1ga68940c707bbebe6946aeca72df1ee803" compoundref="object_8c" startline="83" endline="88">type</references>
      </memberdef>
      <memberdef kind="function" id="string_8c_1a1908c7dc8629ec342445a6e2a7c247f2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool String_equal</definition>
        <argsstring>(const void *_self, const void *_other)</argsstring>
        <name>String_equal</name>
        <param>
          <type>const void *</type>
          <declname>_self</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>_other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/igutek/Documents/Projects/ooc/src/string.c" line="97" column="1" bodyfile="/Users/igutek/Documents/Projects/ooc/src/string.c" bodystart="97" bodyend="107"/>
        <references refid="group__common_1gadcc35aece3f8a4c822a9bf2a591f087b" compoundref="object_8c" startline="105" endline="116">clsname</references>
        <references refid="object_8c_1a317798c33e05ea3ca01d0a70148f61ad" compoundref="object_8c" startline="46" endline="56">str</references>
        <references refid="string_8c_1a7b896f7c16c20c94b9b961fe9e926a4f" compoundref="string_8c" startline="163">String</references>
        <references refid="group__common_1ga68940c707bbebe6946aeca72df1ee803" compoundref="object_8c" startline="83" endline="88">type</references>
      </memberdef>
      <memberdef kind="function" id="string_8c_1a1742803c7014bd0c59f1072d54e1a023" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const void *</type>
        <definition>const void* String_copy</definition>
        <argsstring>(const void *_self)</argsstring>
        <name>String_copy</name>
        <param>
          <type>const void *</type>
          <declname>_self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/igutek/Documents/Projects/ooc/src/string.c" line="110" column="1" bodyfile="/Users/igutek/Documents/Projects/ooc/src/string.c" bodystart="110" bodyend="113"/>
        <references refid="string_8c_1a7b896f7c16c20c94b9b961fe9e926a4f" compoundref="string_8c" startline="163">String</references>
      </memberdef>
      <memberdef kind="function" id="string_8c_1a0861087e40ab0649cb2c5ce91798171b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t FNV32</definition>
        <argsstring>(char *s, size_t len)</argsstring>
        <name>FNV32</name>
        <param>
          <type>char *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/igutek/Documents/Projects/ooc/src/string.c" line="115" column="1" bodyfile="/Users/igutek/Documents/Projects/ooc/src/string.c" bodystart="115" bodyend="124"/>
        <references refid="string_8c_1a09402fb28fe13d84677fb8a90c3955c5" compoundref="string_8c" startline="6">FNV_OFFSET_32</references>
        <references refid="string_8c_1a6a18c840bbf00da32a4e35a85342095a" compoundref="string_8c" startline="5">FNV_PRIME_32</references>
        <references refid="group__collection_1gae0b3682e6ff5038e94c9e551bdd0d489" compoundref="object_8c" startline="184" endline="191">hash</references>
        <references refid="group__common_1ga15be7f4a5b9c979feb83b76278f6716c" compoundref="object_8c" startline="91" endline="102">len</references>
        <referencedby refid="string_8c_1a518744bdc3e883cc2349d5b4cd32cb95" compoundref="string_8c" startline="126" endline="144">String_hash</referencedby>
      </memberdef>
      <memberdef kind="function" id="string_8c_1a518744bdc3e883cc2349d5b4cd32cb95" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint64_t</type>
        <definition>uint64_t String_hash</definition>
        <argsstring>(const void *_self)</argsstring>
        <name>String_hash</name>
        <param>
          <type>const void *</type>
          <declname>_self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/igutek/Documents/Projects/ooc/src/string.c" line="126" column="1" bodyfile="/Users/igutek/Documents/Projects/ooc/src/string.c" bodystart="126" bodyend="144"/>
        <references refid="string_8c_1a0861087e40ab0649cb2c5ce91798171b" compoundref="string_8c" startline="115" endline="124">FNV32</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;<ref refid="string_8h" kindref="compound">ooc/string.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="object__internal_8h" kindref="compound">object_internal.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="string_8h" kindref="compound">string.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5" refid="string_8c_1a6a18c840bbf00da32a4e35a85342095a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FNV_PRIME_32<sp/>16777619</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6" refid="string_8c_1a09402fb28fe13d84677fb8a90c3955c5" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FNV_OFFSET_32<sp/>2166136261U</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8" refid="structStringClass" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structStringClass" kindref="compound">StringClass</ref>{</highlight></codeline>
<codeline lineno="9" refid="structStringClass_1a8c8d1fa459fe14f1514f9b06982710d2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structclass__header" kindref="compound">class_header</ref><sp/><ref refid="structStringClass_1a8c8d1fa459fe14f1514f9b06982710d2" kindref="member">class</ref>;</highlight></codeline>
<codeline lineno="10"><highlight class="normal">};</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12" refid="string_8c_1ad9f87c949c08dce2651433d0cc06d8dd" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="string_8c_1ad9f87c949c08dce2651433d0cc06d8dd" kindref="member">String_get_len</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>_self){</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structString" kindref="compound">String</ref><sp/>*<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>=<sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structString" kindref="compound">String</ref><sp/>*)<sp/>_self;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;<ref refid="structString_1a19c7dc3e73f362a699de38845b386296" kindref="member">len</ref>;</highlight></codeline>
<codeline lineno="15"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18" refid="string_8c_1a4b419646ac4f54ba6302b8e4e58c9678" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="string_8c_1a4b419646ac4f54ba6302b8e4e58c9678" kindref="member">String_get_size</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>_self){</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structString" kindref="compound">String</ref><sp/>*<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>=<sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structString" kindref="compound">String</ref><sp/>*)<sp/>_self;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;<ref refid="structString_1a467ea29ffa5dd45a89f7c01e199fd104" kindref="member">size</ref>;</highlight></codeline>
<codeline lineno="21"><highlight class="normal">}</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24" refid="string_8c_1a2e1266f696c96e5bfd8ffbed7be891fa" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/><ref refid="string_8c_1a2e1266f696c96e5bfd8ffbed7be891fa" kindref="member">__construct__String</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>_self,<sp/>va_list<sp/>args)<sp/>{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structString" kindref="compound">String</ref><sp/>*<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>=<sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structString" kindref="compound">String</ref><sp/>*)<sp/>_self;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>data<sp/>=<sp/>va_arg(args,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<sp/>data){</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(</highlight><highlight class="keyword">self</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="group__common_1ga15be7f4a5b9c979feb83b76278f6716c" kindref="member">len</ref><sp/>=<sp/>strlen(data);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="group__common_1gafac8564ed88a6f8585f043fc6b2fa7e1" kindref="member">size</ref><sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structString" kindref="compound">String</ref>)<sp/><sp/>+<sp/><ref refid="group__common_1ga15be7f4a5b9c979feb83b76278f6716c" kindref="member">len</ref><sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>=<sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structString" kindref="compound">String</ref><sp/>*)<sp/>realloc(</highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/><ref refid="group__common_1gafac8564ed88a6f8585f043fc6b2fa7e1" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;class<sp/>=<sp/><ref refid="string_8c_1a7b896f7c16c20c94b9b961fe9e926a4f" kindref="member">String</ref>;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>space<sp/>=<sp/><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)<sp/>&amp;</highlight><highlight class="keyword">self</highlight><highlight class="normal">[1];</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;string_data<sp/>=<sp/>strcpy(space,<sp/>data);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;size<sp/>=<sp/><ref refid="group__common_1gafac8564ed88a6f8585f043fc6b2fa7e1" kindref="member">size</ref>;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;len<sp/>=<sp/><ref refid="group__common_1ga15be7f4a5b9c979feb83b76278f6716c" kindref="member">len</ref>;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="41"><highlight class="normal">}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="string_8c_1ad43e4d63a18fb1a7eebfc5291f704966" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="string_8c_1ad43e4d63a18fb1a7eebfc5291f704966" kindref="member">print_String</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>_self)<sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structString" kindref="compound">String</ref><sp/>*<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>=<sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structString" kindref="compound">String</ref><sp/>*)<sp/>_self;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;%s&quot;</highlight><highlight class="normal">,<sp/>self-&gt;string_data);</highlight></codeline>
<codeline lineno="47"><highlight class="normal">}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50" refid="string_8c_1a9a56d1c8e084d0302f33b3b90260693d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/><ref refid="string_8c_1a9a56d1c8e084d0302f33b3b90260693d" kindref="member">String_str</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>_self){</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structString" kindref="compound">String</ref><sp/>*<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>=<sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structString" kindref="compound">String</ref><sp/>*)<sp/>_self;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;<ref refid="structString_1ac529e31052a3b2f49fd1f80cbe2327bb" kindref="member">string_data</ref>;</highlight></codeline>
<codeline lineno="53"><highlight class="normal">}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56" refid="string_8c_1ad84cbc93082cb73a0aeb9911e2768c90" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/><ref refid="string_8c_1ad84cbc93082cb73a0aeb9911e2768c90" kindref="member">String_append</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>_self,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>_other){</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structString" kindref="compound">String</ref><sp/>*<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>=<sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structString" kindref="compound">String</ref><sp/>*)<sp/>_self;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structString" kindref="compound">String</ref><sp/>*<sp/>other<sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structString" kindref="compound">String</ref><sp/>*)<sp/>_other;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group__common_1ga68940c707bbebe6946aeca72df1ee803" kindref="member">type</ref>(other)<sp/>==<sp/><ref refid="string_8c_1a7b896f7c16c20c94b9b961fe9e926a4f" kindref="member">String</ref>){</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>new_char_data<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>malloc(<ref refid="group__common_1ga15be7f4a5b9c979feb83b76278f6716c" kindref="member">len</ref>(</highlight><highlight class="keyword">self</highlight><highlight class="normal">)<sp/>+<sp/><ref refid="group__common_1ga15be7f4a5b9c979feb83b76278f6716c" kindref="member">len</ref>(other)<sp/>+<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcpy(new_char_data,<sp/>self-&gt;string_data);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcat(new_char_data,<sp/>other-&gt;<ref refid="structString_1ac529e31052a3b2f49fd1f80cbe2327bb" kindref="member">string_data</ref>);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structString" kindref="compound">String</ref><sp/>*<sp/>new_string<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal">(<ref refid="string_8c_1a7b896f7c16c20c94b9b961fe9e926a4f" kindref="member">String</ref>,<sp/>new_char_data);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>new_string;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>=<sp/>realloc(</highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/><ref refid="group__common_1gafac8564ed88a6f8585f043fc6b2fa7e1" kindref="member">size</ref>(</highlight><highlight class="keyword">self</highlight><highlight class="normal">)<sp/>+<sp/><ref refid="group__common_1ga15be7f4a5b9c979feb83b76278f6716c" kindref="member">len</ref>(other));</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;size<sp/>+=<sp/><ref refid="group__common_1ga15be7f4a5b9c979feb83b76278f6716c" kindref="member">len</ref>(other);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;len<sp/>+=<sp/><ref refid="group__common_1ga15be7f4a5b9c979feb83b76278f6716c" kindref="member">len</ref>(other);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>new_data<sp/>=<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)<sp/>&amp;new_string[1];</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Since<sp/>we<sp/>are<sp/>pointing<sp/>new_string-&gt;string_data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>at<sp/>memory<sp/>allocated<sp/>at<sp/>the<sp/>end<sp/>of<sp/>self,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>may<sp/>need<sp/>to<sp/>update<sp/>the<sp/>pointer<sp/>if<sp/>realloc<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>moved<sp/>the<sp/>whole<sp/>block,<sp/>since<sp/>self-&gt;string_data<sp/>now<sp/>points</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>an<sp/>address<sp/>in<sp/>the<sp/>previous<sp/>block<sp/>over<sp/>memory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(self-&gt;string_data<sp/>!=<sp/>new_data)<sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcpy(new_data,<sp/>self-&gt;string_data);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;string_data<sp/>=<sp/>new_data;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;string_data<sp/>=<sp/>strcat(self-&gt;string_data,<sp/>other-&gt;<ref refid="structString_1ac529e31052a3b2f49fd1f80cbe2327bb" kindref="member">string_data</ref>);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Cannot<sp/>append<sp/>some<sp/>type<sp/>to<sp/>string\n&quot;</highlight><highlight class="normal">)<sp/>;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(1);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="94"><highlight class="normal">}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97" refid="string_8c_1a1908c7dc8629ec342445a6e2a7c247f2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="string_8c_1a1908c7dc8629ec342445a6e2a7c247f2" kindref="member">String_equal</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>_self,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>_other){</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structString" kindref="compound">String</ref><sp/>*<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>=<sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structString" kindref="compound">String</ref><sp/>*)<sp/>_self;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structclass__header" kindref="compound">class_header</ref><sp/>*<sp/>other<sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structclass__header" kindref="compound">class_header</ref><sp/>*)<sp/>_other;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group__common_1ga68940c707bbebe6946aeca72df1ee803" kindref="member">type</ref>(other)<sp/>==<sp/><ref refid="string_8c_1a7b896f7c16c20c94b9b961fe9e926a4f" kindref="member">String</ref>){</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>strcmp(<ref refid="object_8c_1a317798c33e05ea3ca01d0a70148f61ad" kindref="member">str</ref>(</highlight><highlight class="keyword">self</highlight><highlight class="normal">),<sp/><ref refid="object_8c_1a317798c33e05ea3ca01d0a70148f61ad" kindref="member">str</ref>(other))<sp/>==<sp/>0;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Cannot<sp/>compare<sp/>String<sp/>to<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="group__common_1gadcc35aece3f8a4c822a9bf2a591f087b" kindref="member">clsname</ref>(other));</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(1);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="107"><highlight class="normal">}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110" refid="string_8c_1a1742803c7014bd0c59f1072d54e1a023" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="string_8c_1a1742803c7014bd0c59f1072d54e1a023" kindref="member">String_copy</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>_self){</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structString" kindref="compound">String</ref><sp/>*<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>=<sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structString" kindref="compound">String</ref><sp/>*)<sp/>_self;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal">(<ref refid="string_8c_1a7b896f7c16c20c94b9b961fe9e926a4f" kindref="member">String</ref>,<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;string_data);</highlight></codeline>
<codeline lineno="113"><highlight class="normal">}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115" refid="string_8c_1a0861087e40ab0649cb2c5ce91798171b" refkind="member"><highlight class="normal">uint32_t<sp/><ref refid="string_8c_1a0861087e40ab0649cb2c5ce91798171b" kindref="member">FNV32</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*s,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="group__common_1ga15be7f4a5b9c979feb83b76278f6716c" kindref="member">len</ref>)<sp/>{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>adapter<sp/>from<sp/>http://ctips.pbworks.com/w/page/7277591/FNV%20Hash</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="group__collection_1gae0b3682e6ff5038e94c9e551bdd0d489" kindref="member">hash</ref><sp/>=<sp/><ref refid="string_8c_1a09402fb28fe13d84677fb8a90c3955c5" kindref="member">FNV_OFFSET_32</ref>,<sp/>i;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="group__common_1ga15be7f4a5b9c979feb83b76278f6716c" kindref="member">len</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__collection_1gae0b3682e6ff5038e94c9e551bdd0d489" kindref="member">hash</ref><sp/>=<sp/><ref refid="group__collection_1gae0b3682e6ff5038e94c9e551bdd0d489" kindref="member">hash</ref><sp/>^<sp/>(s[i]);<sp/></highlight><highlight class="comment">//<sp/>xor<sp/>next<sp/>byte<sp/>into<sp/>the<sp/>bottom<sp/>of<sp/>the<sp/>hash</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__collection_1gae0b3682e6ff5038e94c9e551bdd0d489" kindref="member">hash</ref><sp/>=<sp/><ref refid="group__collection_1gae0b3682e6ff5038e94c9e551bdd0d489" kindref="member">hash</ref><sp/>*<sp/><ref refid="string_8c_1a6a18c840bbf00da32a4e35a85342095a" kindref="member">FNV_PRIME_32</ref>;<sp/></highlight><highlight class="comment">//<sp/>Multiply<sp/>by<sp/>prime<sp/>number<sp/>found<sp/>to<sp/>work<sp/>well</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__collection_1gae0b3682e6ff5038e94c9e551bdd0d489" kindref="member">hash</ref>;</highlight></codeline>
<codeline lineno="124"><highlight class="normal">}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126" refid="string_8c_1a518744bdc3e883cc2349d5b4cd32cb95" refkind="member"><highlight class="normal">uint64_t<sp/><ref refid="string_8c_1a518744bdc3e883cc2349d5b4cd32cb95" kindref="member">String_hash</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>_self)<sp/>{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>See<sp/>https://cp-algorithms.com/string/string-hashing.html</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Consider<sp/>https://github.com/haipome/fnv/blob/master/fnv.c</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structString" kindref="compound">String</ref><sp/>*<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>=<sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structString" kindref="compound">String</ref><sp/>*)<sp/>_self;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="string_8c_1a0861087e40ab0649cb2c5ce91798171b" kindref="member">FNV32</ref>(self-&gt;string_data,<sp/>self-&gt;len);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO<sp/>reduce<sp/>collisions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>int64_t<sp/>p<sp/>=<sp/>53;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>int64_t<sp/>m<sp/>=<sp/>1e9<sp/>+<sp/>9;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>int64_t<sp/>hash_value<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>int64_t<sp/>p_pow<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;len;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>c<sp/>=<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;string_data[i];</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hash_value<sp/>=<sp/>(hash_value<sp/>+<sp/>(c<sp/>-<sp/></highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal"><sp/>+<sp/>1)<sp/>*<sp/>p_pow)<sp/>%<sp/>m;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_pow<sp/>=<sp/>(p_pow<sp/>*<sp/>p)<sp/>%<sp/>m;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hash_value;</highlight></codeline>
<codeline lineno="144"><highlight class="normal">}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147" refid="string_8c_1a46e31843df274eb8ce4b256dc005df49" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structStringClass" kindref="compound">StringClass</ref><sp/><ref refid="string_8c_1a46e31843df274eb8ce4b256dc005df49" kindref="member">string_class</ref><sp/>=<sp/>{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>.<ref refid="structStringClass_1a8c8d1fa459fe14f1514f9b06982710d2" kindref="member">class</ref><sp/>=<sp/>{.<ref refid="structclass__header_1aa98964036010ad63554856c5f4680cec" kindref="member">magic</ref><sp/>=<sp/><ref refid="object__internal_8h_1a94630370ae389fb1189282fa0742f310" kindref="member">MAGIC</ref>,</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.size<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structString" kindref="compound">String</ref>),</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.object_init<sp/>=<sp/><ref refid="string_8c_1a2e1266f696c96e5bfd8ffbed7be891fa" kindref="member">__construct__String</ref>,</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.get_size<sp/>=<sp/><ref refid="string_8c_1a4b419646ac4f54ba6302b8e4e58c9678" kindref="member">String_get_size</ref>,</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.get_len<sp/>=<sp/><ref refid="string_8c_1ad9f87c949c08dce2651433d0cc06d8dd" kindref="member">String_get_len</ref>,</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.str<sp/>=<sp/><ref refid="string_8c_1a9a56d1c8e084d0302f33b3b90260693d" kindref="member">String_str</ref>,</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.copy<sp/>=<sp/><ref refid="string_8c_1a1742803c7014bd0c59f1072d54e1a023" kindref="member">String_copy</ref>,</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.append<sp/>=<sp/><ref refid="string_8c_1ad84cbc93082cb73a0aeb9911e2768c90" kindref="member">String_append</ref>,</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.hash<sp/>=<sp/><ref refid="string_8c_1a518744bdc3e883cc2349d5b4cd32cb95" kindref="member">String_hash</ref>,</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.equals<sp/>=<sp/><ref refid="string_8c_1a1908c7dc8629ec342445a6e2a7c247f2" kindref="member">String_equal</ref>,</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.object_name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;String&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal">};</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163" refid="string_8h_1a7b896f7c16c20c94b9b961fe9e926a4f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/><ref refid="structString" kindref="compound">String</ref><sp/>=<sp/>&amp;<ref refid="string_8c_1a46e31843df274eb8ce4b256dc005df49" kindref="member">string_class</ref>;</highlight></codeline>
    </programlisting>
    <location file="/Users/igutek/Documents/Projects/ooc/src/string.c"/>
  </compounddef>
</doxygen>
