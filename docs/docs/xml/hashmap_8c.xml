<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="hashmap_8c" kind="file" language="C++">
    <compoundname>hashmap.c</compoundname>
    <includes refid="object__internal_8h" local="yes">object_internal.h</includes>
    <includes refid="hashmap_8h" local="no">ooc/hashmap.h</includes>
    <incdepgraph>
      <node id="97">
        <label>stdbool.h</label>
      </node>
      <node id="96">
        <label>stdarg.h</label>
      </node>
      <node id="92">
        <label>/Users/igutek/Documents/Projects/ooc/src/hashmap.c</label>
        <link refid="hashmap_8c"/>
        <childnode refid="93" relation="include">
        </childnode>
        <childnode refid="98" relation="include">
        </childnode>
      </node>
      <node id="104">
        <label>assert.h</label>
      </node>
      <node id="94">
        <label>stdint.h</label>
      </node>
      <node id="95">
        <label>stdlib.h</label>
      </node>
      <node id="93">
        <label>object_internal.h</label>
        <link refid="object__internal_8h"/>
        <childnode refid="94" relation="include">
        </childnode>
        <childnode refid="95" relation="include">
        </childnode>
        <childnode refid="96" relation="include">
        </childnode>
        <childnode refid="97" relation="include">
        </childnode>
      </node>
      <node id="98">
        <label>ooc/hashmap.h</label>
        <link refid="hashmap_8h"/>
        <childnode refid="99" relation="include">
        </childnode>
        <childnode refid="102" relation="include">
        </childnode>
        <childnode refid="94" relation="include">
        </childnode>
        <childnode refid="95" relation="include">
        </childnode>
        <childnode refid="103" relation="include">
        </childnode>
        <childnode refid="104" relation="include">
        </childnode>
        <childnode refid="105" relation="include">
        </childnode>
      </node>
      <node id="100">
        <label>stddef.h</label>
      </node>
      <node id="103">
        <label>time.h</label>
      </node>
      <node id="105">
        <label>math.h</label>
      </node>
      <node id="99">
        <label>object.h</label>
        <link refid="object_8h"/>
        <childnode refid="100" relation="include">
        </childnode>
        <childnode refid="101" relation="include">
        </childnode>
        <childnode refid="95" relation="include">
        </childnode>
        <childnode refid="96" relation="include">
        </childnode>
        <childnode refid="97" relation="include">
        </childnode>
        <childnode refid="94" relation="include">
        </childnode>
      </node>
      <node id="102">
        <label>string.h</label>
        <link refid="string_8h"/>
        <childnode refid="99" relation="include">
        </childnode>
        <childnode refid="102" relation="include">
        </childnode>
      </node>
      <node id="101">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="structHashItem" prot="public">HashItem</innerclass>
    <innerclass refid="structHashMap" prot="public">HashMap</innerclass>
    <innerclass refid="structHashMap__iter" prot="public">HashMap_iter</innerclass>
    <innerclass refid="structHashMapClass" prot="public">HashMapClass</innerclass>
    <innerclass refid="structHashMapClass__iter" prot="public">HashMapClass_iter</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="hashmap_8c_1a9fa4b8c9552dae40afdc18558bfd4893" prot="public" static="no">
        <name>ODD</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/igutek/Documents/Projects/ooc/src/hashmap.c" line="37" column="9" bodyfile="/Users/igutek/Documents/Projects/ooc/src/hashmap.c" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hashmap_8c_1a0ecdd7deb868e0319b01e42a1d9db86a" prot="public" static="no">
        <name>EVEN</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/igutek/Documents/Projects/ooc/src/hashmap.c" line="38" column="9" bodyfile="/Users/igutek/Documents/Projects/ooc/src/hashmap.c" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hashmap_8c_1a649b8f01fd6c0f47ff3cbddaeba63bfb" prot="public" static="no">
        <name>W</name>
        <initializer>64</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/igutek/Documents/Projects/ooc/src/hashmap.c" line="42" column="9" bodyfile="/Users/igutek/Documents/Projects/ooc/src/hashmap.c" bodystart="42" bodyend="-1"/>
        <referencedby refid="hashmap_8c_1a62d30d0ca399807fa03a80759da17168" compoundref="hashmap_8c" startline="102" endline="105">internal_hash</referencedby>
        <referencedby refid="hashmap_8c_1af3c89e259a9e4ad29cab4c9e22cfbd5b" compoundref="hashmap_8c" startline="96" endline="100">random_b</referencedby>
      </memberdef>
      <memberdef kind="define" id="hashmap_8c_1a513c061a66f664105b12ff672419fc39" prot="public" static="no">
        <name>HASH_TABLE_DEFAULT_LEN</name>
        <initializer>4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/igutek/Documents/Projects/ooc/src/hashmap.c" line="43" column="9" bodyfile="/Users/igutek/Documents/Projects/ooc/src/hashmap.c" bodystart="43" bodyend="-1"/>
        <referencedby refid="hashmap_8c_1a91f44dc50fe5d24c4970a8772347bef7" compoundref="hashmap_8c" startline="277" endline="304">__construct__HashMap</referencedby>
        <referencedby refid="hashmap_8c_1aa3b3074d83ff5a38f6164c7e4b459fa5" compoundref="hashmap_8c" startline="193" endline="252">internal_resize_HashMap</referencedby>
      </memberdef>
      <memberdef kind="define" id="hashmap_8c_1a4e74c4d2d47cb63f124c970895846958" prot="public" static="no">
        <name>MAX_A</name>
        <initializer>18446744073709551615L</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/igutek/Documents/Projects/ooc/src/hashmap.c" line="44" column="9" bodyfile="/Users/igutek/Documents/Projects/ooc/src/hashmap.c" bodystart="44" bodyend="-1"/>
        <referencedby refid="hashmap_8c_1a2f99243b32985f56493f04b192071dc7" compoundref="hashmap_8c" startline="80" endline="85">random_a</referencedby>
      </memberdef>
      <memberdef kind="define" id="hashmap_8c_1ac5b763fe6cba352a54dc5d482b587329" prot="public" static="no">
        <name>HWM_FRACTION</name>
        <initializer>0.5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/igutek/Documents/Projects/ooc/src/hashmap.c" line="45" column="9" bodyfile="/Users/igutek/Documents/Projects/ooc/src/hashmap.c" bodystart="45" bodyend="-1"/>
        <referencedby refid="hashmap_8c_1a91f44dc50fe5d24c4970a8772347bef7" compoundref="hashmap_8c" startline="277" endline="304">__construct__HashMap</referencedby>
        <referencedby refid="hashmap_8c_1aa3b3074d83ff5a38f6164c7e4b459fa5" compoundref="hashmap_8c" startline="193" endline="252">internal_resize_HashMap</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="hashmap_8c_1a117e434224df522bdd46118932d54501" prot="public" static="no">
        <type>struct <ref refid="structHashItem" kindref="compound">HashItem</ref></type>
        <definition>typedef struct HashItem HashItem</definition>
        <argsstring></argsstring>
        <name>HashItem</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/igutek/Documents/Projects/ooc/src/hashmap.c" line="1" column="1" bodyfile="/Users/igutek/Documents/Projects/ooc/src/hashmap.c" bodystart="12" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="hashmap_8c_1a4f5276c8ff5ef060a2a4bf1f07192371" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool rng_seeded</definition>
        <argsstring></argsstring>
        <name>rng_seeded</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/igutek/Documents/Projects/ooc/src/hashmap.c" line="55" column="1" bodyfile="/Users/igutek/Documents/Projects/ooc/src/hashmap.c" bodystart="55" bodyend="-1"/>
        <referencedby refid="hashmap_8c_1a91f44dc50fe5d24c4970a8772347bef7" compoundref="hashmap_8c" startline="277" endline="304">__construct__HashMap</referencedby>
      </memberdef>
      <memberdef kind="variable" id="hashmap_8c_1a4b069b7a04e527d80cea5855fb3d2a95" prot="public" static="no" mutable="no">
        <type>struct <ref refid="structHashMapClass" kindref="compound">HashMapClass</ref></type>
        <definition>struct HashMapClass hash_map_class</definition>
        <argsstring></argsstring>
        <name>hash_map_class</name>
        <initializer>= {
    .class = {.magic = <ref refid="object__internal_8h_1a94630370ae389fb1189282fa0742f310" kindref="member">MAGIC</ref>,
              .<ref refid="group__common_1gafac8564ed88a6f8585f043fc6b2fa7e1" kindref="member">size</ref> = sizeof(struct <ref refid="structHashMap" kindref="compound">HashMap</ref>),
              .object_init = <ref refid="hashmap_8c_1a91f44dc50fe5d24c4970a8772347bef7" kindref="member">__construct__HashMap</ref>,
              .object_deinit = <ref refid="hashmap_8c_1a4425bb488e5bfb1e9244675a31df3470" kindref="member">__destruct__HashMap</ref>,
              .get_size = <ref refid="hashmap_8c_1a700517ea0c1ffc800b7c93b475a5e78a" kindref="member">get_size_HashMap</ref>,
              .get_len = <ref refid="hashmap_8c_1a79dcb455435133253d86b70e31e3cba3" kindref="member">get_len_HashMap</ref>,
              .<ref refid="object_8h_1a6ab4b3e256d10044340c1f861c031438" kindref="member">str</ref> = <ref refid="hashmap_8c_1a12bafd8be5b1e7cee7f0d61a2a7a4c2e" kindref="member">str_HashMap</ref>,
              .<ref refid="group__common_1gab08ed4d7b5aa115383f38057e006be9d" kindref="member">copy</ref> = <ref refid="hashmap_8c_1a92b093655c1077032c065f51aed37652" kindref="member">copy_HashMap</ref>,
              .<ref refid="group__collection_1gaa1b700b0fbad0b56b81291260569d8b2" kindref="member">insert</ref> = <ref refid="hashmap_8c_1a2987322764f770f61fe71f0a1320fc7b" kindref="member">insert_HashMap</ref>,
              .get = <ref refid="hashmap_8c_1aa88aa2ed0651f4feb2e275ba14114d14" kindref="member">get_HashMap</ref>,
              .<ref refid="group__collection_1ga8b99290b943601321e5bf291daecaae3" kindref="member">del_item</ref> = <ref refid="hashmap_8c_1a10476d872d0cfcb234391cabf5e888a1" kindref="member">del_item_HashMap</ref>,
              .<ref refid="group__collection_1ga0cb67414335937707c9b92809a10895b" kindref="member">iter</ref> = <ref refid="hashmap_8c_1aa1645276039a5f13164347699538139b" kindref="member">iter_HashMap</ref>,
              .object_name = &quot;HashMap&quot;
             }

}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/igutek/Documents/Projects/ooc/src/hashmap.c" line="514" column="1" bodyfile="/Users/igutek/Documents/Projects/ooc/src/hashmap.c" bodystart="520" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="hashmap_8c_1a460bbbf2046f6aaf34ce30bb2be13939" prot="public" static="no" mutable="no">
        <type>void *</type>
        <definition>void* HashMap</definition>
        <argsstring></argsstring>
        <name>HashMap</name>
        <initializer>= &amp;<ref refid="hashmap_8c_1a4b069b7a04e527d80cea5855fb3d2a95" kindref="member">hash_map_class</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/igutek/Documents/Projects/ooc/src/hashmap.c" line="539" column="1" bodyfile="/Users/igutek/Documents/Projects/ooc/src/hashmap.c" bodystart="539" bodyend="-1"/>
        <referencedby refid="hashmap_8c_1a91f44dc50fe5d24c4970a8772347bef7" compoundref="hashmap_8c" startline="277" endline="304">__construct__HashMap</referencedby>
        <referencedby refid="main_8c_1a0ddf1224851353fc92bfbff6f499fa97" compoundref="main_8c" startline="8" endline="43">main</referencedby>
      </memberdef>
      <memberdef kind="variable" id="hashmap_8c_1a19a320a0fb44773b7b2edde8b06f7e0b" prot="public" static="no" mutable="no">
        <type>struct <ref refid="structHashMapClass__iter" kindref="compound">HashMapClass_iter</ref></type>
        <definition>struct HashMapClass_iter hash_map_class_iter</definition>
        <argsstring></argsstring>
        <name>hash_map_class_iter</name>
        <initializer>= {
    .class = {.magic = <ref refid="object__internal_8h_1a94630370ae389fb1189282fa0742f310" kindref="member">MAGIC</ref>,
              .object_init = <ref refid="hashmap_8c_1ae8c6201244c05c149ee58f00693fbe18" kindref="member">__construct__HashMap_iter</ref>,
              .<ref refid="group__common_1gafac8564ed88a6f8585f043fc6b2fa7e1" kindref="member">size</ref> = sizeof(struct <ref refid="structHashMap__iter" kindref="compound">HashMap_iter</ref>),
              .<ref refid="group__collection_1gaecc46e74b03a83ca8a8023cc7264489c" kindref="member">next</ref> = <ref refid="hashmap_8c_1a5601cd221918b26557f36f577c909407" kindref="member">next_HashMap</ref>
             }

}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/igutek/Documents/Projects/ooc/src/hashmap.c" line="539" column="1" bodyfile="/Users/igutek/Documents/Projects/ooc/src/hashmap.c" bodystart="541" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="hashmap_8c_1a45019180cc2e660110ceabdc4b807f3e" prot="public" static="no" mutable="no">
        <type>void *</type>
        <definition>void* HashMap_iter</definition>
        <argsstring></argsstring>
        <name>HashMap_iter</name>
        <initializer>= &amp;<ref refid="hashmap_8c_1a19a320a0fb44773b7b2edde8b06f7e0b" kindref="member">hash_map_class_iter</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/igutek/Documents/Projects/ooc/src/hashmap.c" line="549" column="1" bodyfile="/Users/igutek/Documents/Projects/ooc/src/hashmap.c" bodystart="549" bodyend="-1"/>
        <referencedby refid="hashmap_8c_1ae8c6201244c05c149ee58f00693fbe18" compoundref="hashmap_8c" startline="500" endline="512">__construct__HashMap_iter</referencedby>
        <referencedby refid="hashmap_8c_1aa1645276039a5f13164347699538139b" compoundref="hashmap_8c" startline="453" endline="455">iter_HashMap</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="hashmap_8c_1a91f44dc50fe5d24c4970a8772347bef7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const void *</type>
        <definition>const void * __construct__HashMap</definition>
        <argsstring>(const void *self, va_list args)</argsstring>
        <name>__construct__HashMap</name>
        <param>
          <type>const void *</type>
          <declname>self</declname>
        </param>
        <param>
          <type>va_list</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/igutek/Documents/Projects/ooc/src/hashmap.c" line="56" column="1" bodyfile="/Users/igutek/Documents/Projects/ooc/src/hashmap.c" bodystart="277" bodyend="304"/>
        <references refid="hashmap_8c_1a5c97b94958e87967d62dc8832202aabc" compoundref="hashmap_8c" startline="73" endline="77">alloc_hash_items</references>
        <references refid="hashmap_8c_1a513c061a66f664105b12ff672419fc39" compoundref="hashmap_8c" startline="43">HASH_TABLE_DEFAULT_LEN</references>
        <references refid="hashmap_8c_1a460bbbf2046f6aaf34ce30bb2be13939" compoundref="hashmap_8c" startline="539">HashMap</references>
        <references refid="hashmap_8c_1ac5b763fe6cba352a54dc5d482b587329" compoundref="hashmap_8c" startline="45">HWM_FRACTION</references>
        <references refid="hashmap_8c_1a84e2e7a7b9433d44b77193d0b05a1ae7" compoundref="hashmap_8c" startline="87" endline="94">lg</references>
        <references refid="hashmap_8c_1a2f99243b32985f56493f04b192071dc7" compoundref="hashmap_8c" startline="80" endline="85">random_a</references>
        <references refid="hashmap_8c_1af3c89e259a9e4ad29cab4c9e22cfbd5b" compoundref="hashmap_8c" startline="96" endline="100">random_b</references>
        <references refid="hashmap_8c_1a4f5276c8ff5ef060a2a4bf1f07192371" compoundref="hashmap_8c" startline="55">rng_seeded</references>
        <references refid="structHashMap_1aae8bf9f119b0659b9ad29261e2e3d520" compoundref="hashmap_8c" startline="16">HashMap::size</references>
      </memberdef>
      <memberdef kind="function" id="hashmap_8c_1ade2afccd37e881325eb1ce005a1d8d1e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void print_HashMap</definition>
        <argsstring>(void *_self)</argsstring>
        <name>print_HashMap</name>
        <param>
          <type>void *</type>
          <declname>_self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/igutek/Documents/Projects/ooc/src/hashmap.c" line="57" column="1" bodyfile="/Users/igutek/Documents/Projects/ooc/src/hashmap.c" bodystart="311" bodyend="314"/>
      </memberdef>
      <memberdef kind="function" id="hashmap_8c_1a700517ea0c1ffc800b7c93b475a5e78a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t get_size_HashMap</definition>
        <argsstring>(const void *_self)</argsstring>
        <name>get_size_HashMap</name>
        <param>
          <type>const void *</type>
          <declname>_self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/igutek/Documents/Projects/ooc/src/hashmap.c" line="58" column="1" bodyfile="/Users/igutek/Documents/Projects/ooc/src/hashmap.c" bodystart="272" bodyend="275"/>
        <references refid="structHashMap_1aae8bf9f119b0659b9ad29261e2e3d520" compoundref="hashmap_8c" startline="16">HashMap::size</references>
      </memberdef>
      <memberdef kind="function" id="hashmap_8c_1a79dcb455435133253d86b70e31e3cba3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t get_len_HashMap</definition>
        <argsstring>(const void *_self)</argsstring>
        <name>get_len_HashMap</name>
        <param>
          <type>const void *</type>
          <declname>_self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/igutek/Documents/Projects/ooc/src/hashmap.c" line="59" column="1" bodyfile="/Users/igutek/Documents/Projects/ooc/src/hashmap.c" bodystart="256" bodyend="267"/>
        <references refid="hashmap_8c_1a3941f840164dd3ce845aec0bd5fc5652" compoundref="hashmap_8c" startline="175" endline="192">internal_count_HashMap</references>
        <references refid="hashmap_8c_1ab39c45942b557d7634a849c1292b9522" compoundref="hashmap_8c" startline="152" endline="173">internal_print_table</references>
      </memberdef>
      <memberdef kind="function" id="hashmap_8c_1a12bafd8be5b1e7cee7f0d61a2a7a4c2e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * str_HashMap</definition>
        <argsstring>(const void *_self)</argsstring>
        <name>str_HashMap</name>
        <param>
          <type>const void *</type>
          <declname>_self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/igutek/Documents/Projects/ooc/src/hashmap.c" line="60" column="1" bodyfile="/Users/igutek/Documents/Projects/ooc/src/hashmap.c" bodystart="317" bodyend="321"/>
      </memberdef>
      <memberdef kind="function" id="hashmap_8c_1a2987322764f770f61fe71f0a1320fc7b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void insert_HashMap</definition>
        <argsstring>(const void *_self, const void *key, const void *_other)</argsstring>
        <name>insert_HashMap</name>
        <param>
          <type>const void *</type>
          <declname>_self</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>key</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>_other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/igutek/Documents/Projects/ooc/src/hashmap.c" line="61" column="1" bodyfile="/Users/igutek/Documents/Projects/ooc/src/hashmap.c" bodystart="324" bodyend="341"/>
        <references refid="object_8c_1a8837e68ffda149b4f7015cafab0c2a3c" compoundref="object_8c" startline="180" endline="182">get_class_header</references>
        <references refid="group__collection_1gaaad95663edf19fd4b734bd9977976169" compoundref="object_8c" startline="164" endline="177">get_obj</references>
        <references refid="structclass__header_1aa0035a2c833b1e46f0ae401d6b44ee65" compoundref="object__internal_8h" startline="189">class_header::hash</references>
        <references refid="hashmap_8c_1a8aa67d2dac0692c1128b50780ad9dfc1" compoundref="hashmap_8c" startline="107" endline="150">internal_insert_HashMap</references>
        <references refid="object_8c_1a317798c33e05ea3ca01d0a70148f61ad" compoundref="object_8c" startline="46" endline="56">str</references>
      </memberdef>
      <memberdef kind="function" id="hashmap_8c_1aa88aa2ed0651f4feb2e275ba14114d14" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const void *</type>
        <definition>const void * get_HashMap</definition>
        <argsstring>(const void *_self, const void *key)</argsstring>
        <name>get_HashMap</name>
        <param>
          <type>const void *</type>
          <declname>_self</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/igutek/Documents/Projects/ooc/src/hashmap.c" line="64" column="1" bodyfile="/Users/igutek/Documents/Projects/ooc/src/hashmap.c" bodystart="343" bodyend="375"/>
        <references refid="group__common_1ga4b83176929aeea62524d2a126d3c897f" compoundref="object_8c" startline="135" endline="148">equals</references>
        <references refid="object_8c_1a8837e68ffda149b4f7015cafab0c2a3c" compoundref="object_8c" startline="180" endline="182">get_class_header</references>
        <references refid="group__collection_1gaaad95663edf19fd4b734bd9977976169" compoundref="object_8c" startline="164" endline="177">get_obj</references>
        <references refid="structclass__header_1aa0035a2c833b1e46f0ae401d6b44ee65" compoundref="object__internal_8h" startline="189">class_header::hash</references>
        <references refid="hashmap_8c_1a62d30d0ca399807fa03a80759da17168" compoundref="hashmap_8c" startline="102" endline="105">internal_hash</references>
        <references refid="structHashItem_1ab70c6466a57bc6f281a7943350a74329" compoundref="hashmap_8c" startline="6">HashItem::internal_key</references>
        <references refid="structHashItem_1a0bd79196ef574b956a40b009950a1ef4" compoundref="hashmap_8c" startline="7">HashItem::key</references>
        <references refid="structHashItem_1a623917e154bb2a360da5cbc9d3329171" compoundref="hashmap_8c" startline="9">HashItem::next</references>
        <references refid="object_8c_1a317798c33e05ea3ca01d0a70148f61ad" compoundref="object_8c" startline="46" endline="56">str</references>
        <references refid="structHashItem_1abb041948b3408787c4d46d9afd8fb793" compoundref="hashmap_8c" startline="8">HashItem::value</references>
      </memberdef>
      <memberdef kind="function" id="hashmap_8c_1a92b093655c1077032c065f51aed37652" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const void *</type>
        <definition>const void * copy_HashMap</definition>
        <argsstring>(const void *_self)</argsstring>
        <name>copy_HashMap</name>
        <param>
          <type>const void *</type>
          <declname>_self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/igutek/Documents/Projects/ooc/src/hashmap.c" line="67" column="1" bodyfile="/Users/igutek/Documents/Projects/ooc/src/hashmap.c" bodystart="514" bodyend="517"/>
      </memberdef>
      <memberdef kind="function" id="hashmap_8c_1a5601cd221918b26557f36f577c909407" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const void *</type>
        <definition>const void * next_HashMap</definition>
        <argsstring>(const void *_self)</argsstring>
        <name>next_HashMap</name>
        <param>
          <type>const void *</type>
          <declname>_self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/igutek/Documents/Projects/ooc/src/hashmap.c" line="68" column="1" bodyfile="/Users/igutek/Documents/Projects/ooc/src/hashmap.c" bodystart="464" bodyend="498"/>
        <references refid="structHashItem_1a623917e154bb2a360da5cbc9d3329171" compoundref="hashmap_8c" startline="9">HashItem::next</references>
        <references refid="structHashItem_1abb041948b3408787c4d46d9afd8fb793" compoundref="hashmap_8c" startline="8">HashItem::value</references>
      </memberdef>
      <memberdef kind="function" id="hashmap_8c_1aa3b3074d83ff5a38f6164c7e4b459fa5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void internal_resize_HashMap</definition>
        <argsstring>(struct HashMap *self, uint64_t new_m)</argsstring>
        <name>internal_resize_HashMap</name>
        <param>
          <type>struct <ref refid="structHashMap" kindref="compound">HashMap</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>new_m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/igutek/Documents/Projects/ooc/src/hashmap.c" line="70" column="1" bodyfile="/Users/igutek/Documents/Projects/ooc/src/hashmap.c" bodystart="193" bodyend="252"/>
        <references refid="hashmap_8c_1a5c97b94958e87967d62dc8832202aabc" compoundref="hashmap_8c" startline="73" endline="77">alloc_hash_items</references>
        <references refid="hashmap_8c_1a513c061a66f664105b12ff672419fc39" compoundref="hashmap_8c" startline="43">HASH_TABLE_DEFAULT_LEN</references>
        <references refid="hashmap_8c_1ac5b763fe6cba352a54dc5d482b587329" compoundref="hashmap_8c" startline="45">HWM_FRACTION</references>
        <references refid="hashmap_8c_1a8aa67d2dac0692c1128b50780ad9dfc1" compoundref="hashmap_8c" startline="107" endline="150">internal_insert_HashMap</references>
        <references refid="hashmap_8c_1ab39c45942b557d7634a849c1292b9522" compoundref="hashmap_8c" startline="152" endline="173">internal_print_table</references>
        <references refid="structHashItem_1a0bd79196ef574b956a40b009950a1ef4" compoundref="hashmap_8c" startline="7">HashItem::key</references>
        <references refid="hashmap_8c_1a84e2e7a7b9433d44b77193d0b05a1ae7" compoundref="hashmap_8c" startline="87" endline="94">lg</references>
        <references refid="structHashItem_1a623917e154bb2a360da5cbc9d3329171" compoundref="hashmap_8c" startline="9">HashItem::next</references>
        <references refid="structHashItem_1a7fe892239fc6fb4cef7e2f2cf1581b1f" compoundref="hashmap_8c" startline="10">HashItem::present</references>
        <references refid="hashmap_8c_1a2f99243b32985f56493f04b192071dc7" compoundref="hashmap_8c" startline="80" endline="85">random_a</references>
        <references refid="hashmap_8c_1af3c89e259a9e4ad29cab4c9e22cfbd5b" compoundref="hashmap_8c" startline="96" endline="100">random_b</references>
        <references refid="structHashItem_1abb041948b3408787c4d46d9afd8fb793" compoundref="hashmap_8c" startline="8">HashItem::value</references>
        <referencedby refid="hashmap_8c_1a10476d872d0cfcb234391cabf5e888a1" compoundref="hashmap_8c" startline="378" endline="448">del_item_HashMap</referencedby>
        <referencedby refid="hashmap_8c_1a8aa67d2dac0692c1128b50780ad9dfc1" compoundref="hashmap_8c" startline="107" endline="150">internal_insert_HashMap</referencedby>
      </memberdef>
      <memberdef kind="function" id="hashmap_8c_1ab39c45942b557d7634a849c1292b9522" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void internal_print_table</definition>
        <argsstring>(struct HashMap *self)</argsstring>
        <name>internal_print_table</name>
        <param>
          <type>struct <ref refid="structHashMap" kindref="compound">HashMap</ref> *</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/igutek/Documents/Projects/ooc/src/hashmap.c" line="71" column="1" bodyfile="/Users/igutek/Documents/Projects/ooc/src/hashmap.c" bodystart="152" bodyend="173"/>
        <references refid="structHashItem_1ab70c6466a57bc6f281a7943350a74329" compoundref="hashmap_8c" startline="6">HashItem::internal_key</references>
        <references refid="structHashItem_1a623917e154bb2a360da5cbc9d3329171" compoundref="hashmap_8c" startline="9">HashItem::next</references>
        <references refid="structHashItem_1a7fe892239fc6fb4cef7e2f2cf1581b1f" compoundref="hashmap_8c" startline="10">HashItem::present</references>
        <referencedby refid="hashmap_8c_1a10476d872d0cfcb234391cabf5e888a1" compoundref="hashmap_8c" startline="378" endline="448">del_item_HashMap</referencedby>
        <referencedby refid="hashmap_8c_1a79dcb455435133253d86b70e31e3cba3" compoundref="hashmap_8c" startline="256" endline="267">get_len_HashMap</referencedby>
        <referencedby refid="hashmap_8c_1aa3b3074d83ff5a38f6164c7e4b459fa5" compoundref="hashmap_8c" startline="193" endline="252">internal_resize_HashMap</referencedby>
      </memberdef>
      <memberdef kind="function" id="hashmap_8c_1a5c97b94958e87967d62dc8832202aabc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structHashItem" kindref="compound">HashItem</ref> *</type>
        <definition>struct HashItem* alloc_hash_items</definition>
        <argsstring>(size_t n)</argsstring>
        <name>alloc_hash_items</name>
        <param>
          <type>size_t</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/igutek/Documents/Projects/ooc/src/hashmap.c" line="73" column="1" bodyfile="/Users/igutek/Documents/Projects/ooc/src/hashmap.c" bodystart="73" bodyend="77"/>
        <referencedby refid="hashmap_8c_1a91f44dc50fe5d24c4970a8772347bef7" compoundref="hashmap_8c" startline="277" endline="304">__construct__HashMap</referencedby>
        <referencedby refid="hashmap_8c_1aa3b3074d83ff5a38f6164c7e4b459fa5" compoundref="hashmap_8c" startline="193" endline="252">internal_resize_HashMap</referencedby>
      </memberdef>
      <memberdef kind="function" id="hashmap_8c_1a2f99243b32985f56493f04b192071dc7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint64_t</type>
        <definition>uint64_t random_a</definition>
        <argsstring>()</argsstring>
        <name>random_a</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/igutek/Documents/Projects/ooc/src/hashmap.c" line="80" column="1" bodyfile="/Users/igutek/Documents/Projects/ooc/src/hashmap.c" bodystart="80" bodyend="85"/>
        <references refid="hashmap_8c_1a4e74c4d2d47cb63f124c970895846958" compoundref="hashmap_8c" startline="44">MAX_A</references>
        <referencedby refid="hashmap_8c_1a91f44dc50fe5d24c4970a8772347bef7" compoundref="hashmap_8c" startline="277" endline="304">__construct__HashMap</referencedby>
        <referencedby refid="hashmap_8c_1aa3b3074d83ff5a38f6164c7e4b459fa5" compoundref="hashmap_8c" startline="193" endline="252">internal_resize_HashMap</referencedby>
      </memberdef>
      <memberdef kind="function" id="hashmap_8c_1a84e2e7a7b9433d44b77193d0b05a1ae7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint64_t</type>
        <definition>uint64_t lg</definition>
        <argsstring>(uint64_t n)</argsstring>
        <name>lg</name>
        <param>
          <type>uint64_t</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/igutek/Documents/Projects/ooc/src/hashmap.c" line="87" column="1" bodyfile="/Users/igutek/Documents/Projects/ooc/src/hashmap.c" bodystart="87" bodyend="94"/>
        <referencedby refid="hashmap_8c_1a91f44dc50fe5d24c4970a8772347bef7" compoundref="hashmap_8c" startline="277" endline="304">__construct__HashMap</referencedby>
        <referencedby refid="hashmap_8c_1aa3b3074d83ff5a38f6164c7e4b459fa5" compoundref="hashmap_8c" startline="193" endline="252">internal_resize_HashMap</referencedby>
        <referencedby refid="hashmap_8c_1af3c89e259a9e4ad29cab4c9e22cfbd5b" compoundref="hashmap_8c" startline="96" endline="100">random_b</referencedby>
      </memberdef>
      <memberdef kind="function" id="hashmap_8c_1af3c89e259a9e4ad29cab4c9e22cfbd5b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint64_t</type>
        <definition>uint64_t random_b</definition>
        <argsstring>(uint64_t m)</argsstring>
        <name>random_b</name>
        <param>
          <type>uint64_t</type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/igutek/Documents/Projects/ooc/src/hashmap.c" line="96" column="1" bodyfile="/Users/igutek/Documents/Projects/ooc/src/hashmap.c" bodystart="96" bodyend="100"/>
        <references refid="hashmap_8c_1a84e2e7a7b9433d44b77193d0b05a1ae7" compoundref="hashmap_8c" startline="87" endline="94">lg</references>
        <references refid="hashmap_8c_1a649b8f01fd6c0f47ff3cbddaeba63bfb" compoundref="hashmap_8c" startline="42">W</references>
        <referencedby refid="hashmap_8c_1a91f44dc50fe5d24c4970a8772347bef7" compoundref="hashmap_8c" startline="277" endline="304">__construct__HashMap</referencedby>
        <referencedby refid="hashmap_8c_1aa3b3074d83ff5a38f6164c7e4b459fa5" compoundref="hashmap_8c" startline="193" endline="252">internal_resize_HashMap</referencedby>
      </memberdef>
      <memberdef kind="function" id="hashmap_8c_1a62d30d0ca399807fa03a80759da17168" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint64_t</type>
        <definition>uint64_t internal_hash</definition>
        <argsstring>(uint64_t a, uint64_t b, uint64_t M, uint64_t key)</argsstring>
        <name>internal_hash</name>
        <param>
          <type>uint64_t</type>
          <declname>a</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>b</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>M</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/igutek/Documents/Projects/ooc/src/hashmap.c" line="102" column="1" bodyfile="/Users/igutek/Documents/Projects/ooc/src/hashmap.c" bodystart="102" bodyend="105"/>
        <references refid="structHashItem_1a0bd79196ef574b956a40b009950a1ef4" compoundref="hashmap_8c" startline="7">HashItem::key</references>
        <references refid="hashmap_8c_1a649b8f01fd6c0f47ff3cbddaeba63bfb" compoundref="hashmap_8c" startline="42">W</references>
        <referencedby refid="hashmap_8c_1a10476d872d0cfcb234391cabf5e888a1" compoundref="hashmap_8c" startline="378" endline="448">del_item_HashMap</referencedby>
        <referencedby refid="hashmap_8c_1aa88aa2ed0651f4feb2e275ba14114d14" compoundref="hashmap_8c" startline="343" endline="375">get_HashMap</referencedby>
        <referencedby refid="hashmap_8c_1a8aa67d2dac0692c1128b50780ad9dfc1" compoundref="hashmap_8c" startline="107" endline="150">internal_insert_HashMap</referencedby>
      </memberdef>
      <memberdef kind="function" id="hashmap_8c_1a8aa67d2dac0692c1128b50780ad9dfc1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void internal_insert_HashMap</definition>
        <argsstring>(struct HashMap *self, const void *_key, const void *_value)</argsstring>
        <name>internal_insert_HashMap</name>
        <param>
          <type>struct <ref refid="structHashMap" kindref="compound">HashMap</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>_key</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>_value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/igutek/Documents/Projects/ooc/src/hashmap.c" line="107" column="1" bodyfile="/Users/igutek/Documents/Projects/ooc/src/hashmap.c" bodystart="107" bodyend="150"/>
        <references refid="group__common_1ga4b83176929aeea62524d2a126d3c897f" compoundref="object_8c" startline="135" endline="148">equals</references>
        <references refid="object_8c_1a8837e68ffda149b4f7015cafab0c2a3c" compoundref="object_8c" startline="180" endline="182">get_class_header</references>
        <references refid="structclass__header_1aa0035a2c833b1e46f0ae401d6b44ee65" compoundref="object__internal_8h" startline="189">class_header::hash</references>
        <references refid="hashmap_8c_1a62d30d0ca399807fa03a80759da17168" compoundref="hashmap_8c" startline="102" endline="105">internal_hash</references>
        <references refid="structHashItem_1ab70c6466a57bc6f281a7943350a74329" compoundref="hashmap_8c" startline="6">HashItem::internal_key</references>
        <references refid="hashmap_8c_1aa3b3074d83ff5a38f6164c7e4b459fa5" compoundref="hashmap_8c" startline="193" endline="252">internal_resize_HashMap</references>
        <references refid="structHashItem_1a0bd79196ef574b956a40b009950a1ef4" compoundref="hashmap_8c" startline="7">HashItem::key</references>
        <references refid="structHashItem_1a623917e154bb2a360da5cbc9d3329171" compoundref="hashmap_8c" startline="9">HashItem::next</references>
        <references refid="structHashItem_1a7fe892239fc6fb4cef7e2f2cf1581b1f" compoundref="hashmap_8c" startline="10">HashItem::present</references>
        <references refid="structHashItem_1abb041948b3408787c4d46d9afd8fb793" compoundref="hashmap_8c" startline="8">HashItem::value</references>
        <referencedby refid="hashmap_8c_1a2987322764f770f61fe71f0a1320fc7b" compoundref="hashmap_8c" startline="324" endline="341">insert_HashMap</referencedby>
        <referencedby refid="hashmap_8c_1aa3b3074d83ff5a38f6164c7e4b459fa5" compoundref="hashmap_8c" startline="193" endline="252">internal_resize_HashMap</referencedby>
      </memberdef>
      <memberdef kind="function" id="hashmap_8c_1a3941f840164dd3ce845aec0bd5fc5652" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t internal_count_HashMap</definition>
        <argsstring>(struct HashMap *self)</argsstring>
        <name>internal_count_HashMap</name>
        <param>
          <type>struct <ref refid="structHashMap" kindref="compound">HashMap</ref> *</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/igutek/Documents/Projects/ooc/src/hashmap.c" line="175" column="1" bodyfile="/Users/igutek/Documents/Projects/ooc/src/hashmap.c" bodystart="175" bodyend="192"/>
        <references refid="structHashItem_1a623917e154bb2a360da5cbc9d3329171" compoundref="hashmap_8c" startline="9">HashItem::next</references>
        <references refid="structHashItem_1a7fe892239fc6fb4cef7e2f2cf1581b1f" compoundref="hashmap_8c" startline="10">HashItem::present</references>
        <referencedby refid="hashmap_8c_1a79dcb455435133253d86b70e31e3cba3" compoundref="hashmap_8c" startline="256" endline="267">get_len_HashMap</referencedby>
      </memberdef>
      <memberdef kind="function" id="hashmap_8c_1a4425bb488e5bfb1e9244675a31df3470" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void __destruct__HashMap</definition>
        <argsstring>(const void *_self, va_list args)</argsstring>
        <name>__destruct__HashMap</name>
        <param>
          <type>const void *</type>
          <declname>_self</declname>
        </param>
        <param>
          <type>va_list</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/igutek/Documents/Projects/ooc/src/hashmap.c" line="307" column="1" bodyfile="/Users/igutek/Documents/Projects/ooc/src/hashmap.c" bodystart="307" bodyend="309"/>
      </memberdef>
      <memberdef kind="function" id="hashmap_8c_1a10476d872d0cfcb234391cabf5e888a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void del_item_HashMap</definition>
        <argsstring>(const void *_self, const void *_key)</argsstring>
        <name>del_item_HashMap</name>
        <param>
          <type>const void *</type>
          <declname>_self</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>_key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/igutek/Documents/Projects/ooc/src/hashmap.c" line="378" column="1" bodyfile="/Users/igutek/Documents/Projects/ooc/src/hashmap.c" bodystart="378" bodyend="448"/>
        <references refid="group__collection_1gaaad95663edf19fd4b734bd9977976169" compoundref="object_8c" startline="164" endline="177">get_obj</references>
        <references refid="structclass__header_1aa0035a2c833b1e46f0ae401d6b44ee65" compoundref="object__internal_8h" startline="189">class_header::hash</references>
        <references refid="hashmap_8c_1a62d30d0ca399807fa03a80759da17168" compoundref="hashmap_8c" startline="102" endline="105">internal_hash</references>
        <references refid="structHashItem_1ab70c6466a57bc6f281a7943350a74329" compoundref="hashmap_8c" startline="6">HashItem::internal_key</references>
        <references refid="hashmap_8c_1ab39c45942b557d7634a849c1292b9522" compoundref="hashmap_8c" startline="152" endline="173">internal_print_table</references>
        <references refid="hashmap_8c_1aa3b3074d83ff5a38f6164c7e4b459fa5" compoundref="hashmap_8c" startline="193" endline="252">internal_resize_HashMap</references>
        <references refid="structHashItem_1a623917e154bb2a360da5cbc9d3329171" compoundref="hashmap_8c" startline="9">HashItem::next</references>
        <references refid="structHashItem_1a7fe892239fc6fb4cef7e2f2cf1581b1f" compoundref="hashmap_8c" startline="10">HashItem::present</references>
        <references refid="structHashItem_1abb041948b3408787c4d46d9afd8fb793" compoundref="hashmap_8c" startline="8">HashItem::value</references>
      </memberdef>
      <memberdef kind="function" id="hashmap_8c_1aa1645276039a5f13164347699538139b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const void *</type>
        <definition>const void* iter_HashMap</definition>
        <argsstring>(const void *_self)</argsstring>
        <name>iter_HashMap</name>
        <param>
          <type>const void *</type>
          <declname>_self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/igutek/Documents/Projects/ooc/src/hashmap.c" line="453" column="1" bodyfile="/Users/igutek/Documents/Projects/ooc/src/hashmap.c" bodystart="453" bodyend="455"/>
        <references refid="hashmap_8c_1a45019180cc2e660110ceabdc4b807f3e" compoundref="hashmap_8c" startline="549">HashMap_iter</references>
      </memberdef>
      <memberdef kind="function" id="hashmap_8c_1ae8c6201244c05c149ee58f00693fbe18" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const void *</type>
        <definition>const void* __construct__HashMap_iter</definition>
        <argsstring>(const void *_self, va_list args)</argsstring>
        <name>__construct__HashMap_iter</name>
        <param>
          <type>const void *</type>
          <declname>_self</declname>
        </param>
        <param>
          <type>va_list</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/igutek/Documents/Projects/ooc/src/hashmap.c" line="500" column="1" bodyfile="/Users/igutek/Documents/Projects/ooc/src/hashmap.c" bodystart="500" bodyend="512"/>
        <references refid="structHashMap__iter_1a632cf034be2d2d879dc8903f0ec8e003" compoundref="hashmap_8c" startline="30">HashMap_iter::class</references>
        <references refid="hashmap_8c_1a45019180cc2e660110ceabdc4b807f3e" compoundref="hashmap_8c" startline="549">HashMap_iter</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="object__internal_8h" kindref="compound">object_internal.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="hashmap_8h" kindref="compound">ooc/hashmap.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5" refid="structHashItem" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structHashItem" kindref="compound">HashItem</ref><sp/>{</highlight></codeline>
<codeline lineno="6" refid="structHashItem_1ab70c6466a57bc6f281a7943350a74329" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/><ref refid="structHashItem_1ab70c6466a57bc6f281a7943350a74329" kindref="member">internal_key</ref>;</highlight></codeline>
<codeline lineno="7" refid="structHashItem_1a0bd79196ef574b956a40b009950a1ef4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="structHashItem_1a0bd79196ef574b956a40b009950a1ef4" kindref="member">key</ref>;</highlight></codeline>
<codeline lineno="8" refid="structHashItem_1abb041948b3408787c4d46d9afd8fb793" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="structHashItem_1abb041948b3408787c4d46d9afd8fb793" kindref="member">value</ref>;</highlight></codeline>
<codeline lineno="9" refid="structHashItem_1a623917e154bb2a360da5cbc9d3329171" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structHashItem" kindref="compound">HashItem</ref><sp/>*<ref refid="structHashItem_1a623917e154bb2a360da5cbc9d3329171" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="10" refid="structHashItem_1a7fe892239fc6fb4cef7e2f2cf1581b1f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structHashItem_1a7fe892239fc6fb4cef7e2f2cf1581b1f" kindref="member">present</ref>;</highlight></codeline>
<codeline lineno="11"><highlight class="normal">};</highlight></codeline>
<codeline lineno="12" refid="hashmap_8c_1a117e434224df522bdd46118932d54501" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structHashItem" kindref="compound">HashItem</ref><sp/><ref refid="structHashItem" kindref="compound">HashItem</ref>;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14" refid="structHashMap" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structHashMap" kindref="compound">HashMap</ref><sp/>{</highlight></codeline>
<codeline lineno="15" refid="structHashMap_1aef6bbfa93b63be380becf8acc007eeaa" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structclass__header" kindref="compound">class_header</ref><sp/>*</highlight><highlight class="keyword">class</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="16" refid="structHashMap_1aae8bf9f119b0659b9ad29261e2e3d520" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="structHashMap_1aae8bf9f119b0659b9ad29261e2e3d520" kindref="member">size</ref>;</highlight></codeline>
<codeline lineno="17" refid="structHashMap_1a464e5e54144c37706fe47c69371150a0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="structHashMap_1a464e5e54144c37706fe47c69371150a0" kindref="member">len</ref>;</highlight></codeline>
<codeline lineno="18" refid="structHashMap_1aa2de9d8ff82650c9a88673cfa909932d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="structHashMap_1aa2de9d8ff82650c9a88673cfa909932d" kindref="member">m</ref>;</highlight></codeline>
<codeline lineno="19" refid="structHashMap_1a1afdecfc482f9bcbf1af8e77995690b9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="structHashMap_1a1afdecfc482f9bcbf1af8e77995690b9" kindref="member">M</ref>;</highlight></codeline>
<codeline lineno="20" refid="structHashMap_1a6ebe07175f56adb259c8a69f0488faca" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="structHashMap_1a6ebe07175f56adb259c8a69f0488faca" kindref="member">hwm</ref>;</highlight></codeline>
<codeline lineno="21" refid="structHashMap_1a5612a2ea2ff70d737e073799a8c6f14c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="structHashMap_1a5612a2ea2ff70d737e073799a8c6f14c" kindref="member">lwm</ref>;</highlight></codeline>
<codeline lineno="22" refid="structHashMap_1a786bc56e174662272a694a7cdf8b85f2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/><ref refid="structHashMap_1a786bc56e174662272a694a7cdf8b85f2" kindref="member">a</ref>;</highlight></codeline>
<codeline lineno="23" refid="structHashMap_1ac299cbbbb3099d161e9608669f5eb1d8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/><ref refid="structHashMap_1ac299cbbbb3099d161e9608669f5eb1d8" kindref="member">b</ref>;</highlight></codeline>
<codeline lineno="24" refid="structHashMap_1a9ef225abb9953fa741218d06489d06ff" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structHashMap_1a9ef225abb9953fa741218d06489d06ff" kindref="member">debug</ref>;</highlight></codeline>
<codeline lineno="25" refid="structHashMap_1aa763bbbe8b195b0070c3d2e2c1c4e4c2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structHashItem" kindref="compound">HashItem</ref><sp/>*<ref refid="structHashMap_1aa763bbbe8b195b0070c3d2e2c1c4e4c2" kindref="member">items</ref>;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal">};</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="structHashMap__iter" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structHashMap__iter" kindref="compound">HashMap_iter</ref><sp/>{</highlight></codeline>
<codeline lineno="30" refid="structHashMap__iter_1a632cf034be2d2d879dc8903f0ec8e003" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structclass__header" kindref="compound">class_header</ref><sp/>*</highlight><highlight class="keyword">class</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="31" refid="structHashMap__iter_1a298e8fda407d7e5baeff91ef0e312780" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structHashItem" kindref="compound">HashItem</ref><sp/>*<ref refid="structHashMap__iter_1a298e8fda407d7e5baeff91ef0e312780" kindref="member">current_item</ref>;</highlight></codeline>
<codeline lineno="32" refid="structHashMap__iter_1a0178778c493f8c8a3afb017cfc9904f0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structHashMap__iter_1a0178778c493f8c8a3afb017cfc9904f0" kindref="member">index</ref>;</highlight></codeline>
<codeline lineno="33" refid="structHashMap__iter_1a72fd08e2c359a826d7c367528c97da68" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structHashMap" kindref="compound">HashMap</ref><sp/>*<ref refid="structHashMap__iter_1a72fd08e2c359a826d7c367528c97da68" kindref="member">hash_map</ref>;</highlight></codeline>
<codeline lineno="34" refid="structHashMap__iter_1ac3021d5a7412b03e27627aef37550c5a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structHashMap__iter_1ac3021d5a7412b03e27627aef37550c5a" kindref="member">position</ref>;</highlight></codeline>
<codeline lineno="35"><highlight class="normal">};</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="hashmap_8c_1a9fa4b8c9552dae40afdc18558bfd4893" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ODD<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="hashmap_8c_1a0ecdd7deb868e0319b01e42a1d9db86a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EVEN<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Hash<sp/>Paramters.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="comment">//<sp/>See<sp/>https://en.wikipedia.org/wiki/Universal_hashing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="comment">//<sp/>For<sp/>explanations<sp/>of<sp/>parameters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42" refid="hashmap_8c_1a649b8f01fd6c0f47ff3cbddaeba63bfb" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>W<sp/><sp/><sp/>64</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="hashmap_8c_1a513c061a66f664105b12ff672419fc39" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HASH_TABLE_DEFAULT_LEN<sp/>4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="hashmap_8c_1a4e74c4d2d47cb63f124c970895846958" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAX_A<sp/><sp/>18446744073709551615L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45" refid="hashmap_8c_1ac5b763fe6cba352a54dc5d482b587329" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HWM_FRACTION<sp/>0.5</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="structHashMapClass" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structHashMapClass" kindref="compound">HashMapClass</ref><sp/>{</highlight></codeline>
<codeline lineno="48" refid="structHashMapClass_1a40efeba47bf8edd1af861faef03a58c4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structclass__header" kindref="compound">class_header</ref><sp/><ref refid="structHashMapClass_1a40efeba47bf8edd1af861faef03a58c4" kindref="member">class</ref>;</highlight></codeline>
<codeline lineno="49"><highlight class="normal">};</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51" refid="structHashMapClass__iter" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structHashMapClass__iter" kindref="compound">HashMapClass_iter</ref><sp/>{</highlight></codeline>
<codeline lineno="52" refid="structHashMapClass__iter_1a734f54017a71292a761cabc6fa8df712" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structclass__header" kindref="compound">class_header</ref><sp/><ref refid="structHashMapClass__iter_1a734f54017a71292a761cabc6fa8df712" kindref="member">class</ref>;</highlight></codeline>
<codeline lineno="53"><highlight class="normal">};</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55" refid="hashmap_8c_1a4f5276c8ff5ef060a2a4bf1f07192371" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="hashmap_8c_1a4f5276c8ff5ef060a2a4bf1f07192371" kindref="member">rng_seeded</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/><sp/><sp/><sp/><ref refid="hashmap_8c_1a91f44dc50fe5d24c4970a8772347bef7" kindref="member">__construct__HashMap</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/>va_list<sp/>args);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hashmap_8c_1ade2afccd37e881325eb1ce005a1d8d1e" kindref="member">print_HashMap</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>_self);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hashmap_8c_1a700517ea0c1ffc800b7c93b475a5e78a" kindref="member">get_size_HashMap</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>_self);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hashmap_8c_1a79dcb455435133253d86b70e31e3cba3" kindref="member">get_len_HashMap</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>_self);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/><sp/><sp/><sp/><ref refid="hashmap_8c_1a12bafd8be5b1e7cee7f0d61a2a7a4c2e" kindref="member">str_HashMap</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*_self);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hashmap_8c_1a2987322764f770f61fe71f0a1320fc7b" kindref="member">insert_HashMap</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>_self,</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>key,<sp/></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>_other);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/><sp/><sp/><sp/><sp/><ref refid="hashmap_8c_1aa88aa2ed0651f4feb2e275ba14114d14" kindref="member">get_HashMap</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>_self,</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>key);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/><sp/><sp/><sp/><ref refid="hashmap_8c_1a92b093655c1077032c065f51aed37652" kindref="member">copy_HashMap</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>_self);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/><sp/><sp/><sp/><ref refid="hashmap_8c_1a5601cd221918b26557f36f577c909407" kindref="member">next_HashMap</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>_self);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="hashmap_8c_1aa3b3074d83ff5a38f6164c7e4b459fa5" kindref="member">internal_resize_HashMap</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structHashMap" kindref="compound">HashMap</ref><sp/>*<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/>uint64_t<sp/>new_m);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="hashmap_8c_1ab39c45942b557d7634a849c1292b9522" kindref="member">internal_print_table</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structHashMap" kindref="compound">HashMap</ref>*<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73" refid="hashmap_8c_1a5c97b94958e87967d62dc8832202aabc" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structHashItem" kindref="compound">HashItem</ref><sp/>*<sp/><ref refid="hashmap_8c_1a5c97b94958e87967d62dc8832202aabc" kindref="member">alloc_hash_items</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n){</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structHashItem" kindref="compound">HashItem</ref><sp/>*<sp/>items<sp/>=<sp/><sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structHashItem" kindref="compound">HashItem</ref><sp/>*)<sp/>malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structHashItem" kindref="compound">HashItem</ref>)<sp/>*<sp/>n);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/>memset<sp/>(items,<sp/>0,<sp/>n*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structHashItem" kindref="compound">HashItem</ref>));</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>items;</highlight></codeline>
<codeline lineno="77"><highlight class="normal">}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80" refid="hashmap_8c_1a2f99243b32985f56493f04b192071dc7" refkind="member"><highlight class="normal">uint64_t<sp/><ref refid="hashmap_8c_1a2f99243b32985f56493f04b192071dc7" kindref="member">random_a</ref>(){</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/>a<sp/>=<sp/>random()<sp/>%<sp/><ref refid="hashmap_8c_1a4e74c4d2d47cb63f124c970895846958" kindref="member">MAX_A</ref>;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!<sp/>(a<sp/>&amp;<sp/><sp/>0x01)<sp/>)</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a<sp/>=<sp/><sp/>random()<sp/>%<sp/><ref refid="hashmap_8c_1a4e74c4d2d47cb63f124c970895846958" kindref="member">MAX_A</ref>;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a;</highlight></codeline>
<codeline lineno="85"><highlight class="normal">}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87" refid="hashmap_8c_1a84e2e7a7b9433d44b77193d0b05a1ae7" refkind="member"><highlight class="normal">uint64_t<sp/><ref refid="hashmap_8c_1a84e2e7a7b9433d44b77193d0b05a1ae7" kindref="member">lg</ref>(uint64_t<sp/>n){</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/>ans<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(n)<sp/><sp/>{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>&gt;&gt;=1;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ans++;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ans<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="94"><highlight class="normal">}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96" refid="hashmap_8c_1af3c89e259a9e4ad29cab4c9e22cfbd5b" refkind="member"><highlight class="normal">uint64_t<sp/><ref refid="hashmap_8c_1af3c89e259a9e4ad29cab4c9e22cfbd5b" kindref="member">random_b</ref>(uint64_t<sp/>m){</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/>M<sp/>=<sp/><ref refid="hashmap_8c_1a84e2e7a7b9433d44b77193d0b05a1ae7" kindref="member">lg</ref>(m);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>random()<sp/>%<sp/>(2<sp/>&lt;&lt;<sp/>(<sp/><ref refid="hashmap_8c_1a649b8f01fd6c0f47ff3cbddaeba63bfb" kindref="member">W</ref>-<sp/>M));</highlight></codeline>
<codeline lineno="100"><highlight class="normal">}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102" refid="hashmap_8c_1a62d30d0ca399807fa03a80759da17168" refkind="member"><highlight class="normal">uint64_t<sp/><ref refid="hashmap_8c_1a62d30d0ca399807fa03a80759da17168" kindref="member">internal_hash</ref>(uint64_t<sp/>a,<sp/>uint64_t<sp/>b,<sp/>uint64_t<sp/>M,<sp/>uint64_t<sp/><ref refid="structHashItem_1a0bd79196ef574b956a40b009950a1ef4" kindref="member">key</ref>){</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/>h<sp/>=<sp/>(uint64_t)<sp/>(a*<ref refid="structHashItem_1a0bd79196ef574b956a40b009950a1ef4" kindref="member">key</ref>+b)<sp/>&gt;&gt;<sp/>(<ref refid="hashmap_8c_1a649b8f01fd6c0f47ff3cbddaeba63bfb" kindref="member">W</ref>-M);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>h;</highlight></codeline>
<codeline lineno="105"><highlight class="normal">}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107" refid="hashmap_8c_1a8aa67d2dac0692c1128b50780ad9dfc1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><ref refid="hashmap_8c_1a8aa67d2dac0692c1128b50780ad9dfc1" kindref="member">internal_insert_HashMap</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structHashMap" kindref="compound">HashMap</ref><sp/>*<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>_key,</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>_value)<sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structclass__header" kindref="compound">class_header</ref><sp/>*<sp/>header<sp/>=<sp/><ref refid="object_8c_1a8837e68ffda149b4f7015cafab0c2a3c" kindref="member">get_class_header</ref>(_key);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/>internal_key<sp/>=<sp/>header-&gt;<ref refid="structclass__header_1aa0035a2c833b1e46f0ae401d6b44ee65" kindref="member">hash</ref>(_key);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/>h<sp/>=<sp/><ref refid="hashmap_8c_1a62d30d0ca399807fa03a80759da17168" kindref="member">internal_hash</ref>(self-&gt;a,<sp/>self-&gt;b,<sp/>self-&gt;M,<sp/>internal_key);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structHashItem" kindref="compound">HashItem</ref><sp/>*<sp/>dest<sp/>=<sp/><sp/>&amp;</highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;items[h];</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>depth<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(h<sp/>&lt;<sp/>self-&gt;m);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(dest-&gt;<ref refid="structHashItem_1a7fe892239fc6fb4cef7e2f2cf1581b1f" kindref="member">present</ref>){</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dest-&gt;<ref refid="structHashItem_1ab70c6466a57bc6f281a7943350a74329" kindref="member">internal_key</ref><sp/>==<sp/><ref refid="structHashItem_1ab70c6466a57bc6f281a7943350a74329" kindref="member">internal_key</ref>){</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group__common_1ga4b83176929aeea62524d2a126d3c897f" kindref="member">equals</ref>(dest-&gt;<ref refid="structHashItem_1a0bd79196ef574b956a40b009950a1ef4" kindref="member">key</ref>,<sp/>_key))<sp/>{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dest-&gt;<ref refid="structHashItem_1abb041948b3408787c4d46d9afd8fb793" kindref="member">value</ref><sp/>=<sp/>_value;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dest-&gt;<ref refid="structHashItem_1a7fe892239fc6fb4cef7e2f2cf1581b1f" kindref="member">present</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dest-&gt;<ref refid="structHashItem_1a623917e154bb2a360da5cbc9d3329171" kindref="member">next</ref>)<sp/>{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dest<sp/>=<sp/>dest-&gt;<ref refid="structHashItem_1a623917e154bb2a360da5cbc9d3329171" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dest-&gt;<ref refid="structHashItem_1a623917e154bb2a360da5cbc9d3329171" kindref="member">next</ref><sp/>=<sp/>malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structHashItem" kindref="compound">HashItem</ref>));</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memset(dest-&gt;<ref refid="structHashItem_1a623917e154bb2a360da5cbc9d3329171" kindref="member">next</ref>,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structHashItem" kindref="compound">HashItem</ref>));</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dest<sp/>=<sp/>dest-&gt;<ref refid="structHashItem_1a623917e154bb2a360da5cbc9d3329171" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>depth++;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(self-&gt;debug)<sp/>{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Inserted<sp/>key<sp/>%zu<sp/>into<sp/>row<sp/>%d,<sp/>depth<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="structHashItem_1ab70c6466a57bc6f281a7943350a74329" kindref="member">internal_key</ref>,<sp/>h,<sp/>depth);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Increase<sp/>the<sp/>length</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;len++;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>dest-&gt;<ref refid="structHashItem_1abb041948b3408787c4d46d9afd8fb793" kindref="member">value</ref><sp/>=<sp/>_value;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>dest-&gt;<ref refid="structHashItem_1a0bd79196ef574b956a40b009950a1ef4" kindref="member">key</ref><sp/>=<sp/>_key;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>dest-&gt;<ref refid="structHashItem_1a7fe892239fc6fb4cef7e2f2cf1581b1f" kindref="member">present</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>dest-&gt;<ref refid="structHashItem_1ab70c6466a57bc6f281a7943350a74329" kindref="member">internal_key</ref><sp/>=<sp/><ref refid="structHashItem_1ab70c6466a57bc6f281a7943350a74329" kindref="member">internal_key</ref>;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(self-&gt;len<sp/>&gt;<sp/>self-&gt;hwm){</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hashmap_8c_1aa3b3074d83ff5a38f6164c7e4b459fa5" kindref="member">internal_resize_HashMap</ref>(</highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/>self-&gt;m<sp/>*<sp/>2);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal">}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152" refid="hashmap_8c_1ab39c45942b557d7634a849c1292b9522" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="hashmap_8c_1ab39c45942b557d7634a849c1292b9522" kindref="member">internal_print_table</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structHashMap" kindref="compound">HashMap</ref>*<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structHashItem" kindref="compound">HashItem</ref><sp/>*item;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Row<sp/>|<sp/>First<sp/>Key<sp/><sp/><sp/><sp/>pn<sp/>|\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;----+-----------------|\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;m;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>item<sp/>=<sp/>&amp;</highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;items[i];</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;%03d<sp/>|<sp/>&quot;</highlight><highlight class="normal">,<sp/>i);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(item-&gt;<ref refid="structHashItem_1a7fe892239fc6fb4cef7e2f2cf1581b1f" kindref="member">present</ref>)<sp/>{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;<sp/>%11llu<sp/>%c%c<sp/>|<sp/>-&gt;<sp/>&quot;</highlight><highlight class="normal">,<sp/>item-&gt;<ref refid="structHashItem_1ab70c6466a57bc6f281a7943350a74329" kindref="member">internal_key</ref>,<sp/></highlight><highlight class="stringliteral">&quot;-x&quot;</highlight><highlight class="normal">[item-&gt;<ref refid="structHashItem_1a7fe892239fc6fb4cef7e2f2cf1581b1f" kindref="member">present</ref>],<sp/></highlight><highlight class="stringliteral">&quot;-x&quot;</highlight><highlight class="normal">[item-&gt;<ref refid="structHashItem_1a623917e154bb2a360da5cbc9d3329171" kindref="member">next</ref><sp/>!=<sp/>NULL]);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>count++;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(item-&gt;<ref refid="structHashItem_1a623917e154bb2a360da5cbc9d3329171" kindref="member">next</ref><sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>item<sp/>=<sp/>item-&gt;<ref refid="structHashItem_1a623917e154bb2a360da5cbc9d3329171" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>Empty<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="173"><highlight class="normal">}</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175" refid="hashmap_8c_1a3941f840164dd3ce845aec0bd5fc5652" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="hashmap_8c_1a3941f840164dd3ce845aec0bd5fc5652" kindref="member">internal_count_HashMap</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structHashMap" kindref="compound">HashMap</ref><sp/>*</highlight><highlight class="keyword">self</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structHashItem" kindref="compound">HashItem</ref><sp/>*item;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;m;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>item<sp/>=<sp/>&amp;</highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;items[i];</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(item-&gt;<ref refid="structHashItem_1a7fe892239fc6fb4cef7e2f2cf1581b1f" kindref="member">present</ref>)<sp/>{</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>count++;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(item-&gt;<ref refid="structHashItem_1a623917e154bb2a360da5cbc9d3329171" kindref="member">next</ref>)<sp/>{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>item<sp/>=<sp/>item-&gt;<ref refid="structHashItem_1a623917e154bb2a360da5cbc9d3329171" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>count;</highlight></codeline>
<codeline lineno="192"><highlight class="normal">}</highlight></codeline>
<codeline lineno="193" refid="hashmap_8c_1aa3b3074d83ff5a38f6164c7e4b459fa5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="hashmap_8c_1aa3b3074d83ff5a38f6164c7e4b459fa5" kindref="member">internal_resize_HashMap</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structHashMap" kindref="compound">HashMap</ref><sp/>*<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/>uint64_t<sp/>new_m){</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//hold<sp/>onto<sp/>items,<sp/>so<sp/>we<sp/>can<sp/>insert<sp/>them<sp/>into<sp/>the<sp/>new<sp/>structure</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO<sp/>this<sp/>is<sp/>wrong</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(!(new_m<sp/>&amp;<sp/>0x01));<sp/></highlight><highlight class="comment">//<sp/>make<sp/>sure<sp/>it&apos;s<sp/>a<sp/>power<sp/>of<sp/>two</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(new_m<sp/>&lt;<sp/><ref refid="hashmap_8c_1a513c061a66f664105b12ff672419fc39" kindref="member">HASH_TABLE_DEFAULT_LEN</ref>)<sp/>{</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(self-&gt;debug)<sp/>{</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Limiting<sp/>lower<sp/>bound<sp/>to<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="hashmap_8c_1a513c061a66f664105b12ff672419fc39" kindref="member">HASH_TABLE_DEFAULT_LEN</ref>);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_m<sp/>=<sp/><ref refid="hashmap_8c_1a513c061a66f664105b12ff672419fc39" kindref="member">HASH_TABLE_DEFAULT_LEN</ref>;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(self-&gt;debug)<sp/>{</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Resizing<sp/>from<sp/>%zu<sp/>to<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>self-&gt;m,<sp/>new_m);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hashmap_8c_1ab39c45942b557d7634a849c1292b9522" kindref="member">internal_print_table</ref>(</highlight><highlight class="keyword">self</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structHashItem" kindref="compound">HashItem</ref><sp/>*old_items<sp/>=<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;items;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/>old_m<sp/>=<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;m;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>necessary<sp/>so<sp/>insertion<sp/>works</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>m<sp/>didn&apos;t<sp/>change,<sp/>the<sp/>hash<sp/>algorithm<sp/>would<sp/>put<sp/>items<sp/>in<sp/>old<sp/>positions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;m<sp/>=<sp/>new_m;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;M<sp/>=<sp/><ref refid="hashmap_8c_1a84e2e7a7b9433d44b77193d0b05a1ae7" kindref="member">lg</ref>(self-&gt;m);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;hwm<sp/>=<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;m<sp/>*<sp/><ref refid="hashmap_8c_1ac5b763fe6cba352a54dc5d482b587329" kindref="member">HWM_FRACTION</ref>;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;lwm<sp/>=<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;m<sp/>*<sp/><ref refid="hashmap_8c_1ac5b763fe6cba352a54dc5d482b587329" kindref="member">HWM_FRACTION</ref><sp/>*<sp/>0.5;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;a<sp/>=<sp/><ref refid="hashmap_8c_1a2f99243b32985f56493f04b192071dc7" kindref="member">random_a</ref>();</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;b<sp/>=<sp/><ref refid="hashmap_8c_1af3c89e259a9e4ad29cab4c9e22cfbd5b" kindref="member">random_b</ref>(self-&gt;m);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>it&apos;s<sp/>also<sp/>necessary<sp/>to<sp/>reset<sp/>the<sp/>count<sp/>since<sp/>we&apos;re<sp/>essentially<sp/>making<sp/>a<sp/>new</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>HashMap</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;len<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>allocate<sp/>new<sp/>space</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;items<sp/>=<sp/><ref refid="hashmap_8c_1a5c97b94958e87967d62dc8832202aabc" kindref="member">alloc_hash_items</ref>(self-&gt;m);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structHashItem" kindref="compound">HashItem</ref><sp/>*item;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>inserted<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>old_m;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>item<sp/>=<sp/>&amp;old_items[i];</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>depth<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(item-&gt;<ref refid="structHashItem_1a7fe892239fc6fb4cef7e2f2cf1581b1f" kindref="member">present</ref>)<sp/>{</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hashmap_8c_1a8aa67d2dac0692c1128b50780ad9dfc1" kindref="member">internal_insert_HashMap</ref>(</highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/>item-&gt;<ref refid="structHashItem_1a0bd79196ef574b956a40b009950a1ef4" kindref="member">key</ref>,<sp/>item-&gt;<ref refid="structHashItem_1abb041948b3408787c4d46d9afd8fb793" kindref="member">value</ref>);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inserted++;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(item-&gt;<ref refid="structHashItem_1a623917e154bb2a360da5cbc9d3329171" kindref="member">next</ref>)<sp/>{</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>item<sp/>=<sp/>item-&gt;<ref refid="structHashItem_1a623917e154bb2a360da5cbc9d3329171" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>depth<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO<sp/>actually<sp/>free<sp/>properly.<sp/>Linked<sp/>list<sp/>is<sp/>not<sp/>traversed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/>free(old_items);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal">}</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256" refid="hashmap_8c_1a79dcb455435133253d86b70e31e3cba3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="hashmap_8c_1a79dcb455435133253d86b70e31e3cba3" kindref="member">get_len_HashMap</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>_self){</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structHashMap" kindref="compound">HashMap</ref><sp/>*<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>=<sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structHashMap" kindref="compound">HashMap</ref><sp/>*)<sp/>_self;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(self-&gt;debug)<sp/>{</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>counted_size<sp/>=<sp/><ref refid="hashmap_8c_1a3941f840164dd3ce845aec0bd5fc5652" kindref="member">internal_count_HashMap</ref>(</highlight><highlight class="keyword">self</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(counted_size<sp/>!=<sp/>self-&gt;len)<sp/><sp/>{</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Size<sp/>error:<sp/>len<sp/>=<sp/>%zu,<sp/>manual<sp/>count<sp/>=<sp/>%zu\n&quot;</highlight><highlight class="normal">,<sp/>self-&gt;len,<sp/>counted_size);</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hashmap_8c_1ab39c45942b557d7634a849c1292b9522" kindref="member">internal_print_table</ref>(</highlight><highlight class="keyword">self</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(self-&gt;len<sp/>==<sp/><sp/>counted_size);</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;len;</highlight></codeline>
<codeline lineno="267"><highlight class="normal">}</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272" refid="hashmap_8c_1a700517ea0c1ffc800b7c93b475a5e78a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="hashmap_8c_1a700517ea0c1ffc800b7c93b475a5e78a" kindref="member">get_size_HashMap</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>_self){</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structHashMap" kindref="compound">HashMap</ref><sp/>*<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>=<sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structHashMap" kindref="compound">HashMap</ref><sp/>*)<sp/>_self;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;<ref refid="structHashMap_1aae8bf9f119b0659b9ad29261e2e3d520" kindref="member">size</ref>;</highlight></codeline>
<codeline lineno="275"><highlight class="normal">}</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="277" refid="hashmap_8c_1a91f44dc50fe5d24c4970a8772347bef7" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/><ref refid="hashmap_8c_1a91f44dc50fe5d24c4970a8772347bef7" kindref="member">__construct__HashMap</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>_self,<sp/>va_list<sp/>args)<sp/>{</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structHashMap" kindref="compound">HashMap</ref><sp/>*<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>=<sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structHashMap" kindref="compound">HashMap</ref><sp/>*)<sp/>_self;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//const<sp/>char<sp/>*<sp/>data<sp/>=<sp/>va_arg(args,<sp/>const<sp/>char<sp/>*);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>now<sp/>only<sp/>support<sp/>empty<sp/>constructor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;<ref refid="structHashMap_1aae8bf9f119b0659b9ad29261e2e3d520" kindref="member">size</ref><sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structHashMap" kindref="compound">HashMap</ref><sp/>);</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;len<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;m<sp/>=<sp/><ref refid="hashmap_8c_1a513c061a66f664105b12ff672419fc39" kindref="member">HASH_TABLE_DEFAULT_LEN</ref>;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;M<sp/>=<sp/><ref refid="hashmap_8c_1a84e2e7a7b9433d44b77193d0b05a1ae7" kindref="member">lg</ref>(<ref refid="hashmap_8c_1a513c061a66f664105b12ff672419fc39" kindref="member">HASH_TABLE_DEFAULT_LEN</ref>);</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//set<sp/>the<sp/>highwater<sp/>mark</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;hwm<sp/>=<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;m<sp/><sp/>*<sp/><ref refid="hashmap_8c_1ac5b763fe6cba352a54dc5d482b587329" kindref="member">HWM_FRACTION</ref>;</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;lwm<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;class<sp/>=<sp/><ref refid="hashmap_8c_1a460bbbf2046f6aaf34ce30bb2be13939" kindref="member">HashMap</ref>;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;debug<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="hashmap_8c_1a4f5276c8ff5ef060a2a4bf1f07192371" kindref="member">rng_seeded</ref>)<sp/>{</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srandom(time(NULL));</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>static_params<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;a<sp/>=<sp/><ref refid="hashmap_8c_1a2f99243b32985f56493f04b192071dc7" kindref="member">random_a</ref>();</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;b<sp/>=<sp/><ref refid="hashmap_8c_1af3c89e259a9e4ad29cab4c9e22cfbd5b" kindref="member">random_b</ref>(<ref refid="hashmap_8c_1a513c061a66f664105b12ff672419fc39" kindref="member">HASH_TABLE_DEFAULT_LEN</ref>);</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>the<sp/>storage<sp/>for<sp/>the<sp/>items</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;items<sp/>=<sp/><ref refid="hashmap_8c_1a5c97b94958e87967d62dc8832202aabc" kindref="member">alloc_hash_items</ref>(self-&gt;m);</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;len<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="304"><highlight class="normal">}</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="307" refid="hashmap_8c_1a4425bb488e5bfb1e9244675a31df3470" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="hashmap_8c_1a4425bb488e5bfb1e9244675a31df3470" kindref="member">__destruct__HashMap</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>_self,<sp/>va_list<sp/>args)<sp/>{</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structHashMap" kindref="compound">HashMap</ref><sp/>*<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>=<sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structHashMap" kindref="compound">HashMap</ref><sp/>*)<sp/>_self;</highlight></codeline>
<codeline lineno="309"><highlight class="normal">}</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="311" refid="hashmap_8c_1ade2afccd37e881325eb1ce005a1d8d1e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="hashmap_8c_1ade2afccd37e881325eb1ce005a1d8d1e" kindref="member">print_HashMap</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>_self)<sp/>{</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structHashMap" kindref="compound">HashMap</ref><sp/>*<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>=<sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structHashMap" kindref="compound">HashMap</ref><sp/>*)<sp/>_self;</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;{...}&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="314"><highlight class="normal">}</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight></codeline>
<codeline lineno="317" refid="hashmap_8c_1a12bafd8be5b1e7cee7f0d61a2a7a4c2e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/><ref refid="hashmap_8c_1a12bafd8be5b1e7cee7f0d61a2a7a4c2e" kindref="member">str_HashMap</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>_self){</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structHashMap" kindref="compound">HashMap</ref><sp/>*<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>=<sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structHashMap" kindref="compound">HashMap</ref><sp/>*)<sp/>_self;</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;str<sp/>not<sp/>implemented&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/>exit(EXIT_FAILURE);</highlight></codeline>
<codeline lineno="321"><highlight class="normal">}</highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="324" refid="hashmap_8c_1a2987322764f770f61fe71f0a1320fc7b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="hashmap_8c_1a2987322764f770f61fe71f0a1320fc7b" kindref="member">insert_HashMap</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>_self,</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>_key,</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>_value)<sp/>{</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structHashMap" kindref="compound">HashMap</ref><sp/>*<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>=<sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structHashMap" kindref="compound">HashMap</ref><sp/>*)<sp/>_self;</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group__collection_1gaaad95663edf19fd4b734bd9977976169" kindref="member">get_obj</ref>(_key,<sp/></highlight><highlight class="stringliteral">&quot;Attempted<sp/>to<sp/>insert<sp/>invalid<sp/>key\n&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group__collection_1gaaad95663edf19fd4b734bd9977976169" kindref="member">get_obj</ref>(_value,<sp/>NULL)<sp/>){</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structclass__header" kindref="compound">class_header</ref><sp/>*<sp/>header<sp/>=<sp/><ref refid="object_8c_1a8837e68ffda149b4f7015cafab0c2a3c" kindref="member">get_class_header</ref>(_key);</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!header-&gt;<ref refid="structclass__header_1aa0035a2c833b1e46f0ae401d6b44ee65" kindref="member">hash</ref>)<sp/>{</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;Attempt<sp/>to<sp/>use<sp/>unhashable<sp/>type<sp/>as<sp/>key\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(1);</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(self-&gt;debug)<sp/>{</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;self[&apos;%s&apos;]<sp/>=<sp/>&apos;%s&apos;\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="object_8c_1a317798c33e05ea3ca01d0a70148f61ad" kindref="member">str</ref>(_key),<sp/><ref refid="object_8c_1a317798c33e05ea3ca01d0a70148f61ad" kindref="member">str</ref>(_value));</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hashmap_8c_1a8aa67d2dac0692c1128b50780ad9dfc1" kindref="member">internal_insert_HashMap</ref>(</highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/>_key,<sp/>_value);</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="341"><highlight class="normal">}</highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight></codeline>
<codeline lineno="343" refid="hashmap_8c_1aa88aa2ed0651f4feb2e275ba14114d14" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/><ref refid="hashmap_8c_1aa88aa2ed0651f4feb2e275ba14114d14" kindref="member">get_HashMap</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>_self,</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>_key<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structHashMap" kindref="compound">HashMap</ref><sp/>*<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>=<sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structHashMap" kindref="compound">HashMap</ref><sp/>*)<sp/>_self;</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group__collection_1gaaad95663edf19fd4b734bd9977976169" kindref="member">get_obj</ref>(_key,<sp/></highlight><highlight class="stringliteral">&quot;Attempted<sp/>to<sp/>get<sp/>with<sp/><sp/>invalid<sp/>key\n&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structclass__header" kindref="compound">class_header</ref><sp/>*<sp/>header<sp/>=<sp/><ref refid="object_8c_1a8837e68ffda149b4f7015cafab0c2a3c" kindref="member">get_class_header</ref>(_key);</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!header-&gt;<ref refid="structclass__header_1aa0035a2c833b1e46f0ae401d6b44ee65" kindref="member">hash</ref>)<sp/>{</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;Attempt<sp/>to<sp/>use<sp/>unhashable<sp/>type<sp/>as<sp/>key\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(1);</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint64_t<sp/>internal_key<sp/>=<sp/>header-&gt;<ref refid="structclass__header_1aa0035a2c833b1e46f0ae401d6b44ee65" kindref="member">hash</ref>(_key);</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint64_t<sp/>h<sp/>=<sp/><ref refid="hashmap_8c_1a62d30d0ca399807fa03a80759da17168" kindref="member">internal_hash</ref>(self-&gt;a,<sp/>self-&gt;b,<sp/>self-&gt;M,<sp/>internal_key);</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structHashItem" kindref="compound">HashItem</ref><sp/>*<sp/>item<sp/>=<sp/><sp/>&amp;</highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;items[h];</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>depth;</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(item<sp/>){</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(item-&gt;<ref refid="structHashItem_1ab70c6466a57bc6f281a7943350a74329" kindref="member">internal_key</ref><sp/>==<sp/><ref refid="structHashItem_1ab70c6466a57bc6f281a7943350a74329" kindref="member">internal_key</ref></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/><ref refid="group__common_1ga4b83176929aeea62524d2a126d3c897f" kindref="member">equals</ref>(item-&gt;<ref refid="structHashItem_1a0bd79196ef574b956a40b009950a1ef4" kindref="member">key</ref>,<sp/>_key))<sp/>{</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>item-&gt;<ref refid="structHashItem_1abb041948b3408787c4d46d9afd8fb793" kindref="member">value</ref>;</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(item-&gt;<ref refid="structHashItem_1a623917e154bb2a360da5cbc9d3329171" kindref="member">next</ref>){</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>item<sp/>=<sp/>item-&gt;<ref refid="structHashItem_1a623917e154bb2a360da5cbc9d3329171" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>depth++;</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;KeyError:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/><ref refid="object_8c_1a317798c33e05ea3ca01d0a70148f61ad" kindref="member">str</ref>(_key));</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(EXIT_FAILURE);</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO<sp/>make<sp/>a<sp/>&apos;contains&apos;<sp/>or<sp/>&apos;in&apos;<sp/>function<sp/>to<sp/>test<sp/>without<sp/>causing<sp/>an<sp/>error</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;KeyError:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/><ref refid="object_8c_1a317798c33e05ea3ca01d0a70148f61ad" kindref="member">str</ref>(_key));</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/>exit(EXIT_FAILURE);</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="375"><highlight class="normal">}</highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight></codeline>
<codeline lineno="378" refid="hashmap_8c_1a10476d872d0cfcb234391cabf5e888a1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><ref refid="hashmap_8c_1a10476d872d0cfcb234391cabf5e888a1" kindref="member">del_item_HashMap</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>_self,</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>_key<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structHashMap" kindref="compound">HashMap</ref><sp/>*</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>=<sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structHashMap" kindref="compound">HashMap</ref><sp/>*)<sp/>_self;</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group__collection_1gaaad95663edf19fd4b734bd9977976169" kindref="member">get_obj</ref>(_key,<sp/></highlight><highlight class="stringliteral">&quot;Attempted<sp/>to<sp/>delete<sp/>an<sp/>invalid<sp/>key\n&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structclass__header" kindref="compound">class_header</ref><sp/>*key<sp/>=<sp/><ref refid="group__collection_1gaaad95663edf19fd4b734bd9977976169" kindref="member">get_obj</ref>(_key,<sp/>NULL);</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!key-&gt;<ref refid="structclass__header_1aa0035a2c833b1e46f0ae401d6b44ee65" kindref="member">hash</ref>)<sp/>{</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;Attempt<sp/>to<sp/>use<sp/>unhashable<sp/>type<sp/>as<sp/>key\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(1);</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len_at_start<sp/>=<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;len;</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint64_t<sp/>item_key<sp/>=<sp/>key-&gt;<ref refid="structclass__header_1aa0035a2c833b1e46f0ae401d6b44ee65" kindref="member">hash</ref>(_key);</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint64_t<sp/>h<sp/>=<sp/><ref refid="hashmap_8c_1a62d30d0ca399807fa03a80759da17168" kindref="member">internal_hash</ref>(self-&gt;a,<sp/>self-&gt;b,<sp/>self-&gt;M,<sp/>item_key);</highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(self-&gt;debug)<sp/>{</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Attempting<sp/>to<sp/>delete<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>item_key);</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hashmap_8c_1ab39c45942b557d7634a849c1292b9522" kindref="member">internal_print_table</ref>(</highlight><highlight class="keyword">self</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structHashItem" kindref="compound">HashItem</ref><sp/>*item<sp/>=<sp/>&amp;</highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;items[h];</highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structHashItem" kindref="compound">HashItem</ref><sp/>*parent<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>depth<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(item<sp/>&amp;&amp;<sp/>item-&gt;<ref refid="structHashItem_1ab70c6466a57bc6f281a7943350a74329" kindref="member">internal_key</ref><sp/>!=<sp/>item_key)<sp/>{</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(item-&gt;<ref refid="structHashItem_1a623917e154bb2a360da5cbc9d3329171" kindref="member">next</ref>)<sp/>{</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parent<sp/>=<sp/>item;</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>item<sp/>=<sp/>item-&gt;<ref refid="structHashItem_1a623917e154bb2a360da5cbc9d3329171" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>depth++;</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO<sp/>maybe<sp/>no<sp/>need<sp/>to<sp/>assert<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(item);</highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parent)<sp/>{</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(self-&gt;debug)<sp/>{</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Parent:<sp/>%llu<sp/>%c<sp/>%c\n&quot;</highlight><highlight class="normal">,<sp/>parent-&gt;<ref refid="structHashItem_1ab70c6466a57bc6f281a7943350a74329" kindref="member">internal_key</ref>,<sp/></highlight><highlight class="stringliteral">&quot;-x&quot;</highlight><highlight class="normal">[parent-&gt;<ref refid="structHashItem_1a7fe892239fc6fb4cef7e2f2cf1581b1f" kindref="member">present</ref>],<sp/></highlight><highlight class="stringliteral">&quot;-x&quot;</highlight><highlight class="normal">[parent-&gt;<ref refid="structHashItem_1a623917e154bb2a360da5cbc9d3329171" kindref="member">next</ref><sp/>!=<sp/>NULL]);</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Item:<sp/>%llu<sp/>%c<sp/>%c\n&quot;</highlight><highlight class="normal">,<sp/>item-&gt;<ref refid="structHashItem_1ab70c6466a57bc6f281a7943350a74329" kindref="member">internal_key</ref>,<sp/></highlight><highlight class="stringliteral">&quot;-x&quot;</highlight><highlight class="normal">[item-&gt;<ref refid="structHashItem_1a7fe892239fc6fb4cef7e2f2cf1581b1f" kindref="member">present</ref>],<sp/></highlight><highlight class="stringliteral">&quot;-x&quot;</highlight><highlight class="normal">[item-&gt;<ref refid="structHashItem_1a623917e154bb2a360da5cbc9d3329171" kindref="member">next</ref><sp/>!=<sp/>NULL]);</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parent-&gt;<ref refid="structHashItem_1a623917e154bb2a360da5cbc9d3329171" kindref="member">next</ref><sp/>=<sp/>item-&gt;<ref refid="structHashItem_1a623917e154bb2a360da5cbc9d3329171" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(depth&gt;0)<sp/>{</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(item);</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(item-&gt;<ref refid="structHashItem_1a623917e154bb2a360da5cbc9d3329171" kindref="member">next</ref>)<sp/>{</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structHashItem" kindref="compound">HashItem</ref><sp/>*item_to_free<sp/>=<sp/>item-&gt;<ref refid="structHashItem_1a623917e154bb2a360da5cbc9d3329171" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*item<sp/>=<sp/>*(item-&gt;<ref refid="structHashItem_1a623917e154bb2a360da5cbc9d3329171" kindref="member">next</ref>);</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(item_to_free);</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>item-&gt;<ref refid="structHashItem_1a7fe892239fc6fb4cef7e2f2cf1581b1f" kindref="member">present</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>item-&gt;<ref refid="structHashItem_1a623917e154bb2a360da5cbc9d3329171" kindref="member">next</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>item-&gt;<ref refid="structHashItem_1abb041948b3408787c4d46d9afd8fb793" kindref="member">value</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(self-&gt;debug){</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Deleted<sp/>%llu<sp/>from<sp/>row<sp/>%d<sp/>depth<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>item-&gt;<ref refid="structHashItem_1ab70c6466a57bc6f281a7943350a74329" kindref="member">internal_key</ref>,<sp/>h,<sp/>depth);</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hashmap_8c_1ab39c45942b557d7634a849c1292b9522" kindref="member">internal_print_table</ref>(</highlight><highlight class="keyword">self</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;len--;</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(self-&gt;len<sp/>&lt;<sp/>self-&gt;lwm)<sp/>{</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hashmap_8c_1aa3b3074d83ff5a38f6164c7e4b459fa5" kindref="member">internal_resize_HashMap</ref>(</highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/>self-&gt;m<sp/>/<sp/>2);</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(self-&gt;len<sp/>==<sp/>len_at_start<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="448"><highlight class="normal">}</highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Iterable<sp/>HashMap<sp/>methods</highlight></codeline>
<codeline lineno="451"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight></codeline>
<codeline lineno="453" refid="hashmap_8c_1aa1645276039a5f13164347699538139b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="hashmap_8c_1aa1645276039a5f13164347699538139b" kindref="member">iter_HashMap</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>_self){</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal">(<ref refid="hashmap_8c_1a45019180cc2e660110ceabdc4b807f3e" kindref="member">HashMap_iter</ref>,<sp/>_self);</highlight></codeline>
<codeline lineno="455"><highlight class="normal">}</highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Implementation<sp/>notes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>iterator<sp/>needs<sp/>to<sp/>remember<sp/>the<sp/>place<sp/>in<sp/>the<sp/>iteration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"></highlight><highlight class="comment">//<sp/>For<sp/>performance<sp/>reasons,<sp/>it<sp/>should<sp/>cache<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>A<sp/>pointer<sp/>the<sp/>current<sp/><sp/>item<sp/>in<sp/>the<sp/>current<sp/>linked<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>An<sp/>index<sp/>into<sp/>the<sp/>hash<sp/>table</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Initially,<sp/>the<sp/><sp/>pointer<sp/>will<sp/>be<sp/>initialized<sp/>to<sp/>the<sp/>first<sp/>item<sp/>in<sp/>the<sp/>table<sp/>(could<sp/>be<sp/>empty)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>and<sp/>the<sp/>index<sp/>will<sp/>be<sp/>zero<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="464" refid="hashmap_8c_1a5601cd221918b26557f36f577c909407" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/><ref refid="hashmap_8c_1a5601cd221918b26557f36f577c909407" kindref="member">next_HashMap</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>_self){</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structHashMap__iter" kindref="compound">HashMap_iter</ref><sp/>*<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>=<sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structHashMap__iter" kindref="compound">HashMap_iter</ref><sp/>*)<sp/>_self;</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structHashMap" kindref="compound">HashMap</ref><sp/>*<sp/>hash_map<sp/><sp/>=<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;hash_map;</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(hash_map);</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(self-&gt;position<sp/>&lt;<sp/>self-&gt;hash_map-&gt;len)<sp/>{</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structHashItem" kindref="compound">HashItem</ref><sp/>*<sp/>item_to_yield;</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(self-&gt;current_item-&gt;present){</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>item_to_yield<sp/>=<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;current_item;<sp/></highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(self-&gt;current_item-&gt;next){</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;current_item<sp/>=<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;current_item-&gt;<ref refid="structHashItem_1a623917e154bb2a360da5cbc9d3329171" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>we<sp/>are<sp/>at<sp/>the<sp/>end<sp/>of<sp/>the<sp/>linked<sp/>list,<sp/>jump<sp/>to<sp/>the<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>next<sp/>index<sp/>into<sp/>the<sp/>hash<sp/>table</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;index++;</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;current_item<sp/>=<sp/>&amp;</highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;hash_map-&gt;items[</highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;index]<sp/>;</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="481"><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;position++;</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>item_to_yield-&gt;<ref refid="structHashItem_1abb041948b3408787c4d46d9afd8fb793" kindref="member">value</ref>;</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>there<sp/>is<sp/>not<sp/>value<sp/>in<sp/>this<sp/>item,<sp/>jump<sp/>to<sp/>the<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>next<sp/>index<sp/>into<sp/>the<sp/>hash<sp/>table</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;index++;</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;current_item<sp/>=<sp/>&amp;</highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;hash_map-&gt;items[</highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;index]<sp/>;</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>haven&apos;t<sp/>found<sp/>anything<sp/>so<sp/>&quot;recurse&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/></highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="498"><highlight class="normal">}</highlight></codeline>
<codeline lineno="499"><highlight class="normal"></highlight></codeline>
<codeline lineno="500" refid="hashmap_8c_1ae8c6201244c05c149ee58f00693fbe18" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/><ref refid="hashmap_8c_1ae8c6201244c05c149ee58f00693fbe18" kindref="member">__construct__HashMap_iter</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>_self,<sp/>va_list<sp/>args)<sp/>{</highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structHashMap__iter" kindref="compound">HashMap_iter</ref><sp/>*<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>=<sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structHashMap__iter" kindref="compound">HashMap_iter</ref><sp/>*)<sp/>_self;</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;<ref refid="structHashMap__iter_1a632cf034be2d2d879dc8903f0ec8e003" kindref="member">class</ref><sp/>=<sp/><ref refid="hashmap_8c_1a45019180cc2e660110ceabdc4b807f3e" kindref="member">HashMap_iter</ref>;</highlight></codeline>
<codeline lineno="504"><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;hash_map<sp/>=<sp/><sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structHashMap" kindref="compound">HashMap</ref><sp/>*)<sp/><sp/>va_arg(args,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(self-&gt;hash_map);</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>the<sp/>starting<sp/>conditions<sp/>for<sp/>the<sp/>iterator</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;position<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;index<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;current_item<sp/>=<sp/>&amp;</highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;hash_map-&gt;items[0];</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="512"><highlight class="normal">}</highlight></codeline>
<codeline lineno="513"><highlight class="normal"></highlight></codeline>
<codeline lineno="514" refid="hashmap_8c_1a92b093655c1077032c065f51aed37652" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="hashmap_8c_1a92b093655c1077032c065f51aed37652" kindref="member">copy_HashMap</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>_self){</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structHashMap" kindref="compound">HashMap</ref><sp/>*<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>=<sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structHashMap" kindref="compound">HashMap</ref><sp/>*)<sp/>_self;</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="517"><highlight class="normal">}</highlight></codeline>
<codeline lineno="518"><highlight class="normal"></highlight></codeline>
<codeline lineno="519"><highlight class="normal"></highlight></codeline>
<codeline lineno="520" refid="hashmap_8c_1a4b069b7a04e527d80cea5855fb3d2a95" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structHashMapClass" kindref="compound">HashMapClass</ref><sp/><ref refid="hashmap_8c_1a4b069b7a04e527d80cea5855fb3d2a95" kindref="member">hash_map_class</ref><sp/>=<sp/>{</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/>.<ref refid="structHashMapClass_1a40efeba47bf8edd1af861faef03a58c4" kindref="member">class</ref><sp/>=<sp/>{.<ref refid="structclass__header_1aa98964036010ad63554856c5f4680cec" kindref="member">magic</ref><sp/>=<sp/><ref refid="object__internal_8h_1a94630370ae389fb1189282fa0742f310" kindref="member">MAGIC</ref>,</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.size<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structHashMap" kindref="compound">HashMap</ref>),</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.object_init<sp/>=<sp/><ref refid="hashmap_8c_1a91f44dc50fe5d24c4970a8772347bef7" kindref="member">__construct__HashMap</ref>,</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.object_deinit<sp/>=<sp/><ref refid="hashmap_8c_1a4425bb488e5bfb1e9244675a31df3470" kindref="member">__destruct__HashMap</ref>,</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.get_size<sp/>=<sp/><ref refid="hashmap_8c_1a700517ea0c1ffc800b7c93b475a5e78a" kindref="member">get_size_HashMap</ref>,</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.get_len<sp/>=<sp/><ref refid="hashmap_8c_1a79dcb455435133253d86b70e31e3cba3" kindref="member">get_len_HashMap</ref>,</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.str<sp/>=<sp/><ref refid="hashmap_8c_1a12bafd8be5b1e7cee7f0d61a2a7a4c2e" kindref="member">str_HashMap</ref>,</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.copy<sp/>=<sp/><ref refid="hashmap_8c_1a92b093655c1077032c065f51aed37652" kindref="member">copy_HashMap</ref>,</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.insert<sp/>=<sp/><ref refid="hashmap_8c_1a2987322764f770f61fe71f0a1320fc7b" kindref="member">insert_HashMap</ref>,</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.get<sp/>=<sp/><ref refid="hashmap_8c_1aa88aa2ed0651f4feb2e275ba14114d14" kindref="member">get_HashMap</ref>,</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.del_item<sp/>=<sp/><ref refid="hashmap_8c_1a10476d872d0cfcb234391cabf5e888a1" kindref="member">del_item_HashMap</ref>,</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.iter<sp/>=<sp/><ref refid="hashmap_8c_1aa1645276039a5f13164347699538139b" kindref="member">iter_HashMap</ref>,</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.object_name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;HashMap&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="535"><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal">};</highlight></codeline>
<codeline lineno="537"><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"></highlight><highlight class="comment">//<sp/>set<sp/>the<sp/>HashMap<sp/>variable<sp/>to<sp/>serve<sp/>as<sp/>the<sp/>type<sp/>of<sp/>a<sp/>HashMap</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="539" refid="hashmap_8h_1a460bbbf2046f6aaf34ce30bb2be13939" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/><ref refid="structHashMap" kindref="compound">HashMap</ref><sp/>=<sp/>&amp;<ref refid="hashmap_8c_1a4b069b7a04e527d80cea5855fb3d2a95" kindref="member">hash_map_class</ref>;</highlight></codeline>
<codeline lineno="540"><highlight class="normal"></highlight></codeline>
<codeline lineno="541" refid="hashmap_8c_1a19a320a0fb44773b7b2edde8b06f7e0b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structHashMapClass__iter" kindref="compound">HashMapClass_iter</ref><sp/><ref refid="hashmap_8c_1a19a320a0fb44773b7b2edde8b06f7e0b" kindref="member">hash_map_class_iter</ref><sp/>=<sp/>{</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/>.<ref refid="structHashMapClass__iter_1a734f54017a71292a761cabc6fa8df712" kindref="member">class</ref><sp/>=<sp/>{.<ref refid="structclass__header_1aa98964036010ad63554856c5f4680cec" kindref="member">magic</ref><sp/>=<sp/><ref refid="object__internal_8h_1a94630370ae389fb1189282fa0742f310" kindref="member">MAGIC</ref>,</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.object_init<sp/>=<sp/><ref refid="hashmap_8c_1ae8c6201244c05c149ee58f00693fbe18" kindref="member">__construct__HashMap_iter</ref>,</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.size<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structHashMap__iter" kindref="compound">HashMap_iter</ref>),</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.<ref refid="group__collection_1gaecc46e74b03a83ca8a8023cc7264489c" kindref="member">next</ref><sp/>=<sp/><ref refid="hashmap_8c_1a5601cd221918b26557f36f577c909407" kindref="member">next_HashMap</ref></highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="547"><highlight class="normal"></highlight></codeline>
<codeline lineno="548"><highlight class="normal">};</highlight></codeline>
<codeline lineno="549" refid="hashmap_8h_1a45019180cc2e660110ceabdc4b807f3e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/><ref refid="structHashMap__iter" kindref="compound">HashMap_iter</ref><sp/>=<sp/>&amp;<ref refid="hashmap_8c_1a19a320a0fb44773b7b2edde8b06f7e0b" kindref="member">hash_map_class_iter</ref>;</highlight></codeline>
    </programlisting>
    <location file="/Users/igutek/Documents/Projects/ooc/src/hashmap.c"/>
  </compounddef>
</doxygen>
