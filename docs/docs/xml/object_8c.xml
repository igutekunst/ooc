<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="object_8c" kind="file" language="C++">
    <compoundname>object.c</compoundname>
    <includes local="no">assert.h</includes>
    <includes refid="object_8h" local="no">ooc/object.h</includes>
    <includes refid="string_8h" local="no">ooc/string.h</includes>
    <includes refid="object__internal_8h" local="yes">object_internal.h</includes>
    <incdepgraph>
      <node id="190">
        <label>stdbool.h</label>
      </node>
      <node id="189">
        <label>stdarg.h</label>
      </node>
      <node id="183">
        <label>/Users/igutek/Documents/Projects/ooc/src/object.c</label>
        <link refid="object_8c"/>
        <childnode refid="184" relation="include">
        </childnode>
        <childnode refid="185" relation="include">
        </childnode>
        <childnode refid="193" relation="include">
        </childnode>
        <childnode refid="194" relation="include">
        </childnode>
      </node>
      <node id="184">
        <label>assert.h</label>
      </node>
      <node id="191">
        <label>stdint.h</label>
      </node>
      <node id="188">
        <label>stdlib.h</label>
      </node>
      <node id="194">
        <label>object_internal.h</label>
        <link refid="object__internal_8h"/>
        <childnode refid="191" relation="include">
        </childnode>
        <childnode refid="188" relation="include">
        </childnode>
        <childnode refid="189" relation="include">
        </childnode>
        <childnode refid="190" relation="include">
        </childnode>
        <childnode refid="195" relation="include">
        </childnode>
      </node>
      <node id="186">
        <label>stddef.h</label>
      </node>
      <node id="195">
        <label>trait_math_internal.h</label>
        <link refid="trait__math__internal_8h"/>
      </node>
      <node id="192">
        <label>ooc/object_va_args.h</label>
        <link refid="object__va__args_8h"/>
        <childnode refid="188" relation="include">
        </childnode>
      </node>
      <node id="185">
        <label>ooc/object.h</label>
        <link refid="object_8h"/>
        <childnode refid="186" relation="include">
        </childnode>
        <childnode refid="187" relation="include">
        </childnode>
        <childnode refid="188" relation="include">
        </childnode>
        <childnode refid="189" relation="include">
        </childnode>
        <childnode refid="190" relation="include">
        </childnode>
        <childnode refid="191" relation="include">
        </childnode>
        <childnode refid="192" relation="include">
        </childnode>
      </node>
      <node id="193">
        <label>ooc/string.h</label>
        <link refid="string_8h"/>
        <childnode refid="185" relation="include">
        </childnode>
        <childnode refid="193" relation="include">
        </childnode>
      </node>
      <node id="187">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="object_8c_1a48931ea75855e6980404ced5938a79ec" prot="public" static="no" mutable="no">
        <type>const struct <ref refid="structclass__header" kindref="compound">class_header</ref></type>
        <definition>const struct class_header Class</definition>
        <argsstring></argsstring>
        <name>Class</name>
        <initializer>= {
   .magic = <ref refid="object__internal_8h_1a94630370ae389fb1189282fa0742f310" kindref="member">MAGIC</ref>
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/igutek/Documents/Projects/ooc/src/object.c" line="34" column="1" bodyfile="/Users/igutek/Documents/Projects/ooc/src/object.c" bodystart="6" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__common_1ga1c393167a5a06a566a2cc64133c1695f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const void *</type>
        <definition>const void* _new</definition>
        <argsstring>(size_t argc,...)</argsstring>
        <name>_new</name>
        <param>
          <type>size_t</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
<para>Create a new ooc object. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>class</parametername>
</parameternamelist>
<parameterdescription>
<para>OOC class to instantiate </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>...</parametername>
</parameternamelist>
<parameterdescription>
<para>arguments to initialize class </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/igutek/Documents/Projects/ooc/src/object.c" line="17" column="1" bodyfile="/Users/igutek/Documents/Projects/ooc/src/object.c" bodystart="17" bodyend="40"/>
        <references refid="object__internal_8h_1a94630370ae389fb1189282fa0742f310" compoundref="object__internal_8h" startline="7">MAGIC</references>
        <references refid="structObjectHeader_1a35e7f1485a6bee012c479fe61ff8717d" compoundref="object__internal_8h" startline="212">ObjectHeader::class</references>
        <references refid="structclass__header_1a5ba6bf54fc12a2a31a2b39937cd50e84" compoundref="object__internal_8h" startline="24">class_header::size</references>
        <references refid="structclass__header_1a11011a70a48768fbe95790914ea808c9" compoundref="object__internal_8h" startline="50">class_header::object_init</references>
      </memberdef>
      <memberdef kind="function" id="group__common_1gaa32332a11f6b26468e618db044b95f75" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void del</definition>
        <argsstring>(const void *_object)</argsstring>
        <name>del</name>
        <param>
          <type>const void *</type>
          <declname>object</declname>
          <defname>_object</defname>
        </param>
        <briefdescription>
<para>delete an ooc object </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>object</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/igutek/Documents/Projects/ooc/src/object.c" line="44" column="1" bodyfile="/Users/igutek/Documents/Projects/ooc/src/object.c" bodystart="44" bodyend="53"/>
        <references refid="group__collection_1gacfda61f6ab04bc36786ceb00fab70775" compoundref="object_8c" startline="182" endline="198">get_class_header_msg</references>
        <references refid="structclass__header_1aa07a11a17f5d79a66c9086b8d10969b7" compoundref="object__internal_8h" startline="57">class_header::object_deinit</references>
      </memberdef>
      <memberdef kind="function" id="object_8c_1a317798c33e05ea3ca01d0a70148f61ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* str</definition>
        <argsstring>(const void *_self)</argsstring>
        <name>str</name>
        <param>
          <type>const void *</type>
          <declname>_object</declname>
          <defname>_self</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>End of Common functions </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/igutek/Documents/Projects/ooc/src/object.c" line="56" column="1" bodyfile="/Users/igutek/Documents/Projects/ooc/src/object.c" bodystart="56" bodyend="66"/>
        <references refid="group__collection_1gacfda61f6ab04bc36786ceb00fab70775" compoundref="object_8c" startline="182" endline="198">get_class_header_msg</references>
        <references refid="structclass__header_1af8a0a6de1e1eb96faab68cc58fcf84d0" compoundref="object__internal_8h" startline="76">class_header::str</references>
        <referencedby refid="hashmap_8c_1aa88aa2ed0651f4feb2e275ba14114d14" compoundref="hashmap_8c" startline="349" endline="381">get_HashMap</referencedby>
        <referencedby refid="hashmap_8c_1a2987322764f770f61fe71f0a1320fc7b" compoundref="hashmap_8c" startline="330" endline="347">insert_HashMap</referencedby>
        <referencedby refid="list_8c_1aec387646791ce579c16e3ef129c32f74" compoundref="list_8c" startline="78" endline="119">List_to_str</referencedby>
        <referencedby refid="string_8c_1a1908c7dc8629ec342445a6e2a7c247f2" compoundref="string_8c" startline="97" endline="107">String_equal</referencedby>
        <referencedby refid="object_8h_1a23b80bc1ca4cac9bafcb0735aa404009" compoundref="object_8c" startline="68" endline="71">to_String</referencedby>
      </memberdef>
      <memberdef kind="function" id="object_8c_1a23b80bc1ca4cac9bafcb0735aa404009" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const void *</type>
        <definition>const void* to_String</definition>
        <argsstring>(const void *_object)</argsstring>
        <name>to_String</name>
        <param>
          <type>const void *</type>
          <declname>_object</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/igutek/Documents/Projects/ooc/src/object.c" line="68" column="1" bodyfile="/Users/igutek/Documents/Projects/ooc/src/object.c" bodystart="68" bodyend="71"/>
        <references refid="object_8c_1a317798c33e05ea3ca01d0a70148f61ad" compoundref="object_8c" startline="56" endline="66">str</references>
        <references refid="string_8c_1a7b896f7c16c20c94b9b961fe9e926a4f" compoundref="string_8c" startline="163">String</references>
        <referencedby refid="list_8c_1aec387646791ce579c16e3ef129c32f74" compoundref="list_8c" startline="78" endline="119">List_to_str</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__common_1ga34dc6ab72cfd51381e8173226484e827" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void print</definition>
        <argsstring>(const void *_self)</argsstring>
        <name>print</name>
        <param>
          <type>const void *</type>
          <declname>_self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/igutek/Documents/Projects/ooc/src/object.c" line="74" column="1" bodyfile="/Users/igutek/Documents/Projects/ooc/src/object.c" bodystart="74" bodyend="84"/>
        <references refid="group__collection_1gacfda61f6ab04bc36786ceb00fab70775" compoundref="object_8c" startline="182" endline="198">get_class_header_msg</references>
        <references refid="structclass__header_1a23181c1eac1455a8f23dd9d14f8b6abd" compoundref="object__internal_8h" startline="63">class_header::print</references>
        <referencedby refid="main_8c_1a0ddf1224851353fc92bfbff6f499fa97" compoundref="main_8c" startline="8" endline="42">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__common_1gafac8564ed88a6f8585f043fc6b2fa7e1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t size</definition>
        <argsstring>(const void *_self)</argsstring>
        <name>size</name>
        <param>
          <type>const void *</type>
          <declname>_object</declname>
          <defname>_self</defname>
        </param>
        <briefdescription>
<para>get size in bytes </para>        </briefdescription>
        <detaileddescription>
<para>Get the full size in bytes of an ooc object. This is implementation defined, and may not include the size of items contained in a collection for example <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_object</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>size in bytes of object </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/igutek/Documents/Projects/ooc/src/object.c" line="87" column="1" bodyfile="/Users/igutek/Documents/Projects/ooc/src/object.c" bodystart="87" bodyend="95"/>
        <references refid="group__collection_1gacfda61f6ab04bc36786ceb00fab70775" compoundref="object_8c" startline="182" endline="198">get_class_header_msg</references>
        <references refid="structclass__header_1a5c135b5316d0d9d22dce1f32fb8befb1" compoundref="object__internal_8h" startline="31">class_header::get_size</references>
        <referencedby refid="person_8c_1adaf633e0102ae03a6b233de044b1f162" compoundref="person_8c" startline="29" endline="46">__construct__Person</referencedby>
        <referencedby refid="string_8c_1ae55182aad42d41b3d50d6a078f74e0ed" compoundref="string_8c" startline="24" endline="41">__construct__String</referencedby>
        <referencedby refid="string_8c_1ad84cbc93082cb73a0aeb9911e2768c90" compoundref="string_8c" startline="56" endline="94">String_append</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__common_1ga68940c707bbebe6946aeca72df1ee803" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const void *</type>
        <definition>const void* type</definition>
        <argsstring>(const void *_self)</argsstring>
        <name>type</name>
        <param>
          <type>const void *</type>
          <declname>self</declname>
          <defname>_self</defname>
        </param>
        <briefdescription>
<para>get ooc class object </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>ooc object </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>ooc class of a given ooc object </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/igutek/Documents/Projects/ooc/src/object.c" line="98" column="1" bodyfile="/Users/igutek/Documents/Projects/ooc/src/object.c" bodystart="98" bodyend="103"/>
        <references refid="group__collection_1gacfda61f6ab04bc36786ceb00fab70775" compoundref="object_8c" startline="182" endline="198">get_class_header_msg</references>
        <referencedby refid="string_8c_1ad84cbc93082cb73a0aeb9911e2768c90" compoundref="string_8c" startline="56" endline="94">String_append</referencedby>
        <referencedby refid="string_8c_1a1908c7dc8629ec342445a6e2a7c247f2" compoundref="string_8c" startline="97" endline="107">String_equal</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__common_1ga15be7f4a5b9c979feb83b76278f6716c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t len</definition>
        <argsstring>(const void *_self)</argsstring>
        <name>len</name>
        <param>
          <type>const void *</type>
          <declname>_self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/igutek/Documents/Projects/ooc/src/object.c" line="106" column="1" bodyfile="/Users/igutek/Documents/Projects/ooc/src/object.c" bodystart="106" bodyend="117"/>
        <references refid="group__collection_1gacfda61f6ab04bc36786ceb00fab70775" compoundref="object_8c" startline="182" endline="198">get_class_header_msg</references>
        <references refid="structclass__header_1a1b7cb949741b9a64fd3569af94f30cba" compoundref="object__internal_8h" startline="38">class_header::get_len</references>
        <references refid="group__common_1gadcc35aece3f8a4c822a9bf2a591f087b" compoundref="object_8c" startline="120" endline="131">clsname</references>
        <referencedby refid="string_8c_1ae55182aad42d41b3d50d6a078f74e0ed" compoundref="string_8c" startline="24" endline="41">__construct__String</referencedby>
        <referencedby refid="string_8c_1ad84cbc93082cb73a0aeb9911e2768c90" compoundref="string_8c" startline="56" endline="94">String_append</referencedby>
        <referencedby refid="string_8c_1a0861087e40ab0649cb2c5ce91798171b" compoundref="string_8c" startline="115" endline="124">FNV32</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__common_1gadcc35aece3f8a4c822a9bf2a591f087b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* clsname</definition>
        <argsstring>(const void *_self)</argsstring>
        <name>clsname</name>
        <param>
          <type>const void *</type>
          <declname>_self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/igutek/Documents/Projects/ooc/src/object.c" line="120" column="1" bodyfile="/Users/igutek/Documents/Projects/ooc/src/object.c" bodystart="120" bodyend="131"/>
        <references refid="group__collection_1gacfda61f6ab04bc36786ceb00fab70775" compoundref="object_8c" startline="182" endline="198">get_class_header_msg</references>
        <references refid="structclass__header_1af7f2f5623c98afb59519062172644350" compoundref="object__internal_8h" startline="202">class_header::object_name</references>
        <referencedby refid="list_8c_1a975abd5adea5f2b1caa581cb8994dd9a" compoundref="list_8c" startline="142" endline="166">List_get_item</referencedby>
        <referencedby refid="math_8h_1a8202f1cadbe86449c7f0f409c4854d54" compoundref="math_8c" startline="5" endline="16">obj_add</referencedby>
        <referencedby refid="math_8h_1a2ee0ad7da46b9225036ceafdf742282b" compoundref="math_8c" startline="34" endline="42">obj_to_int</referencedby>
        <referencedby refid="group__common_1ga15be7f4a5b9c979feb83b76278f6716c" compoundref="object_8c" startline="106" endline="117">len</referencedby>
        <referencedby refid="group__collection_1ga2bd4216bcf1d5810032394f57fbf5c2f" compoundref="object_8c" startline="165" endline="179">append</referencedby>
        <referencedby refid="group__collection_1gaa467fc1e6a3036f13ea20b36a6e672a1" compoundref="object_8c" startline="257" endline="267">get_item</referencedby>
        <referencedby refid="group__collection_1ga0cb67414335937707c9b92809a10895b" compoundref="object_8c" startline="269" endline="280">iter</referencedby>
        <referencedby refid="string_8c_1a1908c7dc8629ec342445a6e2a7c247f2" compoundref="string_8c" startline="97" endline="107">String_equal</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__common_1gab08ed4d7b5aa115383f38057e006be9d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const void *</type>
        <definition>const void* copy</definition>
        <argsstring>(const void *_self)</argsstring>
        <name>copy</name>
        <param>
          <type>const void *</type>
          <declname>_self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/igutek/Documents/Projects/ooc/src/object.c" line="136" column="1" bodyfile="/Users/igutek/Documents/Projects/ooc/src/object.c" bodystart="136" bodyend="147"/>
        <references refid="group__collection_1gacfda61f6ab04bc36786ceb00fab70775" compoundref="object_8c" startline="182" endline="198">get_class_header_msg</references>
        <references refid="structclass__header_1a26ec3e94c98bf5d3eff10d37cf2696ef" compoundref="object__internal_8h" startline="132">class_header::copy</references>
        <referencedby refid="main_8c_1a0ddf1224851353fc92bfbff6f499fa97" compoundref="main_8c" startline="8" endline="42">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__common_1ga4b83176929aeea62524d2a126d3c897f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool equals</definition>
        <argsstring>(const void *_self, const void *_other)</argsstring>
        <name>equals</name>
        <param>
          <type>const void *</type>
          <declname>_self</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>_other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/igutek/Documents/Projects/ooc/src/object.c" line="150" column="1" bodyfile="/Users/igutek/Documents/Projects/ooc/src/object.c" bodystart="150" bodyend="163"/>
        <references refid="group__collection_1gacfda61f6ab04bc36786ceb00fab70775" compoundref="object_8c" startline="182" endline="198">get_class_header_msg</references>
        <referencedby refid="hashmap_8c_1a8aa67d2dac0692c1128b50780ad9dfc1" compoundref="hashmap_8c" startline="116" endline="159">internal_insert_HashMap</referencedby>
        <referencedby refid="hashmap_8c_1aa88aa2ed0651f4feb2e275ba14114d14" compoundref="hashmap_8c" startline="349" endline="381">get_HashMap</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__collection_1ga2bd4216bcf1d5810032394f57fbf5c2f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const void *</type>
        <definition>const void* append</definition>
        <argsstring>(const void *_self, const void *_other)</argsstring>
        <name>append</name>
        <param>
          <type>const void *</type>
          <declname>_self</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>_other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/igutek/Documents/Projects/ooc/src/object.c" line="165" column="1" bodyfile="/Users/igutek/Documents/Projects/ooc/src/object.c" bodystart="165" bodyend="179"/>
        <references refid="group__collection_1gacfda61f6ab04bc36786ceb00fab70775" compoundref="object_8c" startline="182" endline="198">get_class_header_msg</references>
        <references refid="structclass__header_1a10e4c230bf810df38e3581caabad02bb" compoundref="object__internal_8h" startline="99">class_header::append</references>
        <references refid="group__common_1gadcc35aece3f8a4c822a9bf2a591f087b" compoundref="object_8c" startline="120" endline="131">clsname</references>
        <referencedby refid="list_8c_1aec387646791ce579c16e3ef129c32f74" compoundref="list_8c" startline="78" endline="119">List_to_str</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__collection_1gacfda61f6ab04bc36786ceb00fab70775" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>struct <ref refid="structclass__header" kindref="compound">class_header</ref> *</type>
        <definition>struct class_header* get_class_header_msg</definition>
        <argsstring>(const void *_self, const char *message)</argsstring>
        <name>get_class_header_msg</name>
        <param>
          <type>const void *</type>
          <declname>_self</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>message</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/igutek/Documents/Projects/ooc/src/object.c" line="182" column="1" bodyfile="/Users/igutek/Documents/Projects/ooc/src/object.c" bodystart="182" bodyend="198"/>
        <references refid="object__internal_8h_1a94630370ae389fb1189282fa0742f310" compoundref="object__internal_8h" startline="7">MAGIC</references>
        <referencedby refid="hashmap_8c_1a2987322764f770f61fe71f0a1320fc7b" compoundref="hashmap_8c" startline="330" endline="347">insert_HashMap</referencedby>
        <referencedby refid="hashmap_8c_1aa88aa2ed0651f4feb2e275ba14114d14" compoundref="hashmap_8c" startline="349" endline="381">get_HashMap</referencedby>
        <referencedby refid="hashmap_8c_1a10476d872d0cfcb234391cabf5e888a1" compoundref="hashmap_8c" startline="384" endline="454">del_item_HashMap</referencedby>
        <referencedby refid="list_8c_1a975abd5adea5f2b1caa581cb8994dd9a" compoundref="list_8c" startline="142" endline="166">List_get_item</referencedby>
        <referencedby refid="math_8h_1a8202f1cadbe86449c7f0f409c4854d54" compoundref="math_8c" startline="5" endline="16">obj_add</referencedby>
        <referencedby refid="math_8h_1a2ee0ad7da46b9225036ceafdf742282b" compoundref="math_8c" startline="34" endline="42">obj_to_int</referencedby>
        <referencedby refid="group__common_1gaa32332a11f6b26468e618db044b95f75" compoundref="object_8c" startline="44" endline="53">del</referencedby>
        <referencedby refid="object_8h_1a6ab4b3e256d10044340c1f861c031438" compoundref="object_8c" startline="56" endline="66">str</referencedby>
        <referencedby refid="group__common_1ga34dc6ab72cfd51381e8173226484e827" compoundref="object_8c" startline="74" endline="84">print</referencedby>
        <referencedby refid="group__common_1gafac8564ed88a6f8585f043fc6b2fa7e1" compoundref="object_8c" startline="87" endline="95">size</referencedby>
        <referencedby refid="group__common_1ga68940c707bbebe6946aeca72df1ee803" compoundref="object_8c" startline="98" endline="103">type</referencedby>
        <referencedby refid="group__common_1ga15be7f4a5b9c979feb83b76278f6716c" compoundref="object_8c" startline="106" endline="117">len</referencedby>
        <referencedby refid="group__common_1gadcc35aece3f8a4c822a9bf2a591f087b" compoundref="object_8c" startline="120" endline="131">clsname</referencedby>
        <referencedby refid="group__common_1gab08ed4d7b5aa115383f38057e006be9d" compoundref="object_8c" startline="136" endline="147">copy</referencedby>
        <referencedby refid="group__common_1ga4b83176929aeea62524d2a126d3c897f" compoundref="object_8c" startline="150" endline="163">equals</referencedby>
        <referencedby refid="group__collection_1ga2bd4216bcf1d5810032394f57fbf5c2f" compoundref="object_8c" startline="165" endline="179">append</referencedby>
        <referencedby refid="group__collection_1gae0b3682e6ff5038e94c9e551bdd0d489" compoundref="object_8c" startline="223" endline="230">hash</referencedby>
        <referencedby refid="group__collection_1ga6b0c20cd48a1ab79321a018d29037161" compoundref="object_8c" startline="232" endline="242">set_item</referencedby>
        <referencedby refid="group__collection_1ga8b99290b943601321e5bf291daecaae3" compoundref="object_8c" startline="244" endline="255">del_item</referencedby>
        <referencedby refid="group__collection_1gaa467fc1e6a3036f13ea20b36a6e672a1" compoundref="object_8c" startline="257" endline="267">get_item</referencedby>
        <referencedby refid="group__collection_1ga0cb67414335937707c9b92809a10895b" compoundref="object_8c" startline="269" endline="280">iter</referencedby>
        <referencedby refid="group__collection_1gaecc46e74b03a83ca8a8023cc7264489c" compoundref="object_8c" startline="282" endline="290">next</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__collection_1gabf324b663150d7bbcfe0e3b84b21102f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const struct <ref refid="structclass__header" kindref="compound">class_header</ref> *</type>
        <definition>const struct class_header* get_obj_type</definition>
        <argsstring>(const void *_self, const void *class, const char *message)</argsstring>
        <name>get_obj_type</name>
        <param>
          <type>const void *</type>
          <declname>_self</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>class</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>message</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/igutek/Documents/Projects/ooc/src/object.c" line="201" column="1" bodyfile="/Users/igutek/Documents/Projects/ooc/src/object.c" bodystart="201" bodyend="216"/>
        <references refid="structclass__header_1aa98964036010ad63554856c5f4680cec" compoundref="object__internal_8h" startline="23">class_header::magic</references>
        <references refid="object__internal_8h_1a94630370ae389fb1189282fa0742f310" compoundref="object__internal_8h" startline="7">MAGIC</references>
      </memberdef>
      <memberdef kind="function" id="object_8c_1a8837e68ffda149b4f7015cafab0c2a3c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const struct <ref refid="structclass__header" kindref="compound">class_header</ref> *</type>
        <definition>const struct class_header* get_class_header</definition>
        <argsstring>(const void *_self)</argsstring>
        <name>get_class_header</name>
        <param>
          <type>const void *</type>
          <declname>_self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/igutek/Documents/Projects/ooc/src/object.c" line="219" column="1" bodyfile="/Users/igutek/Documents/Projects/ooc/src/object.c" bodystart="219" bodyend="221"/>
        <referencedby refid="group__collection_1ga8b99290b943601321e5bf291daecaae3" compoundref="object_8c" startline="244" endline="255">del_item</referencedby>
        <referencedby refid="hashmap_8c_1aa88aa2ed0651f4feb2e275ba14114d14" compoundref="hashmap_8c" startline="349" endline="381">get_HashMap</referencedby>
        <referencedby refid="group__collection_1gaa467fc1e6a3036f13ea20b36a6e672a1" compoundref="object_8c" startline="257" endline="267">get_item</referencedby>
        <referencedby refid="group__collection_1gae0b3682e6ff5038e94c9e551bdd0d489" compoundref="object_8c" startline="223" endline="230">hash</referencedby>
        <referencedby refid="hashmap_8c_1a2987322764f770f61fe71f0a1320fc7b" compoundref="hashmap_8c" startline="330" endline="347">insert_HashMap</referencedby>
        <referencedby refid="hashmap_8c_1a8aa67d2dac0692c1128b50780ad9dfc1" compoundref="hashmap_8c" startline="116" endline="159">internal_insert_HashMap</referencedby>
        <referencedby refid="group__collection_1ga0cb67414335937707c9b92809a10895b" compoundref="object_8c" startline="269" endline="280">iter</referencedby>
        <referencedby refid="group__collection_1gaecc46e74b03a83ca8a8023cc7264489c" compoundref="object_8c" startline="282" endline="290">next</referencedby>
        <referencedby refid="group__collection_1ga6b0c20cd48a1ab79321a018d29037161" compoundref="object_8c" startline="232" endline="242">set_item</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__collection_1gae0b3682e6ff5038e94c9e551bdd0d489" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint64_t</type>
        <definition>uint64_t hash</definition>
        <argsstring>(const void *_self)</argsstring>
        <name>hash</name>
        <param>
          <type>const void *</type>
          <declname>_self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/igutek/Documents/Projects/ooc/src/object.c" line="223" column="1" bodyfile="/Users/igutek/Documents/Projects/ooc/src/object.c" bodystart="223" bodyend="230"/>
        <references refid="group__collection_1gacfda61f6ab04bc36786ceb00fab70775" compoundref="object_8c" startline="182" endline="198">get_class_header_msg</references>
        <references refid="object_8c_1a8837e68ffda149b4f7015cafab0c2a3c" compoundref="object_8c" startline="219" endline="221">get_class_header</references>
        <referencedby refid="string_8c_1a0861087e40ab0649cb2c5ce91798171b" compoundref="string_8c" startline="115" endline="124">FNV32</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__collection_1ga6b0c20cd48a1ab79321a018d29037161" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* set_item</definition>
        <argsstring>(const void *_self, const void *_key, const void *_other)</argsstring>
        <name>set_item</name>
        <param>
          <type>const void *</type>
          <declname>_self</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>_key</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>_other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/igutek/Documents/Projects/ooc/src/object.c" line="232" column="1" bodyfile="/Users/igutek/Documents/Projects/ooc/src/object.c" bodystart="232" bodyend="242"/>
        <references refid="group__collection_1gacfda61f6ab04bc36786ceb00fab70775" compoundref="object_8c" startline="182" endline="198">get_class_header_msg</references>
        <references refid="object_8c_1a8837e68ffda149b4f7015cafab0c2a3c" compoundref="object_8c" startline="219" endline="221">get_class_header</references>
        <referencedby refid="main_8c_1a0ddf1224851353fc92bfbff6f499fa97" compoundref="main_8c" startline="8" endline="42">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__collection_1ga8b99290b943601321e5bf291daecaae3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void del_item</definition>
        <argsstring>(const void *_self, const void *_key)</argsstring>
        <name>del_item</name>
        <param>
          <type>const void *</type>
          <declname>_self</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>_key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/igutek/Documents/Projects/ooc/src/object.c" line="244" column="1" bodyfile="/Users/igutek/Documents/Projects/ooc/src/object.c" bodystart="244" bodyend="255"/>
        <references refid="group__collection_1gacfda61f6ab04bc36786ceb00fab70775" compoundref="object_8c" startline="182" endline="198">get_class_header_msg</references>
        <references refid="object_8c_1a8837e68ffda149b4f7015cafab0c2a3c" compoundref="object_8c" startline="219" endline="221">get_class_header</references>
      </memberdef>
      <memberdef kind="function" id="group__collection_1gaa467fc1e6a3036f13ea20b36a6e672a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const void *</type>
        <definition>const void* get_item</definition>
        <argsstring>(const void *_self, const void *_key)</argsstring>
        <name>get_item</name>
        <param>
          <type>const void *</type>
          <declname>_self</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>_key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/igutek/Documents/Projects/ooc/src/object.c" line="257" column="1" bodyfile="/Users/igutek/Documents/Projects/ooc/src/object.c" bodystart="257" bodyend="267"/>
        <references refid="group__collection_1gacfda61f6ab04bc36786ceb00fab70775" compoundref="object_8c" startline="182" endline="198">get_class_header_msg</references>
        <references refid="object_8c_1a8837e68ffda149b4f7015cafab0c2a3c" compoundref="object_8c" startline="219" endline="221">get_class_header</references>
        <references refid="group__common_1gadcc35aece3f8a4c822a9bf2a591f087b" compoundref="object_8c" startline="120" endline="131">clsname</references>
      </memberdef>
      <memberdef kind="function" id="group__collection_1ga0cb67414335937707c9b92809a10895b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const void *</type>
        <definition>const void* iter</definition>
        <argsstring>(const void *_self)</argsstring>
        <name>iter</name>
        <param>
          <type>const void *</type>
          <declname>_self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/igutek/Documents/Projects/ooc/src/object.c" line="269" column="1" bodyfile="/Users/igutek/Documents/Projects/ooc/src/object.c" bodystart="269" bodyend="280"/>
        <references refid="group__collection_1gacfda61f6ab04bc36786ceb00fab70775" compoundref="object_8c" startline="182" endline="198">get_class_header_msg</references>
        <references refid="object_8c_1a8837e68ffda149b4f7015cafab0c2a3c" compoundref="object_8c" startline="219" endline="221">get_class_header</references>
        <references refid="group__common_1gadcc35aece3f8a4c822a9bf2a591f087b" compoundref="object_8c" startline="120" endline="131">clsname</references>
        <referencedby refid="main_8c_1a0ddf1224851353fc92bfbff6f499fa97" compoundref="main_8c" startline="8" endline="42">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__collection_1gaecc46e74b03a83ca8a8023cc7264489c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const void *</type>
        <definition>const void* next</definition>
        <argsstring>(const void *_self)</argsstring>
        <name>next</name>
        <param>
          <type>const void *</type>
          <declname>_self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/igutek/Documents/Projects/ooc/src/object.c" line="282" column="1" bodyfile="/Users/igutek/Documents/Projects/ooc/src/object.c" bodystart="282" bodyend="290"/>
        <references refid="group__collection_1gacfda61f6ab04bc36786ceb00fab70775" compoundref="object_8c" startline="182" endline="198">get_class_header_msg</references>
        <references refid="object_8c_1a8837e68ffda149b4f7015cafab0c2a3c" compoundref="object_8c" startline="219" endline="221">get_class_header</references>
        <referencedby refid="main_8c_1a0ddf1224851353fc92bfbff6f499fa97" compoundref="main_8c" startline="8" endline="42">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="object_8c_1a68f404b6502dda7869a76b1ffcb9ffd6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void keys</definition>
        <argsstring>(const void *object)</argsstring>
        <name>keys</name>
        <param>
          <type>const void *</type>
          <declname>object</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/igutek/Documents/Projects/ooc/src/object.c" line="292" column="1" bodyfile="/Users/igutek/Documents/Projects/ooc/src/object.c" bodystart="292" bodyend="295"/>
      </memberdef>
      <memberdef kind="function" id="object_8c_1a413d87a43c15a9b014d672a91d8a1cd3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void values</definition>
        <argsstring>(const void *_self)</argsstring>
        <name>values</name>
        <param>
          <type>const void *</type>
          <declname>_self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/igutek/Documents/Projects/ooc/src/object.c" line="296" column="1" bodyfile="/Users/igutek/Documents/Projects/ooc/src/object.c" bodystart="296" bodyend="298"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;assert.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="object_8h" kindref="compound">ooc/object.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="string_8h" kindref="compound">ooc/string.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="object__internal_8h" kindref="compound">object_internal.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6" refid="object_8c_1a48931ea75855e6980404ced5938a79ec" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structclass__header" kindref="compound">class_header</ref><sp/><ref refid="object_8c_1a48931ea75855e6980404ced5938a79ec" kindref="member">Class</ref><sp/>=<sp/>{</highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/><sp/>.<ref refid="structclass__header_1aa98964036010ad63554856c5f4680cec" kindref="member">magic</ref><sp/>=<sp/><ref refid="object__internal_8h_1a94630370ae389fb1189282fa0742f310" kindref="member">MAGIC</ref></highlight></codeline>
<codeline lineno="8"><highlight class="normal">};</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="17" refid="group__common_1ga1c393167a5a06a566a2cc64133c1695f" refkind="member"><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/><ref refid="group__common_1ga1c393167a5a06a566a2cc64133c1695f" kindref="member">_new</ref><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>argc,<sp/>...)<sp/>{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>va_list<sp/>args;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>va_start(args,<sp/>argc);</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(argc<sp/>!=0);</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>_class<sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)<sp/>va_arg(args,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structclass__header" kindref="compound">class_header</ref><sp/>*<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">=<sp/>(struct<sp/><ref refid="structclass__header" kindref="compound">class_header</ref><sp/>*<sp/>)<sp/>_class;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>||<sp/>class-&gt;magic<sp/>!=<sp/><ref refid="object__internal_8h_1a94630370ae389fb1189282fa0742f310" kindref="member">MAGIC</ref>){</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;new<sp/>called<sp/>with<sp/>invalid<sp/>class\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(1);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structObjectHeader" kindref="compound">ObjectHeader</ref>*<sp/><sp/>new_object<sp/>=<sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structObjectHeader" kindref="compound">ObjectHeader</ref><sp/>*)<sp/>malloc(<ref refid="structObjectHeader_1a35e7f1485a6bee012c479fe61ff8717d" kindref="member">class</ref>-&gt;<ref refid="structclass__header_1a5ba6bf54fc12a2a31a2b39937cd50e84" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structObjectHeader_1a35e7f1485a6bee012c479fe61ff8717d" kindref="member">class</ref>-&gt;<ref refid="structclass__header_1a11011a70a48768fbe95790914ea808c9" kindref="member">object_init</ref>){</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//TODO<sp/>remove<sp/>extra<sp/>initialization<sp/>from<sp/>specific<sp/>class<sp/>constructors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_object-&gt;<ref refid="structObjectHeader_1a35e7f1485a6bee012c479fe61ff8717d" kindref="member">class</ref><sp/>=<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_object<sp/>=<sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structObjectHeader" kindref="compound">ObjectHeader</ref>*)<sp/><ref refid="structObjectHeader_1a35e7f1485a6bee012c479fe61ff8717d" kindref="member">class</ref>-&gt;<ref refid="structclass__header_1a11011a70a48768fbe95790914ea808c9" kindref="member">object_init</ref>(new_object,<sp/>argc<sp/>-<sp/>1,<sp/>args);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>va_end(args);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;No<sp/>default<sp/>constructor.<sp/>Allocating<sp/>%zu<sp/>bytes\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="structObjectHeader_1a35e7f1485a6bee012c479fe61ff8717d" kindref="member">class</ref>-&gt;<ref refid="structclass__header_1a5ba6bf54fc12a2a31a2b39937cd50e84" kindref="member">size</ref>)<sp/>;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>new_object;</highlight></codeline>
<codeline lineno="40"><highlight class="normal">}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="group__common_1gaa32332a11f6b26468e618db044b95f75" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__common_1gaa32332a11f6b26468e618db044b95f75" kindref="member">del</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*_object){</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structclass__header" kindref="compound">class_header</ref><sp/>*<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>=<sp/><ref refid="group__collection_1gacfda61f6ab04bc36786ceb00fab70775" kindref="member">get_class_header_msg</ref>(_object,<sp/></highlight><highlight class="stringliteral">&quot;Attempt<sp/>to<sp/>delete<sp/>non<sp/>object\n&quot;</highlight><highlight class="normal">)))<sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>class-&gt;object_deinit)<sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">-&gt;<ref refid="structclass__header_1aa07a11a17f5d79a66c9086b8d10969b7" kindref="member">object_deinit</ref>(_object);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)<sp/>_object)<sp/>;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="53"><highlight class="normal">}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56" refid="object_8h_1a6ab4b3e256d10044340c1f861c031438" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/><sp/><ref refid="object_8c_1a317798c33e05ea3ca01d0a70148f61ad" kindref="member">str</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>_self){</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structclass__header" kindref="compound">class_header</ref><sp/>*<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>=<sp/><ref refid="group__collection_1gacfda61f6ab04bc36786ceb00fab70775" kindref="member">get_class_header_msg</ref>(_self,<sp/></highlight><highlight class="stringliteral">&quot;str<sp/>called<sp/>on<sp/>non<sp/>object\n&quot;</highlight><highlight class="normal">)))<sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(class-&gt;str){</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">-&gt;<ref refid="structclass__header_1af8a0a6de1e1eb96faab68cc58fcf84d0" kindref="member">str</ref>(_self);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">-&gt;object_name;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="66"><highlight class="normal">}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68" refid="object_8h_1a23b80bc1ca4cac9bafcb0735aa404009" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="object_8c_1a23b80bc1ca4cac9bafcb0735aa404009" kindref="member">to_String</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*_object)<sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal">(<ref refid="string_8c_1a7b896f7c16c20c94b9b961fe9e926a4f" kindref="member">String</ref>,<sp/><ref refid="object_8c_1a317798c33e05ea3ca01d0a70148f61ad" kindref="member">str</ref>(_object));</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal">}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74" refid="group__common_1ga34dc6ab72cfd51381e8173226484e827" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__common_1ga34dc6ab72cfd51381e8173226484e827" kindref="member">print</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>_self){</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structclass__header" kindref="compound">class_header</ref><sp/>*<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>=<sp/><ref refid="group__collection_1gacfda61f6ab04bc36786ceb00fab70775" kindref="member">get_class_header_msg</ref>(_self,<sp/></highlight><highlight class="stringliteral">&quot;Attempted<sp/>to<sp/>print<sp/>non<sp/>object\n&quot;</highlight><highlight class="normal">)))<sp/>{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(class-&gt;print)<sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">-&gt;<ref refid="structclass__header_1a23181c1eac1455a8f23dd9d14f8b6abd" kindref="member">print</ref>(_self);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(class-&gt;str)<sp/>{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;%s\n&quot;</highlight><highlight class="normal">,<sp/>class-&gt;str(_self));</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Object<sp/>at<sp/>%p\n&quot;</highlight><highlight class="normal">,<sp/>_self);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="84"><highlight class="normal">}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87" refid="group__common_1gafac8564ed88a6f8585f043fc6b2fa7e1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="group__common_1gafac8564ed88a6f8585f043fc6b2fa7e1" kindref="member">size</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>_self)<sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structclass__header" kindref="compound">class_header</ref><sp/>*<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>=<sp/><ref refid="group__collection_1gacfda61f6ab04bc36786ceb00fab70775" kindref="member">get_class_header_msg</ref>(_self,<sp/></highlight><highlight class="stringliteral">&quot;Attempted<sp/>to<sp/>get<sp/>type<sp/>of<sp/>non<sp/>object\n&quot;</highlight><highlight class="normal">)))<sp/>{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(class-&gt;get_size)</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">-&gt;<ref refid="structclass__header_1a5c135b5316d0d9d22dce1f32fb8befb1" kindref="member">get_size</ref>(_self);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">-&gt;size;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="95"><highlight class="normal">}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98" refid="group__common_1ga68940c707bbebe6946aeca72df1ee803" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/><ref refid="group__common_1ga68940c707bbebe6946aeca72df1ee803" kindref="member">type</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>_self){</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structclass__header" kindref="compound">class_header</ref><sp/>*<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>=<sp/><ref refid="group__collection_1gacfda61f6ab04bc36786ceb00fab70775" kindref="member">get_class_header_msg</ref>(_self,<sp/></highlight><highlight class="stringliteral">&quot;Attempted<sp/>to<sp/>get<sp/>type<sp/>of<sp/>non<sp/>object\n&quot;</highlight><highlight class="normal">)))</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*<sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structclass__header" kindref="compound">class_header</ref><sp/>**)<sp/>_self;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="103"><highlight class="normal">}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106" refid="group__common_1ga15be7f4a5b9c979feb83b76278f6716c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="group__common_1ga15be7f4a5b9c979feb83b76278f6716c" kindref="member">len</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>_self)<sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structclass__header" kindref="compound">class_header</ref><sp/>*<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>=<sp/><ref refid="group__collection_1gacfda61f6ab04bc36786ceb00fab70775" kindref="member">get_class_header_msg</ref>(_self,<sp/></highlight><highlight class="stringliteral">&quot;Attempted<sp/>to<sp/>get<sp/>len<sp/>of<sp/>non<sp/>object\n&quot;</highlight><highlight class="normal">)))<sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(class-&gt;get_len)<sp/></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">-&gt;<ref refid="structclass__header_1a1b7cb949741b9a64fd3569af94f30cba" kindref="member">get_len</ref>(_self);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;TypeError:<sp/>%s<sp/>does<sp/>not<sp/>support<sp/>len\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="group__common_1gadcc35aece3f8a4c822a9bf2a591f087b" kindref="member">clsname</ref>(_self));</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(1);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="117"><highlight class="normal">}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120" refid="group__common_1gadcc35aece3f8a4c822a9bf2a591f087b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="group__common_1gadcc35aece3f8a4c822a9bf2a591f087b" kindref="member">clsname</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>_self)<sp/>{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structclass__header" kindref="compound">class_header</ref><sp/>*<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>=<sp/><ref refid="group__collection_1gacfda61f6ab04bc36786ceb00fab70775" kindref="member">get_class_header_msg</ref>(_self,<sp/></highlight><highlight class="stringliteral">&quot;Attempted<sp/>to<sp/>get<sp/>name<sp/>of<sp/>invalid<sp/>object\n&quot;</highlight><highlight class="normal">)))<sp/>{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(class-&gt;object_name)</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">-&gt;<ref refid="structclass__header_1af7f2f5623c98afb59519062172644350" kindref="member">object_name</ref>;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;TypeError:<sp/>object<sp/>does<sp/>not<sp/>support<sp/>name\n.&quot;</highlight><highlight class="normal">)<sp/>;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(1);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="131"><highlight class="normal">}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136" refid="group__common_1gab08ed4d7b5aa115383f38057e006be9d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/><ref refid="group__common_1gab08ed4d7b5aa115383f38057e006be9d" kindref="member">copy</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>_self)<sp/>{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structclass__header" kindref="compound">class_header</ref><sp/>*<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>=<sp/><ref refid="group__collection_1gacfda61f6ab04bc36786ceb00fab70775" kindref="member">get_class_header_msg</ref>(_self,<sp/></highlight><highlight class="stringliteral">&quot;Attempted<sp/>to<sp/>get<sp/>len<sp/>of<sp/>non<sp/>object\n&quot;</highlight><highlight class="normal">))){</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(class-&gt;copy)<sp/></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">-&gt;<ref refid="structclass__header_1a26ec3e94c98bf5d3eff10d37cf2696ef" kindref="member">copy</ref>(_self);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;TypeError:<sp/>object<sp/>does<sp/>not<sp/>support<sp/>copying\n&quot;</highlight><highlight class="normal">)<sp/>;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(1);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="147"><highlight class="normal">}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150" refid="group__common_1ga4b83176929aeea62524d2a126d3c897f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__common_1ga4b83176929aeea62524d2a126d3c897f" kindref="member">equals</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>_self,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>_other){</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structclass__header" kindref="compound">class_header</ref><sp/>*<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structclass__header" kindref="compound">class_header</ref><sp/>*<sp/>other;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>=<sp/><ref refid="group__collection_1gacfda61f6ab04bc36786ceb00fab70775" kindref="member">get_class_header_msg</ref>(_self,<sp/></highlight><highlight class="stringliteral">&quot;Attempted<sp/>to<sp/>compare<sp/>non<sp/>object&quot;</highlight><highlight class="normal">)))<sp/>{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>other<sp/>=<sp/><ref refid="group__collection_1gacfda61f6ab04bc36786ceb00fab70775" kindref="member">get_class_header_msg</ref>(_other,<sp/></highlight><highlight class="stringliteral">&quot;attempted<sp/>to<sp/>compare<sp/>non<sp/>object\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(class-&gt;equals){</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">-&gt;equals(_self,<sp/>_other);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_self<sp/>==<sp/>_other;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="163"><highlight class="normal">}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165" refid="group__collection_1ga2bd4216bcf1d5810032394f57fbf5c2f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="group__collection_1ga2bd4216bcf1d5810032394f57fbf5c2f" kindref="member">append</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>_self,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>_other){</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structclass__header" kindref="compound">class_header</ref><sp/>*<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>=<sp/><ref refid="group__collection_1gacfda61f6ab04bc36786ceb00fab70775" kindref="member">get_class_header_msg</ref>(_self,<sp/></highlight><highlight class="stringliteral">&quot;Attempted<sp/>to<sp/>append<sp/>non<sp/>object\n&quot;</highlight><highlight class="normal">)))<sp/>{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(class-&gt;append)<sp/>{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">-&gt;<ref refid="structclass__header_1a10e4c230bf810df38e3581caabad02bb" kindref="member">append</ref>(_self,<sp/>_other);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;Type<sp/>%s<sp/>does<sp/>not<sp/>support<sp/>append\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="group__common_1gadcc35aece3f8a4c822a9bf2a591f087b" kindref="member">clsname</ref>(_self));</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(EXIT_FAILURE);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Should<sp/>not<sp/>get<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="179"><highlight class="normal">}</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182" refid="group__collection_1gacfda61f6ab04bc36786ceb00fab70775" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structclass__header" kindref="compound">class_header</ref><sp/>*<sp/><ref refid="group__collection_1gacfda61f6ab04bc36786ceb00fab70775" kindref="member">get_class_header_msg</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>_self,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>message){</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_self<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;get_class_header_msg<sp/>called<sp/>with<sp/>NULL<sp/>object.<sp/>Message:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>message);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(1);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structclass__header" kindref="compound">class_header</ref><sp/>*<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">=<sp/><sp/>*<sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structclass__header" kindref="compound">class_header</ref><sp/>**<sp/>)<sp/>_self;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>class-&gt;magic<sp/>==<sp/><ref refid="object__internal_8h_1a94630370ae389fb1189282fa0742f310" kindref="member">MAGIC</ref>){</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(message)<sp/>{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;%s&quot;</highlight><highlight class="normal">,<sp/>message);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(1);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;get_class_header_msg<sp/>failed<sp/>for<sp/>unknown<sp/>reason&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(1);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="198"><highlight class="normal">}</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201" refid="group__collection_1gabf324b663150d7bbcfe0e3b84b21102f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structclass__header" kindref="compound">class_header</ref><sp/>*<sp/><ref refid="group__collection_1gabf324b663150d7bbcfe0e3b84b21102f" kindref="member">get_obj_type</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>_self,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>message<sp/>){</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structclass__header" kindref="compound">class_header</ref><sp/>*<sp/><ref refid="structclass__header" kindref="compound">class_header</ref><sp/>=<sp/><sp/>*<sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structclass__header" kindref="compound">class_header</ref><sp/>**<sp/>)<sp/>_self;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structclass__header" kindref="compound">class_header</ref><sp/>&amp;&amp;<sp/><ref refid="structclass__header" kindref="compound">class_header</ref>-&gt;<ref refid="structclass__header_1aa98964036010ad63554856c5f4680cec" kindref="member">magic</ref><sp/>==<sp/><ref refid="object__internal_8h_1a94630370ae389fb1189282fa0742f310" kindref="member">MAGIC</ref>){</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structclass__header" kindref="compound">class_header</ref><sp/>==<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(message)<sp/>{</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;%s&quot;</highlight><highlight class="normal">,<sp/>message);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(1);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;get_class_header_msg<sp/>failed<sp/>for<sp/>unknown<sp/>reason&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(1);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal">}</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219" refid="object_8c_1a8837e68ffda149b4f7015cafab0c2a3c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structclass__header" kindref="compound">class_header</ref><sp/>*<sp/><ref refid="object_8c_1a8837e68ffda149b4f7015cafab0c2a3c" kindref="member">get_class_header</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>_self){</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/><sp/>*<sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structclass__header" kindref="compound">class_header</ref><sp/>**<sp/>)<sp/>_self;</highlight></codeline>
<codeline lineno="221"><highlight class="normal">}</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223" refid="group__collection_1gae0b3682e6ff5038e94c9e551bdd0d489" refkind="member"><highlight class="normal">uint64_t<sp/><ref refid="group__collection_1gae0b3682e6ff5038e94c9e551bdd0d489" kindref="member">hash</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>_self)<sp/>{</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="group__collection_1gacfda61f6ab04bc36786ceb00fab70775" kindref="member">get_class_header_msg</ref>(_self,<sp/></highlight><highlight class="stringliteral">&quot;hash<sp/>called<sp/>with<sp/>invalid<sp/>object&quot;</highlight><highlight class="normal">)){</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structclass__header" kindref="compound">class_header</ref><sp/>*<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>=<sp/><ref refid="object_8c_1a8837e68ffda149b4f7015cafab0c2a3c" kindref="member">get_class_header</ref>(_self);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;hash(_self)<sp/>;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="230"><highlight class="normal">}</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232" refid="group__collection_1ga6b0c20cd48a1ab79321a018d29037161" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/><ref refid="group__collection_1ga6b0c20cd48a1ab79321a018d29037161" kindref="member">set_item</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*_self,</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*_key,</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*_other)<sp/>{</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="group__collection_1gacfda61f6ab04bc36786ceb00fab70775" kindref="member">get_class_header_msg</ref>(_self,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>insert<sp/>into<sp/>non<sp/>collection\n&quot;</highlight><highlight class="normal">)){</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structclass__header" kindref="compound">class_header</ref><sp/>*<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>=<sp/><ref refid="object_8c_1a8837e68ffda149b4f7015cafab0c2a3c" kindref="member">get_class_header</ref>(_self);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(self-&gt;insert);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;insert(_self,<sp/>_key,<sp/>_other)<sp/>;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="242"><highlight class="normal">}</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244" refid="group__collection_1ga8b99290b943601321e5bf291daecaae3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__collection_1ga8b99290b943601321e5bf291daecaae3" kindref="member">del_item</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>_self,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>_key)<sp/>{</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="group__collection_1gacfda61f6ab04bc36786ceb00fab70775" kindref="member">get_class_header_msg</ref>(_self,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>get<sp/>from<sp/>non<sp/>collection\n&quot;</highlight><highlight class="normal">)){</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structclass__header" kindref="compound">class_header</ref><sp/>*<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>=<sp/><ref refid="object_8c_1a8837e68ffda149b4f7015cafab0c2a3c" kindref="member">get_class_header</ref>(_self);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(self-&gt;del_item)<sp/>{</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;del_item(_self,<sp/>_key);</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;TypeError:<sp/>object<sp/>does<sp/>not<sp/>support<sp/>del.<sp/>\n&quot;</highlight><highlight class="normal">)<sp/>;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(1);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>;</highlight></codeline>
<codeline lineno="255"><highlight class="normal">}</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257" refid="group__collection_1gaa467fc1e6a3036f13ea20b36a6e672a1" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/><ref refid="group__collection_1gaa467fc1e6a3036f13ea20b36a6e672a1" kindref="member">get_item</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>_self,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>_key<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="group__collection_1gacfda61f6ab04bc36786ceb00fab70775" kindref="member">get_class_header_msg</ref>(_self,<sp/></highlight><highlight class="stringliteral">&quot;get_item<sp/>called<sp/>on<sp/>invalid<sp/>object&quot;</highlight><highlight class="normal">)){</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structclass__header" kindref="compound">class_header</ref><sp/>*<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>=<sp/><ref refid="object_8c_1a8837e68ffda149b4f7015cafab0c2a3c" kindref="member">get_class_header</ref>(_self);</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(self-&gt;get_item<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;%s<sp/>does<sp/>not<sp/>support<sp/>get_item\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="group__common_1gadcc35aece3f8a4c822a9bf2a591f087b" kindref="member">clsname</ref>(_self));</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(EXIT_FAILURE);</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;get_item(_self,<sp/>_key)<sp/>;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="267"><highlight class="normal">}</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269" refid="group__collection_1ga0cb67414335937707c9b92809a10895b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/><ref refid="group__collection_1ga0cb67414335937707c9b92809a10895b" kindref="member">iter</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>_self<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="group__collection_1gacfda61f6ab04bc36786ceb00fab70775" kindref="member">get_class_header_msg</ref>(_self,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>create<sp/>iterator<sp/>from<sp/>non<sp/>collection\n&quot;</highlight><highlight class="normal">)){</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structclass__header" kindref="compound">class_header</ref><sp/>*<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>=<sp/><ref refid="object_8c_1a8837e68ffda149b4f7015cafab0c2a3c" kindref="member">get_class_header</ref>(_self);</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(self-&gt;iter<sp/>==<sp/>NULL<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;Class<sp/>%s<sp/>does<sp/>not<sp/>support<sp/>iteration.\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="group__common_1gadcc35aece3f8a4c822a9bf2a591f087b" kindref="member">clsname</ref>(_self));</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(EXIT_FAILURE);</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;iter(_self)<sp/>;</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="280"><highlight class="normal">}</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282" refid="group__collection_1gaecc46e74b03a83ca8a8023cc7264489c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/><ref refid="group__collection_1gaecc46e74b03a83ca8a8023cc7264489c" kindref="member">next</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>_self<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="group__collection_1gacfda61f6ab04bc36786ceb00fab70775" kindref="member">get_class_header_msg</ref>(_self,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>get<sp/>next<sp/>on<sp/>non<sp/>object\n&quot;</highlight><highlight class="normal">)){</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structclass__header" kindref="compound">class_header</ref><sp/>*<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>=<sp/><ref refid="object_8c_1a8837e68ffda149b4f7015cafab0c2a3c" kindref="member">get_class_header</ref>(_self);</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(self-&gt;next){</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;next(_self)<sp/>;</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="290"><highlight class="normal">}</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="292" refid="object_8c_1a68f404b6502dda7869a76b1ffcb9ffd6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="object_8c_1a68f404b6502dda7869a76b1ffcb9ffd6" kindref="member">keys</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;wtata&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal">}</highlight></codeline>
<codeline lineno="296" refid="object_8c_1a413d87a43c15a9b014d672a91d8a1cd3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="object_8c_1a413d87a43c15a9b014d672a91d8a1cd3" kindref="member">values</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*_self)<sp/>{</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/Users/igutek/Documents/Projects/ooc/src/object.c"/>
  </compounddef>
</doxygen>
