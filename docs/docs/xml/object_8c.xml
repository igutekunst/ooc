<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="object_8c" kind="file" language="C++">
    <compoundname>object.c</compoundname>
    <includes local="no">assert.h</includes>
    <includes refid="object_8h" local="no">ooc/object.h</includes>
    <includes refid="object__internal_8h" local="yes">object_internal.h</includes>
    <incdepgraph>
      <node id="145">
        <label>stdbool.h</label>
      </node>
      <node id="144">
        <label>stdarg.h</label>
      </node>
      <node id="138">
        <label>/Users/igutek/Documents/Projects/ooc/src/object.c</label>
        <link refid="object_8c"/>
        <childnode refid="139" relation="include">
        </childnode>
        <childnode refid="140" relation="include">
        </childnode>
        <childnode refid="147" relation="include">
        </childnode>
      </node>
      <node id="139">
        <label>assert.h</label>
      </node>
      <node id="146">
        <label>stdint.h</label>
      </node>
      <node id="143">
        <label>stdlib.h</label>
      </node>
      <node id="147">
        <label>object_internal.h</label>
        <link refid="object__internal_8h"/>
        <childnode refid="146" relation="include">
        </childnode>
        <childnode refid="143" relation="include">
        </childnode>
        <childnode refid="144" relation="include">
        </childnode>
        <childnode refid="145" relation="include">
        </childnode>
      </node>
      <node id="141">
        <label>stddef.h</label>
      </node>
      <node id="140">
        <label>ooc/object.h</label>
        <link refid="object_8h"/>
        <childnode refid="141" relation="include">
        </childnode>
        <childnode refid="142" relation="include">
        </childnode>
        <childnode refid="143" relation="include">
        </childnode>
        <childnode refid="144" relation="include">
        </childnode>
        <childnode refid="145" relation="include">
        </childnode>
        <childnode refid="146" relation="include">
        </childnode>
      </node>
      <node id="142">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="object_8c_1a48931ea75855e6980404ced5938a79ec" prot="public" static="no" mutable="no">
        <type>const struct <ref refid="structclass__header" kindref="compound">class_header</ref></type>
        <definition>const struct class_header Class</definition>
        <argsstring></argsstring>
        <name>Class</name>
        <initializer>= {
   .magic = <ref refid="object__internal_8h_1a94630370ae389fb1189282fa0742f310" kindref="member">MAGIC</ref>
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/igutek/Documents/Projects/ooc/src/object.c" line="8" column="1" bodyfile="/Users/igutek/Documents/Projects/ooc/src/object.c" bodystart="5" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__common_1ga621d73ced80293aaecd6839e6bdec30d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const void *</type>
        <definition>const void* new</definition>
        <argsstring>(const void *const _class,...)</argsstring>
        <name>new</name>
        <param>
          <type>const void *const</type>
          <declname>_class</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
<para>Create a new ooc object. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_class</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>...</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/igutek/Documents/Projects/ooc/src/object.c" line="15" column="1" bodyfile="/Users/igutek/Documents/Projects/ooc/src/object.c" bodystart="15" bodyend="31"/>
        <references refid="object__internal_8h_1a94630370ae389fb1189282fa0742f310" compoundref="object__internal_8h" startline="6">MAGIC</references>
      </memberdef>
      <memberdef kind="function" id="group__common_1gae293fe2fbbf9f2e8a87c1141e7412814" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void del</definition>
        <argsstring>(const void *_object)</argsstring>
        <name>del</name>
        <param>
          <type>const void *</type>
          <declname>_object</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/igutek/Documents/Projects/ooc/src/object.c" line="34" column="1" bodyfile="/Users/igutek/Documents/Projects/ooc/src/object.c" bodystart="34" bodyend="43"/>
        <references refid="group__collection_1gaaad95663edf19fd4b734bd9977976169" compoundref="object_8c" startline="164" endline="177">get_obj</references>
        <references refid="structclass__header_1aa07a11a17f5d79a66c9086b8d10969b7" compoundref="object__internal_8h" startline="59">class_header::object_deinit</references>
      </memberdef>
      <memberdef kind="function" id="object_8c_1a317798c33e05ea3ca01d0a70148f61ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* str</definition>
        <argsstring>(const void *_self)</argsstring>
        <name>str</name>
        <param>
          <type>const void *</type>
          <declname>_object</declname>
          <defname>_self</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>End of Common functions </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/igutek/Documents/Projects/ooc/src/object.c" line="46" column="1" bodyfile="/Users/igutek/Documents/Projects/ooc/src/object.c" bodystart="46" bodyend="56"/>
        <references refid="group__collection_1gaaad95663edf19fd4b734bd9977976169" compoundref="object_8c" startline="164" endline="177">get_obj</references>
        <references refid="structclass__header_1af8a0a6de1e1eb96faab68cc58fcf84d0" compoundref="object__internal_8h" startline="78">class_header::str</references>
        <referencedby refid="hashmap_8c_1aa88aa2ed0651f4feb2e275ba14114d14" compoundref="hashmap_8c" startline="343" endline="375">get_HashMap</referencedby>
        <referencedby refid="hashmap_8c_1a2987322764f770f61fe71f0a1320fc7b" compoundref="hashmap_8c" startline="324" endline="341">insert_HashMap</referencedby>
        <referencedby refid="string_8c_1a1908c7dc8629ec342445a6e2a7c247f2" compoundref="string_8c" startline="97" endline="107">String_equal</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__common_1ga34dc6ab72cfd51381e8173226484e827" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void print</definition>
        <argsstring>(const void *_self)</argsstring>
        <name>print</name>
        <param>
          <type>const void *</type>
          <declname>_self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/igutek/Documents/Projects/ooc/src/object.c" line="59" column="1" bodyfile="/Users/igutek/Documents/Projects/ooc/src/object.c" bodystart="59" bodyend="69"/>
        <references refid="group__collection_1gaaad95663edf19fd4b734bd9977976169" compoundref="object_8c" startline="164" endline="177">get_obj</references>
        <references refid="structclass__header_1a23181c1eac1455a8f23dd9d14f8b6abd" compoundref="object__internal_8h" startline="65">class_header::print</references>
        <referencedby refid="main_8c_1a0ddf1224851353fc92bfbff6f499fa97" compoundref="main_8c" startline="8" endline="43">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__common_1gafac8564ed88a6f8585f043fc6b2fa7e1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t size</definition>
        <argsstring>(const void *_self)</argsstring>
        <name>size</name>
        <param>
          <type>const void *</type>
          <declname>_self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/igutek/Documents/Projects/ooc/src/object.c" line="72" column="1" bodyfile="/Users/igutek/Documents/Projects/ooc/src/object.c" bodystart="72" bodyend="80"/>
        <references refid="group__collection_1gaaad95663edf19fd4b734bd9977976169" compoundref="object_8c" startline="164" endline="177">get_obj</references>
        <references refid="structclass__header_1a5c135b5316d0d9d22dce1f32fb8befb1" compoundref="object__internal_8h" startline="30">class_header::get_size</references>
        <referencedby refid="person_8c_1a479eaa947f7de8878921d30df63875eb" compoundref="person_8c" startline="29" endline="46">__construct__Person</referencedby>
        <referencedby refid="string_8c_1a2e1266f696c96e5bfd8ffbed7be891fa" compoundref="string_8c" startline="24" endline="41">__construct__String</referencedby>
        <referencedby refid="string_8c_1ad84cbc93082cb73a0aeb9911e2768c90" compoundref="string_8c" startline="56" endline="94">String_append</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__common_1ga68940c707bbebe6946aeca72df1ee803" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const void *</type>
        <definition>const void* type</definition>
        <argsstring>(const void *_self)</argsstring>
        <name>type</name>
        <param>
          <type>const void *</type>
          <declname>self</declname>
          <defname>_self</defname>
        </param>
        <briefdescription>
<para>get ooc class object </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>ooc object </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>ooc class of a given ooc object </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/igutek/Documents/Projects/ooc/src/object.c" line="83" column="1" bodyfile="/Users/igutek/Documents/Projects/ooc/src/object.c" bodystart="83" bodyend="88"/>
        <references refid="group__collection_1gaaad95663edf19fd4b734bd9977976169" compoundref="object_8c" startline="164" endline="177">get_obj</references>
        <referencedby refid="string_8c_1ad84cbc93082cb73a0aeb9911e2768c90" compoundref="string_8c" startline="56" endline="94">String_append</referencedby>
        <referencedby refid="string_8c_1a1908c7dc8629ec342445a6e2a7c247f2" compoundref="string_8c" startline="97" endline="107">String_equal</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__common_1ga15be7f4a5b9c979feb83b76278f6716c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t len</definition>
        <argsstring>(const void *_self)</argsstring>
        <name>len</name>
        <param>
          <type>const void *</type>
          <declname>_self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/igutek/Documents/Projects/ooc/src/object.c" line="91" column="1" bodyfile="/Users/igutek/Documents/Projects/ooc/src/object.c" bodystart="91" bodyend="102"/>
        <references refid="group__collection_1gaaad95663edf19fd4b734bd9977976169" compoundref="object_8c" startline="164" endline="177">get_obj</references>
        <references refid="structclass__header_1a1b7cb949741b9a64fd3569af94f30cba" compoundref="object__internal_8h" startline="37">class_header::get_len</references>
        <referencedby refid="string_8c_1a2e1266f696c96e5bfd8ffbed7be891fa" compoundref="string_8c" startline="24" endline="41">__construct__String</referencedby>
        <referencedby refid="string_8c_1ad84cbc93082cb73a0aeb9911e2768c90" compoundref="string_8c" startline="56" endline="94">String_append</referencedby>
        <referencedby refid="string_8c_1a0861087e40ab0649cb2c5ce91798171b" compoundref="string_8c" startline="115" endline="124">FNV32</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__common_1gadcc35aece3f8a4c822a9bf2a591f087b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* clsname</definition>
        <argsstring>(const void *_self)</argsstring>
        <name>clsname</name>
        <param>
          <type>const void *</type>
          <declname>_self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/igutek/Documents/Projects/ooc/src/object.c" line="105" column="1" bodyfile="/Users/igutek/Documents/Projects/ooc/src/object.c" bodystart="105" bodyend="116"/>
        <references refid="group__collection_1gaaad95663edf19fd4b734bd9977976169" compoundref="object_8c" startline="164" endline="177">get_obj</references>
        <references refid="structclass__header_1af7f2f5623c98afb59519062172644350" compoundref="object__internal_8h" startline="204">class_header::object_name</references>
        <referencedby refid="main_8c_1a0ddf1224851353fc92bfbff6f499fa97" compoundref="main_8c" startline="8" endline="43">main</referencedby>
        <referencedby refid="string_8c_1a1908c7dc8629ec342445a6e2a7c247f2" compoundref="string_8c" startline="97" endline="107">String_equal</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__common_1gab08ed4d7b5aa115383f38057e006be9d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const void *</type>
        <definition>const void* copy</definition>
        <argsstring>(const void *_self)</argsstring>
        <name>copy</name>
        <param>
          <type>const void *</type>
          <declname>_self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/igutek/Documents/Projects/ooc/src/object.c" line="121" column="1" bodyfile="/Users/igutek/Documents/Projects/ooc/src/object.c" bodystart="121" bodyend="132"/>
        <references refid="group__collection_1gaaad95663edf19fd4b734bd9977976169" compoundref="object_8c" startline="164" endline="177">get_obj</references>
        <references refid="structclass__header_1a26ec3e94c98bf5d3eff10d37cf2696ef" compoundref="object__internal_8h" startline="134">class_header::copy</references>
        <referencedby refid="main_8c_1a0ddf1224851353fc92bfbff6f499fa97" compoundref="main_8c" startline="8" endline="43">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__common_1ga4b83176929aeea62524d2a126d3c897f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool equals</definition>
        <argsstring>(const void *_self, const void *_other)</argsstring>
        <name>equals</name>
        <param>
          <type>const void *</type>
          <declname>_self</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>_other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/igutek/Documents/Projects/ooc/src/object.c" line="135" column="1" bodyfile="/Users/igutek/Documents/Projects/ooc/src/object.c" bodystart="135" bodyend="148"/>
        <references refid="group__collection_1gaaad95663edf19fd4b734bd9977976169" compoundref="object_8c" startline="164" endline="177">get_obj</references>
        <referencedby refid="hashmap_8c_1a8aa67d2dac0692c1128b50780ad9dfc1" compoundref="hashmap_8c" startline="107" endline="150">internal_insert_HashMap</referencedby>
        <referencedby refid="hashmap_8c_1aa88aa2ed0651f4feb2e275ba14114d14" compoundref="hashmap_8c" startline="343" endline="375">get_HashMap</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__collection_1ga2bd4216bcf1d5810032394f57fbf5c2f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const void *</type>
        <definition>const void* append</definition>
        <argsstring>(const void *_self, const void *_other)</argsstring>
        <name>append</name>
        <param>
          <type>const void *</type>
          <declname>_self</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>_other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/igutek/Documents/Projects/ooc/src/object.c" line="150" column="1" bodyfile="/Users/igutek/Documents/Projects/ooc/src/object.c" bodystart="150" bodyend="161"/>
        <references refid="group__collection_1gaaad95663edf19fd4b734bd9977976169" compoundref="object_8c" startline="164" endline="177">get_obj</references>
        <references refid="structclass__header_1a10e4c230bf810df38e3581caabad02bb" compoundref="object__internal_8h" startline="101">class_header::append</references>
      </memberdef>
      <memberdef kind="function" id="group__collection_1gaaad95663edf19fd4b734bd9977976169" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>struct <ref refid="structclass__header" kindref="compound">class_header</ref> *</type>
        <definition>struct class_header* get_obj</definition>
        <argsstring>(const void *_self, const char *message)</argsstring>
        <name>get_obj</name>
        <param>
          <type>const void *</type>
          <declname>_self</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>message</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/igutek/Documents/Projects/ooc/src/object.c" line="164" column="1" bodyfile="/Users/igutek/Documents/Projects/ooc/src/object.c" bodystart="164" bodyend="177"/>
        <references refid="object__internal_8h_1a94630370ae389fb1189282fa0742f310" compoundref="object__internal_8h" startline="6">MAGIC</references>
        <referencedby refid="hashmap_8c_1a2987322764f770f61fe71f0a1320fc7b" compoundref="hashmap_8c" startline="324" endline="341">insert_HashMap</referencedby>
        <referencedby refid="hashmap_8c_1aa88aa2ed0651f4feb2e275ba14114d14" compoundref="hashmap_8c" startline="343" endline="375">get_HashMap</referencedby>
        <referencedby refid="hashmap_8c_1a10476d872d0cfcb234391cabf5e888a1" compoundref="hashmap_8c" startline="378" endline="448">del_item_HashMap</referencedby>
        <referencedby refid="group__common_1gae293fe2fbbf9f2e8a87c1141e7412814" compoundref="object_8c" startline="34" endline="43">del</referencedby>
        <referencedby refid="object_8h_1a6ab4b3e256d10044340c1f861c031438" compoundref="object_8c" startline="46" endline="56">str</referencedby>
        <referencedby refid="group__common_1ga34dc6ab72cfd51381e8173226484e827" compoundref="object_8c" startline="59" endline="69">print</referencedby>
        <referencedby refid="group__common_1gafac8564ed88a6f8585f043fc6b2fa7e1" compoundref="object_8c" startline="72" endline="80">size</referencedby>
        <referencedby refid="group__common_1ga68940c707bbebe6946aeca72df1ee803" compoundref="object_8c" startline="83" endline="88">type</referencedby>
        <referencedby refid="group__common_1ga15be7f4a5b9c979feb83b76278f6716c" compoundref="object_8c" startline="91" endline="102">len</referencedby>
        <referencedby refid="group__common_1gadcc35aece3f8a4c822a9bf2a591f087b" compoundref="object_8c" startline="105" endline="116">clsname</referencedby>
        <referencedby refid="group__common_1gab08ed4d7b5aa115383f38057e006be9d" compoundref="object_8c" startline="121" endline="132">copy</referencedby>
        <referencedby refid="group__common_1ga4b83176929aeea62524d2a126d3c897f" compoundref="object_8c" startline="135" endline="148">equals</referencedby>
        <referencedby refid="group__collection_1ga2bd4216bcf1d5810032394f57fbf5c2f" compoundref="object_8c" startline="150" endline="161">append</referencedby>
        <referencedby refid="group__collection_1gae0b3682e6ff5038e94c9e551bdd0d489" compoundref="object_8c" startline="184" endline="191">hash</referencedby>
        <referencedby refid="group__collection_1gaa1b700b0fbad0b56b81291260569d8b2" compoundref="object_8c" startline="193" endline="203">insert</referencedby>
        <referencedby refid="group__collection_1ga8b99290b943601321e5bf291daecaae3" compoundref="object_8c" startline="205" endline="216">del_item</referencedby>
        <referencedby refid="group__collection_1gaa467fc1e6a3036f13ea20b36a6e672a1" compoundref="object_8c" startline="218" endline="225">get_item</referencedby>
        <referencedby refid="group__collection_1ga0cb67414335937707c9b92809a10895b" compoundref="object_8c" startline="227" endline="234">iter</referencedby>
        <referencedby refid="group__collection_1gaecc46e74b03a83ca8a8023cc7264489c" compoundref="object_8c" startline="236" endline="244">next</referencedby>
      </memberdef>
      <memberdef kind="function" id="object_8c_1a8837e68ffda149b4f7015cafab0c2a3c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const struct <ref refid="structclass__header" kindref="compound">class_header</ref> *</type>
        <definition>const struct class_header* get_class_header</definition>
        <argsstring>(const void *_self)</argsstring>
        <name>get_class_header</name>
        <param>
          <type>const void *</type>
          <declname>_self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/igutek/Documents/Projects/ooc/src/object.c" line="180" column="1" bodyfile="/Users/igutek/Documents/Projects/ooc/src/object.c" bodystart="180" bodyend="182"/>
        <referencedby refid="group__collection_1ga8b99290b943601321e5bf291daecaae3" compoundref="object_8c" startline="205" endline="216">del_item</referencedby>
        <referencedby refid="hashmap_8c_1aa88aa2ed0651f4feb2e275ba14114d14" compoundref="hashmap_8c" startline="343" endline="375">get_HashMap</referencedby>
        <referencedby refid="group__collection_1gaa467fc1e6a3036f13ea20b36a6e672a1" compoundref="object_8c" startline="218" endline="225">get_item</referencedby>
        <referencedby refid="group__collection_1gae0b3682e6ff5038e94c9e551bdd0d489" compoundref="object_8c" startline="184" endline="191">hash</referencedby>
        <referencedby refid="group__collection_1gaa1b700b0fbad0b56b81291260569d8b2" compoundref="object_8c" startline="193" endline="203">insert</referencedby>
        <referencedby refid="hashmap_8c_1a2987322764f770f61fe71f0a1320fc7b" compoundref="hashmap_8c" startline="324" endline="341">insert_HashMap</referencedby>
        <referencedby refid="hashmap_8c_1a8aa67d2dac0692c1128b50780ad9dfc1" compoundref="hashmap_8c" startline="107" endline="150">internal_insert_HashMap</referencedby>
        <referencedby refid="group__collection_1ga0cb67414335937707c9b92809a10895b" compoundref="object_8c" startline="227" endline="234">iter</referencedby>
        <referencedby refid="group__collection_1gaecc46e74b03a83ca8a8023cc7264489c" compoundref="object_8c" startline="236" endline="244">next</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__collection_1gae0b3682e6ff5038e94c9e551bdd0d489" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint64_t</type>
        <definition>uint64_t hash</definition>
        <argsstring>(const void *_self)</argsstring>
        <name>hash</name>
        <param>
          <type>const void *</type>
          <declname>_self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/igutek/Documents/Projects/ooc/src/object.c" line="184" column="1" bodyfile="/Users/igutek/Documents/Projects/ooc/src/object.c" bodystart="184" bodyend="191"/>
        <references refid="group__collection_1gaaad95663edf19fd4b734bd9977976169" compoundref="object_8c" startline="164" endline="177">get_obj</references>
        <references refid="object_8c_1a8837e68ffda149b4f7015cafab0c2a3c" compoundref="object_8c" startline="180" endline="182">get_class_header</references>
        <referencedby refid="string_8c_1a0861087e40ab0649cb2c5ce91798171b" compoundref="string_8c" startline="115" endline="124">FNV32</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__collection_1gaa1b700b0fbad0b56b81291260569d8b2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* insert</definition>
        <argsstring>(const void *_self, const void *_key, const void *_other)</argsstring>
        <name>insert</name>
        <param>
          <type>const void *</type>
          <declname>_self</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>_key</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>_other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/igutek/Documents/Projects/ooc/src/object.c" line="193" column="1" bodyfile="/Users/igutek/Documents/Projects/ooc/src/object.c" bodystart="193" bodyend="203"/>
        <references refid="group__collection_1gaaad95663edf19fd4b734bd9977976169" compoundref="object_8c" startline="164" endline="177">get_obj</references>
        <references refid="object_8c_1a8837e68ffda149b4f7015cafab0c2a3c" compoundref="object_8c" startline="180" endline="182">get_class_header</references>
        <referencedby refid="main_8c_1a0ddf1224851353fc92bfbff6f499fa97" compoundref="main_8c" startline="8" endline="43">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__collection_1ga8b99290b943601321e5bf291daecaae3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void del_item</definition>
        <argsstring>(const void *_self, const void *_key)</argsstring>
        <name>del_item</name>
        <param>
          <type>const void *</type>
          <declname>_self</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>_key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/igutek/Documents/Projects/ooc/src/object.c" line="205" column="1" bodyfile="/Users/igutek/Documents/Projects/ooc/src/object.c" bodystart="205" bodyend="216"/>
        <references refid="group__collection_1gaaad95663edf19fd4b734bd9977976169" compoundref="object_8c" startline="164" endline="177">get_obj</references>
        <references refid="object_8c_1a8837e68ffda149b4f7015cafab0c2a3c" compoundref="object_8c" startline="180" endline="182">get_class_header</references>
      </memberdef>
      <memberdef kind="function" id="group__collection_1gaa467fc1e6a3036f13ea20b36a6e672a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const void *</type>
        <definition>const void* get_item</definition>
        <argsstring>(const void *_self, const void *_key)</argsstring>
        <name>get_item</name>
        <param>
          <type>const void *</type>
          <declname>_self</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>_key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/igutek/Documents/Projects/ooc/src/object.c" line="218" column="1" bodyfile="/Users/igutek/Documents/Projects/ooc/src/object.c" bodystart="218" bodyend="225"/>
        <references refid="group__collection_1gaaad95663edf19fd4b734bd9977976169" compoundref="object_8c" startline="164" endline="177">get_obj</references>
        <references refid="object_8c_1a8837e68ffda149b4f7015cafab0c2a3c" compoundref="object_8c" startline="180" endline="182">get_class_header</references>
      </memberdef>
      <memberdef kind="function" id="group__collection_1ga0cb67414335937707c9b92809a10895b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const void *</type>
        <definition>const void* iter</definition>
        <argsstring>(const void *_self)</argsstring>
        <name>iter</name>
        <param>
          <type>const void *</type>
          <declname>_self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/igutek/Documents/Projects/ooc/src/object.c" line="227" column="1" bodyfile="/Users/igutek/Documents/Projects/ooc/src/object.c" bodystart="227" bodyend="234"/>
        <references refid="group__collection_1gaaad95663edf19fd4b734bd9977976169" compoundref="object_8c" startline="164" endline="177">get_obj</references>
        <references refid="object_8c_1a8837e68ffda149b4f7015cafab0c2a3c" compoundref="object_8c" startline="180" endline="182">get_class_header</references>
        <referencedby refid="main_8c_1a0ddf1224851353fc92bfbff6f499fa97" compoundref="main_8c" startline="8" endline="43">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__collection_1gaecc46e74b03a83ca8a8023cc7264489c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const void *</type>
        <definition>const void* next</definition>
        <argsstring>(const void *_self)</argsstring>
        <name>next</name>
        <param>
          <type>const void *</type>
          <declname>_self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/igutek/Documents/Projects/ooc/src/object.c" line="236" column="1" bodyfile="/Users/igutek/Documents/Projects/ooc/src/object.c" bodystart="236" bodyend="244"/>
        <references refid="group__collection_1gaaad95663edf19fd4b734bd9977976169" compoundref="object_8c" startline="164" endline="177">get_obj</references>
        <references refid="object_8c_1a8837e68ffda149b4f7015cafab0c2a3c" compoundref="object_8c" startline="180" endline="182">get_class_header</references>
        <referencedby refid="main_8c_1a0ddf1224851353fc92bfbff6f499fa97" compoundref="main_8c" startline="8" endline="43">main</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;assert.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="object_8h" kindref="compound">ooc/object.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="object__internal_8h" kindref="compound">object_internal.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5" refid="object_8h_1a48931ea75855e6980404ced5938a79ec" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structclass__header" kindref="compound">class_header</ref><sp/><ref refid="object_8c_1a48931ea75855e6980404ced5938a79ec" kindref="member">Class</ref><sp/>=<sp/>{</highlight></codeline>
<codeline lineno="6"><highlight class="normal"><sp/><sp/><sp/>.<ref refid="structclass__header_1aa98964036010ad63554856c5f4680cec" kindref="member">magic</ref><sp/>=<sp/><ref refid="object__internal_8h_1a94630370ae389fb1189282fa0742f310" kindref="member">MAGIC</ref></highlight></codeline>
<codeline lineno="7"><highlight class="normal">};</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="15" refid="group__common_1ga621d73ced80293aaecd6839e6bdec30d" refkind="member"><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>_class,<sp/>...)<sp/>{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structclass__header" kindref="compound">class_header</ref><sp/>*<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">=<sp/>(struct<sp/><ref refid="structclass__header" kindref="compound">class_header</ref><sp/>*<sp/>)<sp/>_class;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>||<sp/>class-&gt;magic<sp/>!=<sp/><ref refid="object__internal_8h_1a94630370ae389fb1189282fa0742f310" kindref="member">MAGIC</ref>){</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;new<sp/>called<sp/>with<sp/>invalid<sp/>class\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(1);</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>new_object<sp/>=<sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structclass__header" kindref="compound">class_header</ref><sp/>*)<sp/>malloc(class-&gt;size);</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>va_list<sp/>vl;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(class-&gt;object_init){</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>va_start(vl,<sp/>_class);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_object<sp/>=<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">-&gt;object_init(new_object,<sp/>vl);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>va_end(vl);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;No<sp/>default<sp/>constructor.<sp/>Allocating<sp/>%zu<sp/>bytes\n&quot;</highlight><highlight class="normal">,<sp/>class-&gt;size)<sp/>;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>new_object;</highlight></codeline>
<codeline lineno="31"><highlight class="normal">}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="group__common_1gae293fe2fbbf9f2e8a87c1141e7412814" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__common_1gae293fe2fbbf9f2e8a87c1141e7412814" kindref="member">del</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*_object){</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structclass__header" kindref="compound">class_header</ref><sp/>*<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>=<sp/><ref refid="group__collection_1gaaad95663edf19fd4b734bd9977976169" kindref="member">get_obj</ref>(_object,<sp/></highlight><highlight class="stringliteral">&quot;Attempt<sp/>to<sp/>delete<sp/>non<sp/>object\n&quot;</highlight><highlight class="normal">)))<sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>class-&gt;object_deinit)<sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">-&gt;<ref refid="structclass__header_1aa07a11a17f5d79a66c9086b8d10969b7" kindref="member">object_deinit</ref>(_object);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)<sp/>_object)<sp/>;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="43"><highlight class="normal">}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46" refid="object_8h_1a6ab4b3e256d10044340c1f861c031438" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/><sp/><ref refid="object_8c_1a317798c33e05ea3ca01d0a70148f61ad" kindref="member">str</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>_self){</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structclass__header" kindref="compound">class_header</ref><sp/>*<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>=<sp/><ref refid="group__collection_1gaaad95663edf19fd4b734bd9977976169" kindref="member">get_obj</ref>(_self,</highlight><highlight class="stringliteral">&quot;Attempted<sp/>to<sp/>print<sp/>non<sp/>object\n&quot;</highlight><highlight class="normal"><sp/>)))<sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(class-&gt;str){</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">-&gt;<ref refid="structclass__header_1af8a0a6de1e1eb96faab68cc58fcf84d0" kindref="member">str</ref>(_self);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Object&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="56"><highlight class="normal">}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59" refid="group__common_1ga34dc6ab72cfd51381e8173226484e827" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__common_1ga34dc6ab72cfd51381e8173226484e827" kindref="member">print</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>_self){</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structclass__header" kindref="compound">class_header</ref><sp/>*<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>=<sp/><ref refid="group__collection_1gaaad95663edf19fd4b734bd9977976169" kindref="member">get_obj</ref>(_self,</highlight><highlight class="stringliteral">&quot;Attempted<sp/>to<sp/>print<sp/>non<sp/>object\n&quot;</highlight><highlight class="normal"><sp/>)))<sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(class-&gt;print)<sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">-&gt;<ref refid="structclass__header_1a23181c1eac1455a8f23dd9d14f8b6abd" kindref="member">print</ref>(_self);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(class-&gt;str)<sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;%s&quot;</highlight><highlight class="normal">,<sp/>class-&gt;str(_self));</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Object<sp/>at<sp/>%p\n&quot;</highlight><highlight class="normal">,<sp/>_self);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal">}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72" refid="group__common_1gafac8564ed88a6f8585f043fc6b2fa7e1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="group__common_1gafac8564ed88a6f8585f043fc6b2fa7e1" kindref="member">size</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>_self)<sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structclass__header" kindref="compound">class_header</ref><sp/>*<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>=<sp/><ref refid="group__collection_1gaaad95663edf19fd4b734bd9977976169" kindref="member">get_obj</ref>(_self,</highlight><highlight class="stringliteral">&quot;Attempted<sp/>to<sp/>get<sp/>type<sp/>of<sp/>non<sp/>object\n&quot;</highlight><highlight class="normal"><sp/>)))<sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(class-&gt;get_size)</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">-&gt;<ref refid="structclass__header_1a5c135b5316d0d9d22dce1f32fb8befb1" kindref="member">get_size</ref>(_self);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">-&gt;size;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="80"><highlight class="normal">}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83" refid="group__common_1ga68940c707bbebe6946aeca72df1ee803" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/><ref refid="group__common_1ga68940c707bbebe6946aeca72df1ee803" kindref="member">type</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>_self){</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structclass__header" kindref="compound">class_header</ref><sp/>*<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>=<sp/><ref refid="group__collection_1gaaad95663edf19fd4b734bd9977976169" kindref="member">get_obj</ref>(_self,</highlight><highlight class="stringliteral">&quot;Attempted<sp/>to<sp/>get<sp/>type<sp/>of<sp/>non<sp/>object\n&quot;</highlight><highlight class="normal"><sp/>)))</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*<sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structclass__header" kindref="compound">class_header</ref><sp/>**)<sp/>_self;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="88"><highlight class="normal">}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91" refid="group__common_1ga15be7f4a5b9c979feb83b76278f6716c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="group__common_1ga15be7f4a5b9c979feb83b76278f6716c" kindref="member">len</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>_self)<sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structclass__header" kindref="compound">class_header</ref><sp/>*<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>=<sp/><ref refid="group__collection_1gaaad95663edf19fd4b734bd9977976169" kindref="member">get_obj</ref>(_self,</highlight><highlight class="stringliteral">&quot;Attempted<sp/>to<sp/>get<sp/>len<sp/>of<sp/>non<sp/>object\n&quot;</highlight><highlight class="normal"><sp/>)))<sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(class-&gt;get_len)<sp/></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">-&gt;<ref refid="structclass__header_1a1b7cb949741b9a64fd3569af94f30cba" kindref="member">get_len</ref>(_self);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;TypeError:<sp/>object<sp/>does<sp/>not<sp/>support<sp/>len\n&quot;</highlight><highlight class="normal">)<sp/>;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(1);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="102"><highlight class="normal">}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105" refid="group__common_1gadcc35aece3f8a4c822a9bf2a591f087b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="group__common_1gadcc35aece3f8a4c822a9bf2a591f087b" kindref="member">clsname</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>_self)<sp/>{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structclass__header" kindref="compound">class_header</ref><sp/>*<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>=<sp/><ref refid="group__collection_1gaaad95663edf19fd4b734bd9977976169" kindref="member">get_obj</ref>(_self,</highlight><highlight class="stringliteral">&quot;Attempted<sp/>to<sp/>get<sp/>name<sp/>of<sp/>invalid<sp/>object\n&quot;</highlight><highlight class="normal"><sp/>)))<sp/>{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(class-&gt;object_name)</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">-&gt;<ref refid="structclass__header_1af7f2f5623c98afb59519062172644350" kindref="member">object_name</ref>;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;TypeError:<sp/>object<sp/>does<sp/>not<sp/>support<sp/>name\n.&quot;</highlight><highlight class="normal">)<sp/>;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(1);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="116"><highlight class="normal">}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121" refid="group__common_1gab08ed4d7b5aa115383f38057e006be9d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/><ref refid="group__common_1gab08ed4d7b5aa115383f38057e006be9d" kindref="member">copy</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>_self)<sp/>{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structclass__header" kindref="compound">class_header</ref><sp/>*<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>=<sp/><ref refid="group__collection_1gaaad95663edf19fd4b734bd9977976169" kindref="member">get_obj</ref>(_self,</highlight><highlight class="stringliteral">&quot;Attempted<sp/>to<sp/>get<sp/>len<sp/>of<sp/>non<sp/>object\n&quot;</highlight><highlight class="normal">))){</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(class-&gt;copy)<sp/></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">-&gt;<ref refid="structclass__header_1a26ec3e94c98bf5d3eff10d37cf2696ef" kindref="member">copy</ref>(_self);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;TypeError:<sp/>object<sp/>does<sp/>not<sp/>support<sp/>copying\n&quot;</highlight><highlight class="normal">)<sp/>;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(1);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="132"><highlight class="normal">}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135" refid="group__common_1ga4b83176929aeea62524d2a126d3c897f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__common_1ga4b83176929aeea62524d2a126d3c897f" kindref="member">equals</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>_self,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>_other){</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structclass__header" kindref="compound">class_header</ref><sp/>*<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structclass__header" kindref="compound">class_header</ref><sp/>*<sp/>other;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>=<sp/><ref refid="group__collection_1gaaad95663edf19fd4b734bd9977976169" kindref="member">get_obj</ref>(_self,</highlight><highlight class="stringliteral">&quot;attempted<sp/>to<sp/>append<sp/>non<sp/>object\n&quot;</highlight><highlight class="normal"><sp/>)))<sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>other<sp/>=<sp/><ref refid="group__collection_1gaaad95663edf19fd4b734bd9977976169" kindref="member">get_obj</ref>(_other,</highlight><highlight class="stringliteral">&quot;attempted<sp/>to<sp/>compare<sp/>non<sp/>object\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(class-&gt;equals){</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">-&gt;equals(_self,<sp/>_other);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_self<sp/>==<sp/>_other;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="148"><highlight class="normal">}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150" refid="group__collection_1ga2bd4216bcf1d5810032394f57fbf5c2f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="group__collection_1ga2bd4216bcf1d5810032394f57fbf5c2f" kindref="member">append</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>_self,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>_other){</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structclass__header" kindref="compound">class_header</ref><sp/>*<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>=<sp/><ref refid="group__collection_1gaaad95663edf19fd4b734bd9977976169" kindref="member">get_obj</ref>(_self,</highlight><highlight class="stringliteral">&quot;Attempted<sp/>to<sp/>append<sp/>non<sp/>object\n&quot;</highlight><highlight class="normal"><sp/>)))<sp/>{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(class-&gt;append)<sp/>{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">-&gt;<ref refid="structclass__header_1a10e4c230bf810df38e3581caabad02bb" kindref="member">append</ref>(_self,<sp/>_other);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;Type<sp/>does<sp/>not<sp/>support<sp/>append\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(EXIT_FAILURE);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="161"><highlight class="normal">}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164" refid="group__collection_1gaaad95663edf19fd4b734bd9977976169" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structclass__header" kindref="compound">class_header</ref><sp/>*<sp/><ref refid="group__collection_1gaaad95663edf19fd4b734bd9977976169" kindref="member">get_obj</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>_self,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>message){</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structclass__header" kindref="compound">class_header</ref><sp/>*<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">=<sp/><sp/>*<sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structclass__header" kindref="compound">class_header</ref><sp/>**<sp/>)<sp/>_self;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>class-&gt;magic<sp/>==<sp/><ref refid="object__internal_8h_1a94630370ae389fb1189282fa0742f310" kindref="member">MAGIC</ref>){</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(message)<sp/>{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;%s&quot;</highlight><highlight class="normal">,<sp/>message);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(1);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;get_obj<sp/>failed<sp/>for<sp/>unknown<sp/>reason&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(1);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal">}</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180" refid="object_8h_1a8837e68ffda149b4f7015cafab0c2a3c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structclass__header" kindref="compound">class_header</ref><sp/>*<sp/><ref refid="object_8c_1a8837e68ffda149b4f7015cafab0c2a3c" kindref="member">get_class_header</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>_self){</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/><sp/>*<sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structclass__header" kindref="compound">class_header</ref><sp/>**<sp/>)<sp/>_self;</highlight></codeline>
<codeline lineno="182"><highlight class="normal">}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184" refid="group__collection_1gae0b3682e6ff5038e94c9e551bdd0d489" refkind="member"><highlight class="normal">uint64_t<sp/><ref refid="group__collection_1gae0b3682e6ff5038e94c9e551bdd0d489" kindref="member">hash</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>_self)<sp/>{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="group__collection_1gaaad95663edf19fd4b734bd9977976169" kindref="member">get_obj</ref>(_self,<sp/></highlight><highlight class="stringliteral">&quot;hash<sp/>called<sp/>with<sp/>invalid<sp/>object&quot;</highlight><highlight class="normal">)){</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structclass__header" kindref="compound">class_header</ref><sp/>*<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>=<sp/><ref refid="object_8c_1a8837e68ffda149b4f7015cafab0c2a3c" kindref="member">get_class_header</ref>(_self);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;hash(_self)<sp/>;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="191"><highlight class="normal">}</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193" refid="group__collection_1gaa1b700b0fbad0b56b81291260569d8b2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/><ref refid="group__collection_1gaa1b700b0fbad0b56b81291260569d8b2" kindref="member">insert</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>_self,<sp/></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>_key,<sp/></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>_other)<sp/>{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="group__collection_1gaaad95663edf19fd4b734bd9977976169" kindref="member">get_obj</ref>(_self,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>insert<sp/>into<sp/>non<sp/>collection\n&quot;</highlight><highlight class="normal">)){</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structclass__header" kindref="compound">class_header</ref><sp/>*<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>=<sp/><ref refid="object_8c_1a8837e68ffda149b4f7015cafab0c2a3c" kindref="member">get_class_header</ref>(_self);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(self-&gt;insert);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;insert(_self,<sp/>_key,<sp/>_other)<sp/>;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="203"><highlight class="normal">}</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205" refid="group__collection_1ga8b99290b943601321e5bf291daecaae3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__collection_1ga8b99290b943601321e5bf291daecaae3" kindref="member">del_item</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>_self,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>_key)<sp/>{</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="group__collection_1gaaad95663edf19fd4b734bd9977976169" kindref="member">get_obj</ref>(_self,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>get<sp/>from<sp/>non<sp/>collection\n&quot;</highlight><highlight class="normal">)){</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structclass__header" kindref="compound">class_header</ref><sp/>*<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>=<sp/><ref refid="object_8c_1a8837e68ffda149b4f7015cafab0c2a3c" kindref="member">get_class_header</ref>(_self);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(self-&gt;del_item)<sp/>{</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;del_item(_self,<sp/>_key);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;TypeError:<sp/>object<sp/>does<sp/>not<sp/>support<sp/>del.<sp/>\n&quot;</highlight><highlight class="normal">)<sp/>;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(1);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>;</highlight></codeline>
<codeline lineno="216"><highlight class="normal">}</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218" refid="group__collection_1gaa467fc1e6a3036f13ea20b36a6e672a1" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/><ref refid="group__collection_1gaa467fc1e6a3036f13ea20b36a6e672a1" kindref="member">get_item</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>_self,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>_key<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="group__collection_1gaaad95663edf19fd4b734bd9977976169" kindref="member">get_obj</ref>(_self,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>get<sp/>from<sp/>non<sp/>collection\n&quot;</highlight><highlight class="normal">)){</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structclass__header" kindref="compound">class_header</ref><sp/>*<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>=<sp/><ref refid="object_8c_1a8837e68ffda149b4f7015cafab0c2a3c" kindref="member">get_class_header</ref>(_self);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(self-&gt;get);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;get(_self,<sp/>_key)<sp/>;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="225"><highlight class="normal">}</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227" refid="group__collection_1ga0cb67414335937707c9b92809a10895b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/><ref refid="group__collection_1ga0cb67414335937707c9b92809a10895b" kindref="member">iter</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>_self<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="group__collection_1gaaad95663edf19fd4b734bd9977976169" kindref="member">get_obj</ref>(_self,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>get<sp/>from<sp/>non<sp/>collection\n&quot;</highlight><highlight class="normal">)){</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structclass__header" kindref="compound">class_header</ref><sp/>*<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>=<sp/><ref refid="object_8c_1a8837e68ffda149b4f7015cafab0c2a3c" kindref="member">get_class_header</ref>(_self);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(self-&gt;iter)</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;iter(_self)<sp/>;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="234"><highlight class="normal">}</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236" refid="group__collection_1gaecc46e74b03a83ca8a8023cc7264489c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/><ref refid="group__collection_1gaecc46e74b03a83ca8a8023cc7264489c" kindref="member">next</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>_self<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="group__collection_1gaaad95663edf19fd4b734bd9977976169" kindref="member">get_obj</ref>(_self,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>get<sp/>next<sp/>on<sp/>non<sp/>object\n&quot;</highlight><highlight class="normal">)){</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structclass__header" kindref="compound">class_header</ref><sp/>*<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>=<sp/><ref refid="object_8c_1a8837e68ffda149b4f7015cafab0c2a3c" kindref="member">get_class_header</ref>(_self);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(self-&gt;next){</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;next(_self)<sp/>;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="244"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/Users/igutek/Documents/Projects/ooc/src/object.c"/>
  </compounddef>
</doxygen>
